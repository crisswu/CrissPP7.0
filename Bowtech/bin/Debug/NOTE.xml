<?xml version="1.0" encoding="utf-8"?>
<NOTE>
  <StarTitle id="22766614" name="C#" type="1">
    <Title id="51881459" name="语法" type="1">
      <Title id="82645212" name="Linq" type="1">
        <Title id="82287313" name="常用查询" type="0">  int[] num = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };

            var item = num.Where(p =&gt; p % 2 == 0).Select(p =&gt; p);
          //var item2 = from nu in num where nu % 2 == 0 select nu; 第二种查询方式 
           
            foreach (var i in item)
            {
                Console.WriteLine(i);
            }

private static DataClassesDataContext dataContext = new DataClassesDataContext();


var r = (from n in context.UserInfo select new { n.ID,n.UserName,n.UserPass});

</Title>
        <Title id="79975429" name="高级查询方法" type="0"> 聚合类 
Count ，Max/Min ，Average
 排序类 
ThenBy
 分区类 
Take ，TakeWhile ，Skip ，SkipWhile
 集合类 
Distinct
 生成类 
Range, Repeat

---------------using System.Linq.Enumerable---------------
---------------------聚合类查询方法-----------------------
int count = (from p in foxRiver8
             where p.Age &lt;= 30
             select p).Count();
★★★ .Count() 可换成 Max(),Min(),Average(),sum() 
---------------------排序查询方法------------------------
var q = foxRiver8
	.OrderBy(p =&gt; p.FirstName)
    	.ThenBy(p =&gt; p.LasName)
    	.ThenBy(p =&gt; p.Age);
---------第二种
var q = from p in foxRiver8
        orderby p.FirstName, p.LasName, p.Age
        select p;
---------------------分区查询方法------------------------
int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
var q = numbers.Skip(1).Take(3);

foreach (var item in q)
{
    Console.WriteLine(item);
}

★★★ 
Take 提取指定数量的项 
Skip 跳过指定数量的项并获取剩余的项

----------指定条件提取
int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
var q = numbers.SkipWhile(i =&gt; i % 3 != 0)
    .TakeWhile(i =&gt; i % 2 != 0); 

foreach (var item in q)
{
    Console.WriteLine(item);
}
★★★
TakeWhile 根据指定条件提取项 
SkipWhile 根据指定条件跳过项

-----------------------集合类查询方法------------------
int[] factorsOf300 = { 2, 2, 3, 5, 5 };

var uniqueFactors = factorsOf300.Distinct();

输出 2 3 5
★★★ 
Distinct 去掉集合中的重复项 

---------------------生成类查询-------------------------
var numbers =Enumerable.Range(1, 10);
foreach (var item in numbers)
{
    Console.WriteLine(item);
}
★★★
Range 生成一个整数序列 
-------------重复项
 var numbers = Enumerable.Repeat("Beijing 2008", 10);
           foreach (var te in numbers)
           {
               Console.WriteLine(te);
           }
★★★
Repeat 生成一个重复项的序列 








</Title>
        <Title id="11087219" name="模糊查询" type="0">//n.Name.StartsWith(Name)－－相当于A%

//n.Name.EndsWith(Name)  －－相当于%A

//n.Name.IndexOf(Name)!=-1 --相当于%A%

.Contains()  是否包含

var r = From file In index 
　Where file.Name Like"%.exe" 
　Select file.FullName</Title>
        <Title id="69852086" name="返回一行一列" type="0">  DataClasses1DataContext dc = new DataClasses1DataContext();
            var stt = from p in dc.A_Affairs  select p;
            MessageBox.Show((stt.ToList&lt;A_Affairs&gt;())[0].AffairName.ToString());
</Title>
        <Title id="ee43bb5b-01fa-442c-993b-59d68cd5aa28" name="查询DataTable" type="0">  var item = from i in Table.AsEnumerable() where i.Field&lt;string&gt;("MatName").Contains(txtMatName.Text) &amp;&amp;
                      i.Field&lt;string&gt;("MatColorName").Contains(txtColorName.Text) &amp;&amp;
                      i.Field&lt;string&gt;("OrderCode").Contains(txtOrderCode.Text) &amp;&amp;
                      i.Field&lt;string&gt;("CustomerStyleCode").Contains(txtCustomer.Text) &amp;&amp;
                      i.Field&lt;string&gt;("CompanyStyleCode").Contains(txtCustomer.Text) 
                       select i;

           if (item.Count&lt;DataRow&gt;() == 0)
            {
                if (((DataTable)grdOne.DataSource) != null)
                    ((DataTable)grdOne.DataSource).Rows.Clear();
            }
            else
            {
                DataTable boundTable = item.CopyToDataTable&lt;DataRow&gt;();
                grdOne.DataSource = boundTable;
            }




这里的.Contains 方法代替了 Like 语句 </Title>
      </Title>
      <Title id="40089551" name="DataTable" type="1">
        <Title id="12670730" name="表 排序" type="0">DataTable table = new DataTable();
table.DefaultView.Sort = "ListNo desc";



ListNo 需要排序的字段名称</Title>
        <Title id="48975550" name="两个DataTable合并" type="0"> DataTable dt = objSize.getColorBySql(sql);
            DataTable source = (DataTable)grColor.DataSource;
            if (source.Rows.Count &gt; 0)
            {
                dt.Merge(source);
            }
            grColor.DataSource = dt;



--------------------two----------------------------

DataTable DataTable1 = new DataTable();    
DataTable DataTable2 = new DataTable();    
DataTable newDataTable = DataTable1.Clone();    
  
object[] obj = new object[newDataTable.Columns.Count];    
for (int i = 0; i &lt; DataTable1.Rows.Count; i++)    
{    
    DataTable1.Rows[i].ItemArray.CopyTo(obj,0);    
    newDataTable.Rows.Add(obj);    
}    
for (int i = 0; i &lt; DataTable2.Rows.Count; i++)    
{    
    DataTable2.Rows[i].ItemArray.CopyTo(obj,0);    
    newDataTable.Rows.Add(obj);    
}   </Title>
        <Title id="99062044" name="手动创建DataTble" type="0">  DataTable dt = new DataTable("dt_dry");//创建一个名为dt_dry的DataTalbe

             dt.Columns.Add(new DataColumn("id",typeof(int)));//为dt_dry表内建立Column

              dt.Columns.Add(new DataColumn("name", typeof(string)));

              dt.Columns.Add(new DataColumn("img",typeof(string)));

              dt.Columns.Add(new DataColumn("timer", typeof(DateTime)));

             DataRow dr = dt.NewRow();//注意这边创建dt的新行的方法。指定类型是DataRow而不是TableRow，然后不用new直接的用创建的DataTable下面的NewRow方法。

              dr["id"] = 1;

              dr["name"] = "AA";

              dr["img"] = "~/img/1.png";

              dr["timer"] = DateTime.Now;

              dt.Rows.Add(dr);

              dr =dt.NewRow();

              dr["id"] = 2;

              dr["name"] = "bb";

              dr["img"] = "~/img/2.png";

              dr["timer"] = DateTime.Now;
 dt.Rows.Add(dr);

              ds.Tables.Add(dt);//</Title>
        <Title id="78f2c69d-1ecc-40ad-85df-e74109c14afd" name="手动添加 类型" type="0">DataColumn colString = new DataColumn("StringCol");
    colString.DataType = System.Type.GetType("System.String");
    myTable.Columns.Add(colString); 
 
    DataColumn colInt32 = new DataColumn("Int32Col");
    colInt32.DataType = System.Type.GetType("System.Int32");
    myTable.Columns.Add(colInt32);
 
    DataColumn colBoolean = new DataColumn("BooleanCol");
    colBoolean.DataType = System.Type.GetType("System.Boolean");
    myTable.Columns.Add(colBoolean);
 
    DataColumn colTimeSpan = new DataColumn("TimeSpanCol");
    colTimeSpan.DataType = System.Type.GetType("System.TimeSpan");
    myTable.Columns.Add(colTimeSpan);
 
    DataColumn colDateTime = new DataColumn("DateTimeCol");
    colDateTime.DataType = System.Type.GetType("System.DateTime");
    myTable.Columns.Add(colDateTime);
 
    DataColumn colDecimal = new DataColumn("DecimalCol");
    colDecimal.DataType = System.Type.GetType("System.Decimal");
    myTable.Columns.Add(colDecimal);</Title>
        <Title id="c6f70ebb-0655-4067-b2ed-c20f5e7e6895" name="删除行判断" type="0">if (dt.Rows[i].RowState == DataRowState.Deleted)
                    {
                        continue;
                    }
                    dt.Rows[i]["Number"] = Count.ToString();
                    Count++;
</Title>
      </Title>
      <Title id="4870498" name="字符串转换枚举类型" type="0">(enum)Enum.Parse(typeof(enum),value)</Title>
      <Title id="19803043" name="中间代码可以缩放" type="0">#region ------ #endregion </Title>
      <Title id="42503388" name="颜色的创建" type="0">Color color = Color.FromArgb(255,222,0);</Title>
      <Title id="95297863" name="Split() 分割字符串" type="0"> char [] cr = {'：',':',':'};
 string time = "12:23:00";
 string[] str = time.Split(cr);

 str[0] == "12";
 str[1] == "23":
 str[2] == "00":
注：这里cr就是按照什么分割</Title>
      <Title id="52912507" name="Paramters参数调用" type="0">1. SqlCommand com = new SqlCommand(sql,connection); 
   com.Parameters.Add("@id", SqlDbType.Int);
   com.Parameters["@id"].Value = Convert.ToIn32(id);

2. SqlParameter[] sp = new SqlParameter[4];
            sp[0]  = new SqlParameter("@uid", SqlDbType.Int);
            sp[0].Value = user.Uid;
      com.Parameters.AddRange(para);</Title>
      <Title id="27340471" name="Replace()替换字符串" type="0">String   Format(String   Str) 
{ 
String   StrTemp; 
StrTemp=Server.HtmlEncode(Str); 
StrTemp.Replace( "/r ", " &lt;dr&gt; "); 
StrTemp.Replace( "/n ", " &lt;dr&gt; "); 
StrTemp.Replace( "/t ", "&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp "); 
StrTemp.Replace( "   ", "&amp;nbsp "); 
return   StrTemp; 
} </Title>
      <Title id="40574246" name="序列化文件" type="0"> using System.Runtime.Serialization.Formatters.Binary;
using System.IO;


FileStream fs = new FileStream("bank.bin", FileMode.OpenOrCreate);
                    BinaryFormatter bf = new BinaryFormatter();
                    bf.Serialize(fs, list);
                    fs.Close();


反序列化 

Stream s = File.Open(@"c:\t2.obj", FileMode.Open, FileAccess.Read);
            BinaryFormatter b = new BinaryFormatter();
            object obj = b.Deserialize(s);</Title>
      <Title id="21330890" name="正则表达式" type="0"> Regex r = new Regex("\\d+([.]|\\d+)?");
            Match m = r.Match(textBox1.Text);
            if (m.Success)
            {
                MessageBox.Show("OK");
            }

命名空间：using System.Text.RegularExpressions;</Title>
      <Title id="78364784" name="剪切板" type="0">Clipboard 类

richTextBox.copy()   
是复制控件文本的内容到剪切板

richTextBox.Paste()
将剪切板的内容复制到控件文本中</Title>
      <Title id="48615768" name="程序路径" type="0"> Application.StartupPath;</Title>
      <Title id="82628217" name="在程序中开启其他&quot;应用程序&quot;" type="0">using System.Diagnostics;

 Process p = new Process();
            p.StartInfo.FileName = "Demo.exe";
            p.StartInfo.WindowStyle = ProcessWindowStyle.Normal;   
            try    
            {    
                p.Start();  
                p.WaitForExit();  
               // p.Close();    
            }  
            catch  
            { 
   }</Title>
      <Title id="30906027" name="注册一个BAT文件" type="0">用记事本写
COPY empp.DLL %SystemRoot%\\System32 
Regsvr32 empp.dll 

保存后把后缀改成.bat


把empp.dll 导入windows里并注册</Title>
      <Title id="7675153" name="Thread 带参数" type="0">ParameterizedThreadStart ParStart = new ParameterizedThreadStart(ThreadMethod);
Thread myThread = new Thread(ParStart);
object o = “hello”;
myThread.Start(o);

ThreadMethod如下:
public void ThreadMethod(object ParObject)
{
//程序代码
}</Title>
      <Title id="29432083-7616-4cb2-9957-7f42cf9e1f89" name="解析Json" type="0">using System.Web.Script.Serialization;

JavaScriptSerializer js = new JavaScriptSerializer();
            object obj =  js.DeserializeObject("Json格式数据");
            string nickname = ((obj as Dictionary&lt;string, object&gt;))["nickname"].ToString();
</Title>
    </Title>
    <Title id="75396631" name="数据库" type="1">
      <Title id="84928891" name="查询所有表名" type="0"> public List&lt;string&gt; GetTables_SystemTable(string database)
        {
            //打开连接
            List&lt;string&gt; list = new List&lt;string&gt;();
            string strConnectionString = "Data Source=.;Initial Catalog=" + database + ";Integrated Security=True";
           SqlConnection sqlcn = new SqlConnection(strConnectionString);
            sqlcn.Open();
            //使用信息架构视图
            SqlCommand sqlcmd = new SqlCommand("SELECT OBJECT_NAME (id) FROM sysobjects WHERE xtype = 'U' AND OBJECTPROPERTY (id, 'IsMSShipped') = 0", sqlcn);
            SqlDataReader dr = sqlcmd.ExecuteReader();
            while (dr.Read())
            {
                list.Add(dr.GetString(0));
            }
            dr.Close();
            return list;
        }
</Title>
      <Title id="89434525" name="查看数据库中的列是否为空" type="0">if (!(datarReader["XXX"] is DBNull))</Title>
      <Title id="34071797" name="sa用户登录字符串" type="0">Data Source=YUKI;Initial Catalog=数据库名;Persist Security Info=True;User ID=sa;Password=xiongjun</Title>
      <Title id="89458344" name="调用存储过程" type="0">sql的存储过程有点类似函数，c#里就像执行sql语句一样 执行存储过程就行，

 (1)执行一个没有参数的存储过程的代码如下：

SqlConnection conn=new SqlConnection(“connectionString”);
SqlDataAdapter da = new SqlDataAdapter();
da.SelectCommand = new SqlCommand();
da.SelectCommand.Connection = conn;
da.SelectCommand.CommandText = "NameOfProcedure";
da.SelectCommand.CommandType = CommandType.StoredProcedure;
  然后只要选择适当的方式执行此处过程，用于不同的目的即可。

  (2)执行一个有参数的存储过程的代码如下（我们可以将调用存储过程的函数声明为ExeProcedure(string inputdate)）：

SqlConnection conn=new SqlConnection(“connectionString”);
SqlDataAdapter da = new SqlDataAdapter();
da.SelectCommand = new SqlCommand();
da.SelectCommand.Connection = conn;
da.SelectCommand.CommandText = "NameOfProcedure";
da.SelectCommand.CommandType = CommandType.StoredProcedure;
（以上代码相同，以下为要添加的代码）
param = new SqlParameter("@ParameterName", SqlDbType.DateTime);
param.Direction = ParameterDirection.Input;
param.Value = Convert.ToDateTime(inputdate);
da.SelectCommand.Parameters.Add(param);
  这样就添加了一个输入参数。若需要添加输出参数：

param = new SqlParameter("@ParameterName", SqlDbType.DateTime);
param.Direction = ParameterDirection.Output;
param.Value = Convert.ToDateTime(inputdate);
da.SelectCommand.Parameters.Add(param);
  若要获得参储过程的返回值：

param = new SqlParameter("@ParameterName", SqlDbType.DateTime);
param.Direction = ParameterDirection.ReturnValue;
param.Value = Convert.ToDateTime(inputdate);
da.SelectCommand.Parameters.Add(param); </Title>
      <Title id="51269840" name="调用存储过程(例)" type="0">/// &lt;summary&gt;
      /// 调用存储过程
      /// &lt;/summary&gt;
      /// &lt;param name="stuSql"&gt;&lt;/param&gt;
      /// &lt;param name="para"&gt;&lt;/param&gt;
      /// &lt;returns&gt;&lt;/returns&gt;
      public static int Procedure(string proName,SqlParameter[] para)
      {
          SqlConnection conn = new SqlConnection(ConnStr);
          SqlCommand cmd = new SqlCommand();
          cmd.Connection = conn;
          if (para != null)
          {
              cmd.Parameters.AddRange(para);
          }
          cmd.Connection.Open();
          cmd.CommandType = CommandType.StoredProcedure;
          cmd.CommandText = proName;
          int count = cmd.ExecuteNonQuery();
          return count;
      }
-------------------调用代码----------------------------------
 /// &lt;summary&gt;
        /// 添加用户书籍
        /// &lt;/summary&gt;
        /// &lt;param name="user"&gt;&lt;/param&gt;
        /// &lt;param name="book"&gt;&lt;/param&gt;
        public void addBooks(UserInfo user, BookInfo book)
        {
            SqlParameter[] sp = new SqlParameter[4];
            sp[0]  = new SqlParameter("@uid", SqlDbType.Int);
            sp[0].Value = user.Uid;
            sp[1] = new SqlParameter("@bookname", SqlDbType.VarChar);
            sp[1].Value = book.BookName;
            sp[2] = new SqlParameter("@price", SqlDbType.Float);
            sp[2].Value = book.Price;
            sp[3] = new SqlParameter("@zuozhe", SqlDbType.VarChar);
            sp[3].Value = book.Zuozhe;

            SqlHelper.Procedure("addbooks",sp);

        }

addbooks  :存储过程名
------------------------示例2--------------------------------
string conn=连接数据库字符串 
SqlParameter para = new SqlParameter("@name",SqlDbType.Char,10); 
para.Direction = ParameterDirection.Input; 
para.Value = 名字; 
SqlParameter para2 = new SqlParameter("@pwd",SqlDbType.Char,10); 
para.Direction = ParameterDirection.Input; 
para.Value = 密码; 
SqlParameter para = new SqlParameter("@ISValid",SqlDbType.Char,10); 
para.Direction = ParameterDirection.ReturnValue; 
SqlCommand myCommand=new SqlCommand("CheckPass",conn)
myCommand.CommandType=CommandType.StoredProcedure; 
myCommand.Parameters.Add(para); 
myCommand.Parameters.Add(para2); 
myCommand.ExcuteNonQuery();
bool isvalid=myCommand.Parameters["@ISvalid"].value; //返回值
--------------------示例3---------------------------------------
sqlconn con=new sqlconnn();
con.constrin="数据库字符串"
string str="exec 存储过程名"

datatable dt=new datatable();
con.open();
sqlAdasdasd sda=new sqlAdasdwqa(str,con)
sda.fill(dt);
con.close(); 
---------------------示例4----------------------------------
  SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=TEST;User ID=sa;Password=xiongjun");
        //添加存储过程
        public  int InsertUser(UserInfo userInfo)
        {
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = con;
            cmd.Connection.Open();
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.CommandText = "insertUser";
            cmd.Parameters.Add("@name", SqlDbType.VarChar);
            cmd.Parameters["@name"].Value = userInfo.Name;
            cmd.Parameters.Add("@age",SqlDbType.VarChar);
            cmd.Parameters["@age"].Value = userInfo.Age;
            cmd.Parameters.Add("@sex",SqlDbType.VarChar);
            cmd.Parameters["@sex"].Value = userInfo.Sex;
            int count = cmd.ExecuteNonQuery();
            cmd.Connection.Close();
            return count;
        }
        //返回单个值
        public string outputUser(UserInfo userInfo)
        {
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = con;
            con.Open();
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.CommandText = "outputUser";
            cmd.Parameters.Add("@id",SqlDbType.Int);
            cmd.Parameters["@id"].Value = userInfo.Id;
            cmd.Parameters.Add("@out", SqlDbType.VarChar,50);
            cmd.Parameters["@out"].Direction = ParameterDirection.Output;
            cmd.ExecuteNonQuery();
            string str = (string)cmd.Parameters["@out"].Value;
            con.Close();
            return str;
        }
        //返回集合
        public List&lt;UserInfo&gt; selectUser()
        {
            List&lt;UserInfo&gt; list = new List&lt;UserInfo&gt;();
            SqlCommand cmd = new SqlCommand();
            cmd.Connection = con;
            con.Open();
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.CommandText = "selectUser";
            SqlDataReader dr = cmd.ExecuteReader();
            while (dr.Read())
            {
                list.Add(new UserInfo(dr));
            }
            dr.Close();
            return list;
        }</Title>
      <Title id="38893412" name="将图片添加到数据库" type="0"> FileStream fs = File.OpenRead(picPicture.ImageLocation);
                byte[] images = new byte[fs.Length];
                fs.Read(images, 0, images.Length);
                objParams.Add("img", images);
                fs.Close();

images 就是转换好的 可以直接插入数据库了 
picPicture 就是 pictureBox控件
=======================
 byte[] images1 = null;

            if (pic1.Image != null)
            {
                MemoryStream mms = new MemoryStream();
                pic1.Image.Save(mms, System.Drawing.Imaging.ImageFormat.Bmp);
                images1 = mms.GetBuffer();
                mms.Close();
            }
==================================



将数据库的图片显示出来

 if (dt.Rows[0]["img"] != null)
                {
                    byte[] images = (byte[])dt.Rows[0]["img"];
                    if (images.Length &gt; 0)
                    {

                        MemoryStream ms = new MemoryStream(images, true);
                        ms.Write(images, 0, images.Length);
                        picPicture.Image = new Bitmap(ms);
                        ms.Close();
                    }
                }</Title>
      <Title id="53217798" name="配置文件中提取链接字符串" type="0">using System.Configuration;

 string ConnStr = ConfigurationManager.ConnectionStrings["sql"].ToString();

--------------------App.config配置文件------------------------
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;configuration&gt;
  &lt;connectionStrings&gt;
    &lt;add name="sql" connectionString="Data Source=STUff57;Initial Catalog=BookDB;Integrated Security=True"/&gt;
    &lt;add name="oracle" connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=D:\StuDB.mdb"/&gt;
  &lt;/connectionStrings&gt;
  &lt;appSettings&gt;
    &lt;add key="sql"  value="sql"/&gt;
  &lt;/appSettings&gt;
&lt;/configuration&gt;</Title>
    </Title>
    <Title id="62741560" name="API" type="1">
      <Title id="35129313" name="SendMessage输入输出" type="0">using System.Runtime.InteropServices;


       [DllImport("User32.dll",EntryPoint="FindWindow")]
       private static extern IntPtr FindWindow(string ipClassName,string lpWindwoName);

       [DllImport("user32.dll", EntryPoint = "FindWindowEx")]
       private static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, string lpszWindow);

        [DllImport("user32.dll")]
        public static extern long SendMessage(IntPtr childHandle, int msg, int lParam, StringBuilder wParam);

        [DllImport("User32.dll", EntryPoint = "SendMessage")]
        private static extern int SendMessage(IntPtr hWnd, int Msg, IntPtr wParam, string lParam);


        const int WM_SETTEXT = 0x000C; //输入
        const int WM_CLICK = 0x00F5;   //单击
        const int WM_GETTEXT = 0x000D; //获取
        StringBuilder text = new StringBuilder();

        private void button1_Click(object sender, EventArgs e)
        {
            IntPtr intP = new IntPtr(0);
            intP = FindWindow("WindowsForms10.Window.8.app.0.bf7771", "Form1");//查询父类窗体句柄


            IntPtr passWord = new IntPtr(0);
            passWord = FindWindowEx(intP, passWord, "WindowsForms10.EDIT.app.0.bf7771", "");//查询子类控件句柄(文本框）
            SendMessage(passWord, WM_SETTEXT, (IntPtr)0, "HELLO WORD");

            IntPtr getText = new IntPtr(0);
            getText = FindWindowEx(intP, getText, "WindowsForms10.EDIT.app.0.bf7771","");
            SendMessage(getText,WM_GETTEXT,1024,text);  //获取对方程序的文本输入到text中
            MessageBox.Show(text.ToString());

                IntPtr click = new IntPtr(0);
                click = FindWindowEx(intP, click, "WindowsForms10.BUTTON.app.0.bf7771", "button1");//查询子类控件句柄(按钮)
                MessageBox.Show(click.ToString());
                SendMessage(click, WM_CLICK, (IntPtr)0, "");
                        
        } </Title>
      <Title id="46487723" name="检查是否处于打开状态" type="0">System.Runtime.InteropServices

 [DllImport("User32.dll", EntryPoint = "FindWindow")]
 private static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

 IntPtr ProcessHwnd;

 public bool IsOpenWindow()//检查是否处于打开状态
        {
            IntPtr ieMinZheng = new IntPtr(0);
            ieMinZheng = FindWindow("IEFrame", "上海市民政信息系统救助管理系统 - Microsoft Internet Explorer");
            ProcessHwnd = ieMinZheng;
            if (!ieMinZheng.Equals(IntPtr.Zero))
            {
                return true;
            }
            else//没打开就打开
            {
                return false;
            }
        } 
</Title>
      <Title id="90202722" name="打开或显示窗口ShowWindow" type="0"> [DllImport("user32.dll", EntryPoint = "ShowWindow")]
 public static extern int ShowWindow(IntPtr hwnd,int nCmdShow);
 IntPtr ProcessHwnd = 
 FindWindow("IEFrame", "上海市民政信息系统救助管理系统 - Microsoft Internet Explorer");
 const int SW_SHOWMAXIMIZED = 3;

  public void ShowMzWindow()
        {
            ShowWindow(ProcessHwnd, SW_SHOWMAXIMIZED);
            SetForegroundWindow(ProcessHwnd);//放置到最前端
            GC.Collect();
            this.Close();
        }</Title>
      <Title id="18347237" name="设置窗口到最前端" type="0">using System.Runtime.InteropServices;

  [DllImport("user32.dll", EntryPoint = "SetForegroundWindow")]
        public static extern bool SetForegroundWindow(IntPtr hwnd);

 IntPtr intP = new IntPtr(0);
            intP = FindWindow("WindowsForms10.Window.8.app.0.bf7771", "Form1");//查询父类窗体句柄
 SetForegroundWindow(intP);</Title>
      <Title id="86414008" name="监测系统事件" type="0"> [System.Runtime.InteropServices.DllImport("user32.dll")] //申明API函数        
        public static extern bool RegisterHotKey
        (
            IntPtr hWnd, // handle to window          
            int id, // hot key identifier          
            uint fsModifiers, // key-modifier options          
            Keys vk // virtual-key code            
        );

------------加载事件

   private void Form1_Load(object sender, EventArgs e)
        {

            this.Hide();
            this.ShowInTaskbar = false;
            RegisterHotKey(Handle, 100, 0, Keys.F2);//设置热键
        }
-------------
 //重写WndProc()方法,监测系统 调用方法       
        protected override void WndProc(ref Message m)          
        {
            const int WM_HOTKEY = 0x0312

            switch (m.Msg)
            {
                case WM_HOTKEY:
                    PicToJPG()
                    break;
            }
            base.WndProc(ref m);
        }

</Title>
    </Title>
    <Title id="44447706" name="XML" type="1">
      <Title id="89317202" name="代码添加XML" type="0">XmlDocument xmlDoc = new XmlDocument();
            xmlDoc.Load("XMLFile1.xml");
            XmlNode root = xmlDoc.SelectSingleNode("all");//查找&lt;bookstore&gt;
            XmlElement xe1 = xmlDoc.CreateElement("book");//创建一个&lt;book&gt;节点

            XmlElement xesub1 = xmlDoc.CreateElement("title");
            xesub1.InnerText = "CS从入门到精通";//设置文本节点
            xe1.AppendChild(xesub1);//添加到&lt;book&gt;节点中
            XmlElement xesub2 = xmlDoc.CreateElement("author");
            xesub2.InnerText = "候捷";
            xe1.AppendChild(xesub2);
            XmlElement xesub3 = xmlDoc.CreateElement("price");
            xesub3.InnerText = "58.3";
            xe1.AppendChild(xesub3);

            root.AppendChild(xe1);//添加到&lt;bookstore&gt;节点中
            xmlDoc.Save("XMLFile1.xml");
</Title>
      <Title id="15127688" name="添加XML子节点" type="0"> /// &lt;summary&gt;
       /// 添加XML节点方法
       /// &lt;/summary&gt;
       /// &lt;param name="node"&gt;&lt;/param&gt;
       /// &lt;param name="title"&gt;&lt;/param&gt;
       /// &lt;param name="content"&gt;&lt;/param&gt;
       /// &lt;returns&gt;&lt;/returns&gt;
       public static bool addXmlNode(string starTitle, string title, string content)
       {
           bool buer = false;
           try
           {
               XmlDocument xmlDocument = new XmlDocument();
               xmlDocument.Load("NOTE.xml");

               XmlNode xmlNode = xmlDocument.DocumentElement;//获取所有节点

               XmlNode node = xmlDocument.CreateElement("StarTitle");//创建一级子节点
               XmlAttribute art = xmlDocument.CreateAttribute("Name");//设置节点属性name
               art.InnerText=starTitle;
               node.Attributes.Append(art);

               XmlNode nd = xmlDocument.CreateElement("Title");//创建二级子节点
               art = xmlDocument.CreateAttribute("Name");
               art.InnerText = title;
               nd.Attributes.Append(art);

               nd.InnerText = content;
               node.AppendChild(nd);
               xmlNode.AppendChild(node);

               xmlDocument.AppendChild(xmlNode);
               xmlDocument.Save("NOTE.XML");
               buer = true;
           }
           catch (Exception ex)
           {
               Console.WriteLine(ex.Message);
           }

           return buer;
       }
</Title>
      <Title id="73876795" name="路径问题" type="0">需要对XML文件 设置属性 复制

然后 string path = Application.StartupPath+"\\SalesPerson.xml";</Title>
      <Title id="10452836" name="返回指定XmlNode" type="0">XmlNode xmlNode = xmlDocument.SelectSingleNode("//*[@id='"+id+"']");
//注释这里的 “*”代表任意标签id是XML标签中的自定义属性





2.1 查询已知绝对路径的节点（集）   
  
   objNodeList = objDoc.SelectNodes(“Company/Department/Employees/Employee”)  </Title>
      <Title id="28761539" name="XML读取" type="0"> string path = Application.StartupPath + "\\Config.xml";
            XmlDocument xmlDocument = new XmlDocument();
            xmlDocument.Load(path);
            XmlNode xmlNode = xmlDocument.DocumentElement;//获?取?所ù有瓺节ú点?
            foreach (XmlNode node in xmlNode)
            {
                if (node.Name == "URL")
                {
                    url = node.InnerText;
                }
            }




-------------------XML---------------------
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Setting&gt;
  &lt;URL&gt;http://www.baidu.com&lt;/URL&gt;
&lt;/Setting&gt;</Title>
      <Title id="94719b36-5c0c-4b72-aff7-0c5c951304f0" name="简便读取 Conifg文件" type="0">using BaseLib;


               Xml objXml  = new Xml();
 objXml.FileName = System.Environment.CurrentDirectory + "\\Config.xml";
              string ServerIP = objXml.ReadValue("Setting/ServerIP");
              string ServerID = objXml.ReadValue("Setting/ServerID");
              string ServerPWD = objXml.ReadValue("Setting/ServerPWD");






===================示例==================
Conifg文件 :

&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Setting&gt;
  &lt;ConnectString&gt;
    Persist Security Info=False;database=BRMFLT;server='10.0.0.101';uid=YOUNGER;pwd=;
  &lt;/ConnectString&gt;
  &lt;ServerIP&gt;10.0.0.105&lt;/ServerIP&gt;
  &lt;ServerID&gt;administrator&lt;/ServerID&gt;
  &lt;ServerPWD&gt;123456&lt;/ServerPWD&gt;
&lt;/Setting&gt;</Title>
    </Title>
    <Title id="82387105" name="异常处理" type="1">
      <Title id="28231937" name="ObjectDataSouce找不到业务" type="0">一，建立工程时 注意路径是否包含非法字符！！
例子 ： E:\C#\.....\project

二，是否引用正确..! 

</Title>
      <Title id="4944766" name="线程间操作无效: 从不是创建控件 " type="0">----------线程不能调用其他线程的控件------------------
public delegate void myThread(int a,string b);
 private void button1_Click(object sender, EventArgs e)
 {  
           Thread thr = new Thread(new ThreadStart(Scanner));
           thr.Start();
 }

 public void Scanner()
  {
     richTextBox1.Invoke(new myThread(sex),new Object[]{1,"2"});
  }

 public void sex(int a ,string b)
  {
      richTextBox1.Text = b;   
  }
-----------------------------网上答案----------------------------
在有些情况下，您可能需要通过线程调用控件的方法。例如，您可能要在窗体上调用一个禁用按钮或更新显示的方法来响应某个线程执行的操作。.NET Framework 提供从任何线程都可安全调用的方法，以调用与其他线程所拥有的控件进行交互的方法。Invoke 方法允许同步执行控件上的方法，而 BeginInvoke 方法则初始化异步执行。要使用这些方法，必须用与将调用的方法相同的签名声明委托。然后，您可以通过向要调用的方法提供适当的委托来调用窗体上任何控件的 Invoke 或 BeginInvoke 方法。任何必需的参数都包装在 Object 中，并被传输到该方法。

调用涉及其他线程所拥有的控件的方法
用与要调用的方法相同的签名声明一个委托。 

下面的示例显示如何使用 Integer 和 String 参数声明委托。 
调用涉及其他线程所拥有的控件的方法
用与要调用的方法相同的签名声明一个委托。 

下面的示例显示如何使用 Integer 和 String 参数声明委托。 

public delegate void myDelegate(int anInteger, string aString);

使用任何控件来调用对其他线程所拥有的控件进行操作的方法。 

注意： 
方法所需的参数（如果有）可在 Object 中提供。
 

如果要同步调用方法，请调用 Control.Invoke 方法。

Label1.Invoke(new myDelegate(myMethod), new Object[] {1,
   "This is the string"});
-----------------------------------------------------------------
举个例子:新建一个Windows应用程序项目Win1,在窗体Form1中添加一个Button名称为button1,然后转入代码页,按下面修改代码
using System;
using System.Windows.Forms;

namespace win1
{
    public partial class Form1 : Form
    {
        public delegate void 我的委托();//声明一个委托
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)//此处先双击button1以便产生代码并且自动创建事件委托
        {
            new System.Threading.Thread(new System.Threading.ThreadStart (新线程)).Start();//创建一个新的线程并启动
           
        }
        public void 设置文字()
        {
            button1.Text = "Hello";
        }
        public void 新线程()
        {
            System.Threading.Thread.Sleep(2000);//线程休眠2秒
            button1.BeginInvoke(new 我的委托(设置文字));//在button1所在线程上执行“设置文字”
        }
    }
}</Title>
      <Title id="19494845" name="存储过程output String[1]: Size 属性具有无效大小值0" type="0">---------------------错误示例------------------------------
param[1] = comm.Parameters.Add("@Name", SqlDbType.VarChar);  //错误
param[1].Direction = ParameterDirection.Output;
---------------------解决方案-------------------------------
output方式从存储过程传出参数 必须使用三个参数版本的,及Parameters.Add("@Name", SqlDbType.VarChar,50);</Title>
      <Title id="63989901" name="Excel导出报错" type="0">错误：Retrieving the COM class factory for component with CLSID {00024500-0000-0000-C000-000000000046} failed due to the following error: 80070005 拒绝访问



1，运行dcomcnfg打开组件服务

2，依次展开"组件服务"-&gt;"计算机"-&gt;"我的电脑"-&gt;"DCOM配置"

3，找到"Microsoft Excel应用程序":  --【Microsoft Excel Application】

4 ,右键打开属性对话框  点击"安全"选项卡,

5. 【安全】选项卡中，“启动和激活权限”、“访问权限”都选择【自定义】，

6.启动和激活权限“中，点击【编辑】--【添加】—“IIS_IUSRS”用户，并在权限中选择【本地启动】、【本地激活】，

7.”访问权限”中，点击【编辑】--【添加】—“IIS_IUSRS”用户，并在权限中选择【本地访问】，
</Title>
      <Title id="55b3aa2a-0ecb-411d-9fe8-834abef49115" name="WebService" type="0">未能编译XXXX 

需要改变应用程序池 的 “启用32位”选项 True </Title>
    </Title>
    <Title id="26987706" name="其它" type="1">
      <Title id="9570241" name="获取window所有服务器" type="0">using System.ServiceProcess

ServiceProess[] sp = ServiceProess.getService
</Title>
      <Title id="1277972" name="获取当前IP地址(创建)" type="0">Dns.GetHostAddresses(Dns.GetHostName())[2].ToString()

获取当前IP地址(Dns.GetHostName()返回的是主机名称)

命名空间 using System.Net;

 IPAddress IP = IPAddress.Parse("192.168.1.101");//创建IP
 IPHostEntry ip = Dns.GetHostByAddress(IP); //主机地址信息容器类
    ip.HostName;  //获取主机名称</Title>
      <Title id="86700012" name="字符串转换ASCLL码" type="0">Byte[] obj = Encoding.Default.GetBytes("String");

将字符串转换成ASCLL码数组..比如"A"转换成"97"
</Title>
      <Title id="39639772" name="禁止捕捉异常线程" type="0">Control.CheckForIllegalCrossThreadCalls = false;
</Title>
      <Title id="17099740" name="接受按下的信息按钮" type="0">DialogReuslt XXX = MessageBox.Show(XXXXX);</Title>
      <Title id="71282805" name="递归添加树" type="0"> XmlElement xmlNode = XmlOperate.SelectXmlNode();
            XmlNodeList nodeList = xmlNode.ChildNodes;
            foreach (XmlNode x1 in nodeList)
            {
                if (x1.ChildNodes.Count &gt; 0)
                {
                    treeView1.Nodes.Add(addXmlNode(x1));
                }
            }

public TreeNode addXmlNode(XmlNode xmlNode)
        {
            TreeNode node = new TreeNode();   

            node.Text = xmlNode.Attributes["Name"].Value;
            if (xmlNode.Attributes["type"].Value == "1")//判断是否有下一集子节点
            {
                foreach (XmlNode x1 in xmlNode)
                {
                    TreeNode de = new TreeNode();
                    if (x1.Attributes["type"].Value == "1")
                    {
                        de =  addXmlNode(x1.Clone());
                    }
                    else
                    {
                        de.Text = x1.InnerText;
                    }
                    node.Nodes.Add(de);
                }
            }
            return (TreeNode)node.Clone();
        }
</Title>
      <Title id="13920046" name="ping IP 是否通畅" type="0">using System.Net.NetworkInformation;

PingReply reply = new Ping().Send("172.15.1.2");
            if (reply.Status != IPStatus.Success)//不通
            {
                MessageBox.Show("线路不通~");
                GC.Collect();//强制对所有代进行垃圾回收。
            }
            else
            {
                MessageBox.Show("线路良好");
            }</Title>
      <Title id="61336804" name="添加抓图功能" type="0">怎么样实现点击保存后将左上方pictruebox内容截图下来？

最简单的办法就是一楼那样 除此之外还有两种方法第一种截屏的方法//创建新图片Bitmap img= new Bitmap(pictrueBox1.Width, pictruBox1.Height);//获取画笔Graphics gs = Graphics.FromImage(img);//复制屏幕到画笔gs.CopyFromScreen(this.left + pictrueBox1.left,this.top + pictruBox1.top, 0, 0, pictrueBox1.Width, pictrueBox1.Height);//保存图片img.save("0.bmp");//释放画笔gs.Disponse();第二种api方法//bitblt是句柄复制方法[DllImport("gdi32.dll")]private static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, System.Int32 dwRop);//获取pictrueBox画笔Graphics g1 = this.pictureBox1.CreateGraphics();//创建一个新图片Bitmap img = new Bitmap(this.pictureBox1.Width, this.pictureBox1.Height);//获取新图片的画笔Graphics g2 = Graphics.FromImage(img);//获取它们的句柄IntPtr dc1 = g1.GetHdc();IntPtr dc2 = g2.GetHdc();//句柄复制BitBlt(dc2, 0, 0, pictureBox1.Width, pictureBox1.Height, dc1, 0, 0, 13369376);//释放句柄g1.ReleaseHdc(dc1);g2.ReleaseHdc(dc2);//保存图片img.Save("000.bmp"); </Title>
      <Title id="99975346" name="多路委托" type="0"> public delegate void theDelegate();
 theDelegate td = null;

 private void Form1_Load(object sender, EventArgs e)
 {
            td = new theDelegate(Num1);
            td += new theDelegate(Num2);
 }

 private void button1_Click(object sender, EventArgs e)
 {
      this.Inoke(td);  
 }
//-------------测试方法------------
public void Num1()
{
    MessageBox.Show("Num1");
}
public void Num2()
{
    MessageBox.Show("Num2");
}
//---------------------------------
注：执行效果  当点击button1按钮时 弹出两个对话框分别是Num1、Num2
</Title>
      <Title id="3136975" name="获取登陆Windows用户名" type="0">Environment.UserName
</Title>
      <Title id="71194403" name="string转换二进制" type="0"> string text = "惠娇梅";
            string outerBinary = string.Empty;

            // 通过字符串的每个Char值得到每个字的十进制
            foreach (char item in text)
            {
                int i = item;
                outerBinary += DtoB(i);
            }



 public static string DtoB(int d)
        {
            string b = "";
            //判断该数如果小于，则直接输出
            if (d &lt; 2)
            {
                b = d.ToString();
            }
            else
            {
                int c;
                int s = 0;
                int n = d;
                while (n &gt;= 2)
                {
                    s++;
                    n = n / 2;
                }
                int[] m = new int[s];
                int i = 0;
                do
                {
                    c = d / 2;
                    m[i++] = d % 2;
                    d = c;
                } while (c &gt;= 2);
                b = d.ToString();
                for (int j = m.Length - 1; j &gt;= 0; j--)
                {
                    b += m[j].ToString();
                }
            }
            return b;
        }</Title>
      <Title id="56783386" name="发送邮件" type="0">            MailAddress from = new MailAddress("xiongjun.ivan@163.com", "criss"); //邮件的发件人
            MailMessage mail = new MailMessage();
            mail.Subject = "邮件的标题"; //设置邮件的标题
            mail.From = from;
            mail.To.Add("xiongjun.ivan@163.com");
            mail.Body = "邮件的内容";
            mail.BodyEncoding = System.Text.Encoding.UTF8; //设置邮件的格式
            mail.IsBodyHtml = true;
            mail.Priority = MailPriority.Normal; //设置邮件的发送级别

            SmtpClient client = new SmtpClient();
            client.Host = "smtp.163.com"; //设置用于SMTP 事务的主机的名称，填IP地址也可以了
            //这里才是真正的邮箱登陆名和密码，比如我的邮箱地址是hbgx@hotmail，我的用户名为hbgx ，我的密码是xgbh
            client.Credentials = new System.Net.NetworkCredential("xiongjun.ivan", "class.wu");
            client.DeliveryMethod = SmtpDeliveryMethod.Network;
            client.Send(mail);</Title>
      <Title id="8527479" name="cs类文件 编译成 DLL" type="0">csc /target:library /out: d:\XX.DLL d:\xxx.cs



xx.dll 是 要生成 名字

xx.cs是已经有的CS文件</Title>
      <Title id="27202985" name="MD5加密" type="0">using System.Security.Cryptography;
using System.Text;



byte[] result = Encoding.Default.GetBytes(this.txtCardPwd.Text.Trim());    //tbPass为输入密码的文本框
            MD5 md5 = new MD5CryptoServiceProvider();
            byte[] output = md5.ComputeHash(result);
            string str = BitConverter.ToString(output).Replace("-", "");</Title>
      <Title id="85154634" name="监测某个网址是否运行正常" type="0">try
            {
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create("http://www.myqiaqia.com");
                HttpWebResponse myResponse = (HttpWebResponse)request.GetResponse();
                if (myResponse.StatusDescription.ToString().ToUpper() == "")
                { } MessageBox.Show("连上了");
            }
            catch (WebException webExcp) { MessageBox.Show("连不上"); }</Title>
      <Title id="64606883" name="写Windows服务" type="0">1.项目中创建 windows服务  

2.在 Service1.cs 中编写 服务代码   在 OnStart() 中 

3 如果需要用到 Timer 监控的话  需要引用 using System.Timers;  
（ 服务Timers 用法）
         Timer timer1 = new Timer();
           timer1.Interval = 3000;
            timer1.Enabled = true;
            timer1.Elapsed += new System.Timers.ElapsedEventHandler(timer1_Tick);


4。编写完代码后  在 设计器 右键 “添加安装程序”  多出现个 serviceProcessInstaller1  属性中 Account  选择 环境  本地 网络 局域网 

   serviceInstaller1 的属性中 Description 写描述     ServiceName 写名称     StartTyp 自动 手动    然后 生成！！！！

5 打开CMD ！   输入 cd C:\windows\Microsoft.net\frewmwork\4.0\  找到 FreamWork 路径  然后 InstillUitl.exe -i d:\Debug\XXX.exe 


这里  -i 是安装  -u 是卸载！！  后面的 D:\DeBug 是你的 路径  不允许有中文名</Title>
      <Title id="02b40e64-e3c0-44e2-9b08-812e04c51ebc" name="局域网访问文件" type="0">using System.IO;
using System.Runtime.InteropServices;


 #region 枚?举ù
    public enum ERROR_ID
    {
        ERROR_SUCCESS = 0,  // Success   
        ERROR_BUSY = 170,
        ERROR_MORE_DATA = 234,
        ERROR_NO_BROWSER_SERVERS_FOUND = 6118,
        ERROR_INVALID_LEVEL = 124,
        ERROR_ACCESS_DENIED = 5,
        ERROR_INVALID_PASSWORD = 86,
        ERROR_INVALID_PARAMETER = 87,
        ERROR_BAD_DEV_TYPE = 66,
        ERROR_NOT_ENOUGH_MEMORY = 8,
        ERROR_NETWORK_BUSY = 54,
        ERROR_BAD_NETPATH = 53,
        ERROR_NO_NETWORK = 1222,
        ERROR_INVALID_HANDLE_STATE = 1609,
        ERROR_EXTENDED_ERROR = 1208,
        ERROR_DEVICE_ALREADY_REMEMBERED = 1202,
        ERROR_NO_NET_OR_BAD_PATH = 1203
    }
    public enum RESOURCE_SCOPE
    {
        RESOURCE_CONNECTED = 1,
        RESOURCE_GLOBALNET = 2,
        RESOURCE_REMEMBERED = 3,
        RESOURCE_RECENT = 4,
        RESOURCE_CONTEXT = 5
    }

    public enum RESOURCE_TYPE
    {
        RESOURCETYPE_ANY = 0,
        RESOURCETYPE_DISK = 1,
        RESOURCETYPE_PRINT = 2,
        RESOURCETYPE_RESERVED = 8,
    }

    public enum RESOURCE_USAGE
    {
        RESOURCEUSAGE_CONNECTABLE = 1,
        RESOURCEUSAGE_CONTAINER = 2,
        RESOURCEUSAGE_NOLOCALDEVICE = 4,
        RESOURCEUSAGE_SIBLING = 8,
        RESOURCEUSAGE_ATTACHED = 16,
        RESOURCEUSAGE_ALL = (RESOURCEUSAGE_CONNECTABLE | RESOURCEUSAGE_CONTAINER | RESOURCEUSAGE_ATTACHED),
    }

    public enum RESOURCE_DISPLAYTYPE
    {
        RESOURCEDISPLAYTYPE_GENERIC = 0,
        RESOURCEDISPLAYTYPE_DOMAIN = 1,
        RESOURCEDISPLAYTYPE_SERVER = 2,
        RESOURCEDISPLAYTYPE_SHARE = 3,
        RESOURCEDISPLAYTYPE_FILE = 4,
        RESOURCEDISPLAYTYPE_GROUP = 5,
        RESOURCEDISPLAYTYPE_NETWORK = 6,
        RESOURCEDISPLAYTYPE_ROOT = 7,
        RESOURCEDISPLAYTYPE_SHAREADMIN = 8,
        RESOURCEDISPLAYTYPE_DIRECTORY = 9,
        RESOURCEDISPLAYTYPE_TREE = 10,
        RESOURCEDISPLAYTYPE_NDSCONTAINER = 11
    }
    [StructLayout(LayoutKind.Sequential)]
    public struct NETRESOURCE
    {
        public RESOURCE_SCOPE dwScope;
        public RESOURCE_TYPE dwType;
        public RESOURCE_DISPLAYTYPE dwDisplayType;
        public RESOURCE_USAGE dwUsage;

        [MarshalAs(UnmanagedType.LPStr)]
        public string lpLocalName;

        [MarshalAs(UnmanagedType.LPStr)]
        public string lpRemoteName;

        [MarshalAs(UnmanagedType.LPStr)]
        public string lpComment;

        [MarshalAs(UnmanagedType.LPStr)]
        public string lpProvider;
    }
    #endregion



    public partial class AutoUpdate : Form
    {
        [DllImport("mpr.dll")]
        public static extern int WNetAddConnection2A(NETRESOURCE[] lpNetResource, string lpPassword, string lpUserName, int dwFlags);

        [DllImport("mpr.dll")]
        public static extern int WNetCancelConnection2A(string sharename, int dwFlags, int fForce);  
        public AutoUpdate()
        {
            InitializeComponent();
        }

        public int Connect(string remotePath, string localPath, string username, string password)
        {
            NETRESOURCE[] share_driver = new NETRESOURCE[1];
            share_driver[0].dwScope = RESOURCE_SCOPE.RESOURCE_GLOBALNET;
            share_driver[0].dwType = RESOURCE_TYPE.RESOURCETYPE_DISK;
            share_driver[0].dwDisplayType = RESOURCE_DISPLAYTYPE.RESOURCEDISPLAYTYPE_SHARE;
            share_driver[0].dwUsage = RESOURCE_USAGE.RESOURCEUSAGE_CONNECTABLE;
            share_driver[0].lpLocalName = localPath;
            share_driver[0].lpRemoteName = remotePath;

            Disconnect(localPath);
            int ret = WNetAddConnection2A(share_driver, password, username,1);

            return ret;
        }

        public  int Disconnect(string localpath)
        {
            return WNetCancelConnection2A(localpath,1,1);
        }  



        private void button1_Click(object sender, EventArgs e)
        {

            string localpath = @"x:";
            int status = Connect(@"\\10.0.0.105\gx", localpath, @"administrator", "123456");
            if (status == (int)ERROR_ID.ERROR_SUCCESS)
            {
                File.Copy(localpath + @"//123.txt", "D:\\333422.txt");
                MessageBox.Show("测a试?成é功|！?");
            }
            else
            {
                MessageBox.Show(status.ToString());
            }
            Disconnect(localpath);  
        }
      
    }


这个测试 是要把 gx文件夹里的 123.txt 复制到  本地 d盘符里！</Title>
      <Title id="1dbcfe07-7b88-4ee2-8ad2-da9acaec76d8" name="复制文件夹" type="0">功能：从某个盘符复制文件夹 到另一个 地方


using System.Diagnostics;


 /// &lt;summary&gt;
        /// 拷?贝馈?文?件t夹D
        ///By Wang Hw  www.pegete.com.cn 
        /// &lt;/summary&gt;
        /// &lt;param name="srcdir"&gt;&lt;/param&gt;
        /// &lt;param name="desdir"&gt;&lt;/param&gt;
        private void CopyDirectory(string srcdir, string desdir)
        {
            string folderName = srcdir.Substring(srcdir.LastIndexOf("\\") + 1);

            string desfolderdir = desdir + "\\" + folderName;

            if (desdir.LastIndexOf("\\") == (desdir.Length - 1))
            {
                desfolderdir = desdir + folderName;
            }
            string[] filenames = Directory.GetFileSystemEntries(srcdir);

            foreach (string file in filenames)// 遍括?历え?所ù有瓺的?文?件t和í目?录?
            {
                if (Directory.Exists(file))// 先è当獭?作痢?目?录?处鋦理え?如?果?存?在ú这a个?目?录?就í递蘗归éCopy该?目?录?下?面?的?文?件t
                {

                    string currentdir = desfolderdir + "\\" + file.Substring(file.LastIndexOf("\\") + 1);
                    if (!Directory.Exists(currentdir))
                    {
                        Directory.CreateDirectory(currentdir);
                    }

                    CopyDirectory(file, desfolderdir);
                }

                else // 否?则ò直±接ócopy文?件t
                {
                    string srcfileName = file.Substring(file.LastIndexOf("\\") + 1);

                    srcfileName = desfolderdir + "\\" + srcfileName;

                    if (!Directory.Exists(desfolderdir))
                    {
                        Directory.CreateDirectory(desfolderdir);
                    }

                    File.Copy(file, srcfileName);
                }
            }//foreach
        }
</Title>
    </Title>
    <Title id="88269503" name="常用方法" type="1">
      <Title id="41775843" name="Excel" type="1">
        <Title id="54378647" name="Excel强制换行" type="0">&lt;br style='mso-data-placement:same-cell;'/&gt;</Title>
        <Title id="14301309" name="Excel模板 导出" type="0">using  Microsoft.Office.Interop.Excel;
using Excel = Microsoft.Office.Interop.Excel;
using System.IO;

//生成一个新的文件名用全球唯一标识符 (GUID)来标识
            string newpath = Application.StartupPath + "\\送货单号.xls";
            //调用的模板文件
            FileInfo mode = new FileInfo(Application.StartupPath + "\\Data\\送货单号模板.xls");
            Excel.Application app = new Excel.Application();
            if (app == null)
            {
                return;
            }
            app.Application.DisplayAlerts = false;
            app.Visible = false;

            if (mode.Exists)
            {
                Excel.Workbook tworkbook;
                Object missing = System.Reflection.Missing.Value;

                app.Workbooks.Add(missing);
                //调用模板
                tworkbook = app.Workbooks.Open(mode.FullName, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing);
                Excel.Worksheet tworksheet = (Excel.Worksheet)tworkbook.Sheets[1];
                tworksheet.Cells[1, 3] = "233321";
                tworksheet.Cells[9, 2] = "测试";
                tworksheet.SaveAs(newpath, missing, missing, missing, missing, missing, missing, missing, missing, missing);

                tworkbook.Close(false, mode.FullName, missing);
                app.Workbooks.Close();
                app.Quit();
                if (app != null)
                {
                    foreach (System.Diagnostics.Process p in System.Diagnostics.Process.GetProcessesByName("Excel"))
                    {
                        //先判断当前进程是否是excel   
                        if (!p.CloseMainWindow())
                        {
                            p.Kill();
                        }
                    }
                }
                tworkbook = null;
                app = null;
                //强制对所有代进行垃圾回收
                GC.Collect();
                MessageBox.Show("已导出Excel", "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);


//注意！！  tworksheet.Cells[1, 3] = "233321";
这里行不能从0开始</Title>
        <Title id="5157039" name="Excl帮助类..可获取表命" type="0">using Excel = Microsoft.Office.Interop.Excel;
using System.Diagnostics;



public class ExcelHelper
    {
        private Excel._Application excelApp;
        private string fileName = string.Empty;
        private Excel.WorkbookClass wbclass;
        public ExcelHelper(string _filename)
        {
            excelApp = new Excel.Application();
            object objOpt = System.Reflection.Missing.Value;
            wbclass = (Excel.WorkbookClass)excelApp.Workbooks.Open(_filename, objOpt, false, objOpt, objOpt, objOpt, true, objOpt, objOpt, true, objOpt, objOpt, objOpt, objOpt, objOpt);
        }
        /**/
        /// &lt;summary&gt;
        /// 所ù有瓺sheet的?名?称?列表括?
        /// &lt;/summary&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public List&lt;string&gt; GetSheetNames()
        {
            List&lt;string&gt; list = new List&lt;string&gt;();
            Excel.Sheets sheets = wbclass.Worksheets;
            string sheetNams = string.Empty;
            foreach (Excel.Worksheet sheet in sheets)
            {
                list.Add(sheet.Name);
            }
            return list;
        }
        public Excel.Worksheet GetWorksheetByName(string name)
        {
            Excel.Worksheet sheet = null;
            Excel.Sheets sheets = wbclass.Worksheets;
            foreach (Excel.Worksheet s in sheets)
            {
                if (s.Name == name)
                {
                    sheet = s;
                    break;
                }
            }
            return sheet;
        }
        /**/
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="sheetName"&gt;sheet名?称?&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public Array GetContent(string sheetName)
        {
            Excel.Worksheet sheet = GetWorksheetByName(sheetName);
            //获?取?A1 到?AM24范?围§的?单蹋?元a格?
            Excel.Range rang = sheet.get_Range("A1", "AM24");
            //读á一?个?单蹋?元a格?内ú容╕
            //sheet.get_Range("A1", Type.Missing);
            //不?为a空?的?区?域?列,行D数簓目?
            //   int l = sheet.UsedRange.Columns.Count;
            // int w = sheet.UsedRange.Rows.Count;
            //  object[,] dell = sheet.UsedRange.get_Value(Missing.Value) as object[,];
            System.Array values = (Array)rang.Cells.Value2;
            return values;
        }

        public void Close()
        {
            excelApp.Quit();
            excelApp = null;
        }

    }
</Title>
        <Title id="85399873" name="Excel转换 DataTable" type="0"> /// &lt;summary&gt;
    /// 读取Excel
    /// &lt;/summary&gt;
    /// &lt;param name="Path"&gt;路径&lt;/param&gt;
    /// &lt;param name="tableName"&gt;Sheet1&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public static DataSet ExcelToDS(string Path, string sheetName)
    {
        string strConn = "Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + Path + ";" + "Extended Properties=Excel 8.0;";  //HDR=Yes;
        DataSet ds = null;
        using (OleDbConnection conn = new OleDbConnection(strConn))
        {
            OleDbDataAdapter myCommand = null;
            try
            {
                conn.Open();
                string strExcel = "";
                strExcel = "select * from [" + sheetName + "$]";
                myCommand = new OleDbDataAdapter(strExcel, strConn);
                ds = new DataSet();
                myCommand.Fill(ds, "table1");
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                myCommand.Dispose();
                conn.Close();
            }
            return ds;
        }
    }


using System.Data.OleDb;

sheetName 默认为Sheet1  就是Excel中的 第一页
sheet1可以用Excle帮助类 中获取所有Sheet名称的方法获取

-----用此字符串 解决 不能去读第一行
 string strConn = "Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + Path + ";" + "Extended Properties='Excel 8.0;HDR=NO;IMEX=1'";  //HDR=Yes;

</Title>
        <Title id="71607917" name="导出Excel" type="0">using System.IO;

namespace ExportExcel
{
    class Program
    {
//        常用的转义字符及其含义：
//\’ 单引号
//\” 双引号
//\\ 反斜杠
//\0 空
//\a 警告（产生峰鸣）
//\b 退格
//\f 换页
//\n 换行
//\r 回车
//\t 水平制表符
//\v 垂直制表符

 

// c#里 @ 表示的是:
//在C#中,"c:\\temp"表示路径是c:\temp; 而@"c:\temp"就表示c:\temp; 

//所以,@的作用就应该是忽略转义字符的作用. 

        private const string HEADER = "&lt;html xmlns:x=\"urn:schemas-microsoft-com:office:excel\"&gt;" +
                                          "&lt;meta http-equiv=Content-Type content=\"text/html; charset=\"gb2312\"&gt;" +
                                          "&lt;head&gt;" +
                                          "&lt;!--[if gte mso 9]&gt;&lt;xml&gt;" +
                                           "&lt;x:ExcelWorkbook&gt;" +
                                               "&lt;x:ExcelWorksheets&gt;" +
                                                   "&lt;x:ExcelWorksheet&gt;" +
                                                       "&lt;x:Name&gt;工作表标题&lt;/x:Name&gt;" +
                                                       "&lt;x:WorksheetOptions&gt;" +
                                                           "&lt;x:Print&gt;" +
                                                               "&lt;x:ValidPrinterInfo /&gt;" +
                                                           "&lt;/x:Print&gt;" +
                                                       "&lt;/x:WorksheetOptions&gt;" +
                                                   "&lt;/x:ExcelWorksheet&gt;" +
                                               "&lt;/x:ExcelWorksheets&gt;" +
                                           "&lt;/x:ExcelWorkbook&gt;" +
                                       "&lt;/xml&gt;" +
                                       "&lt;![endif]--&gt;" ;

        private const string STYLE="&lt;style type=\"text/css\"&gt;" +
                                       ".spercent" +
                                       " {" +
                                       "   background-color:#ffff99;" +
                                       "   mso-number-format:0.00%;" +
                                       " }" +
                                        ".sId" +
                                       " {" +
                                       "   background-color:#ff6633;" +
                                       "   mso-number-format:0;" +
                                       " }" +
                                        ".sName" +
                                       " {" +
                                       "     color:red;" +
                                       " }" +
                                        ".sValue" +
                                       " {" +
                                       "   color:blue;" +
                                       "   mso-number-format:0;" +
                                       " }" +
                                       "&lt;/style&gt;";


        static void Main(string[] args)
        {
            using (StreamWriter writer = new StreamWriter(@"C:\1.xls", true, System.Text.Encoding.GetEncoding("gb2312"), 512))
            {
                writer.WriteLine(HEADER);
                writer.WriteLine(STYLE);
                writer.WriteLine("&lt;/head&gt;&lt;body&gt;&lt;table border=\"1\" style=\"font-size:9pt\"&gt;&lt;tr&gt;");
                writer.WriteLine ("&lt;th&gt;ID&lt;/th&gt;");
                writer.WriteLine ("&lt;th&gt;Name&lt;/th&gt;");
                writer.WriteLine ("&lt;th&gt;Value&lt;/th&gt;");
                writer.WriteLine ("&lt;th&gt;Percent&lt;/th&gt;");
                writer.WriteLine("&lt;th&gt;Total&lt;/th&gt;");

                int Col=0;
                for (int row = 1; row &lt; 500; row++)
                {
                    Col=row+1;
                    writer.WriteLine("&lt;tr&gt;");
                    writer.WriteLine("&lt;td class=\"sId\"&gt;{0}&lt;/td&gt;", row);
                    writer.WriteLine("&lt;td class=\"sName\"&gt;{0}&lt;/td&gt;", Guid.NewGuid ().ToString ());
                    writer.WriteLine("&lt;td class=\"sValue\"&gt;{0}&lt;/td&gt;", new Random().Next());
                    writer.WriteLine("&lt;td class=\"spercent\"&gt;{0}&lt;/td&gt;", new Random().NextDouble());
                    writer.WriteLine("&lt;td class=\"sValue\" x:fmla=\"=SUM(C" + Col + ")\"&gt;{0}&lt;/td&gt;", "");
                    writer.WriteLine("&lt;/tr&gt;");
                }

                writer.WriteLine("&lt;/table&gt;&lt;/body&gt;");
            }
           
        }
}
}</Title>
        <Title id="63587728" name="导出Excel--完整" type="0">            using System.IO;

           DataTable dt = (DataTable)grd.DataSource;
            if (dt == null || dt.Rows.Count == 0) return;


            SaveFileDialog saveFile = new SaveFileDialog();
            saveFile.Filter = "所有Excel文件|*.xls";//设置文件类型
            saveFile.Title = "导出数据";//设置标题
            string FileName = "";
            saveFile.AddExtension = true;//是否自动增加所辍名
            saveFile.AutoUpgradeEnabled = true;//是否随系统升级而升级外观
            if (saveFile.ShowDialog() == DialogResult.OK)//如果点的是确定就得到文件路径
            {
                FileName = saveFile.FileName;//得到文件路径

                using (StreamWriter writer = new StreamWriter(FileName, true, System.Text.Encoding.GetEncoding("gb2312"), 512))
                {
                    writer.WriteLine(HEADER);
                    writer.WriteLine(STYLE);
                    writer.WriteLine("&lt;/head&gt;&lt;body&gt;&lt;table border=\"1\" style=\"font-size:9pt\"&gt;");
                    writer.WriteLine("&lt;tr&gt;&lt;td align=\"center\" colspan=\"11\" style=\"font-size:13pt\"&gt;日指标达成&lt;/td&gt;&lt;/tr&gt;");
                    writer.WriteLine("&lt;tr&gt;&lt;td colspan=\"2\"&gt;&lt;/td&gt;&lt;td align=\"center\" colspan=\"4\"&gt;" + gvd.Bands[1].Caption + "&lt;/td&gt;&lt;/tr&gt;");
                    writer.WriteLine("&lt;tr&gt;&lt;td&gt;区域&lt;/td&gt;&lt;td&gt;门店&lt;/td&gt;&lt;td&gt;业绩&lt;/td&gt;&lt;td&gt;日平效&lt;/td&gt;&lt;td&gt;日标&lt;/td&gt;&lt;td&gt;达成(%)&lt;/td&gt;&lt;/tr&gt;");
                    writer.WriteLine("&lt;/table&gt;");

                    writer.WriteLine("&lt;table border=\"1\" style=\"font-size:9pt\"&gt;");
                    double[] db = new double[dt.Columns.Count];
                    for (int i = 0; i &lt; dt.Rows.Count; i++)
                    {
                        writer.WriteLine("&lt;tr&gt;");
                        for (int j = 0; j &lt; dt.Columns.Count; j++)
                        {
                            if (dt.Columns[j].ColumnName == "Use_id") continue;
                             writer.WriteLine("&lt;td&gt;{0}&lt;/td&gt;", dt.Rows[i][j].ToString());
                             if (j &gt; 1)
                             {
                                 if (!(dt.Rows[i][j] is DBNull))
                                 db[j] = db[j] == 0 ? Convert.ToDouble(dt.Rows[i][j]) : Convert.ToDouble(dt.Rows[i][j]) + db[j];
                             }
                        }
                        writer.WriteLine("&lt;/tr&gt;");
                    }
                    string strExcel = "&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;合计：&lt;/td&gt;&lt;td&gt;" + gridColumn3.SummaryText + "&lt;/td&gt;&lt;td&gt;" + gridColumn4.SummaryText + "&lt;/td&gt;&lt;td&gt;" + gridColumn5.SummaryText + "&lt;/td&gt;&lt;td&gt;" + gridColumn6.SummaryText + "&lt;/td&gt;&lt;/tr&gt;";
                    writer.WriteLine(strExcel);
                    writer.WriteLine("&lt;/table&gt;&lt;/body&gt;");
                }
                MessageBox.Show("导出完成！", "提示信息", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }</Title>
        <Title id="71375870" name="合并单元格" type="0">tworksheet.get_Range(tworksheet.Cells[1, 2], tworksheet.Cells[5, 2]).MergeCells = true；



代码用 《Excel模板 导出》中：
tworksheet.Cells[1, 2], tworksheet.Cells[5, 2] ：  表示 第2列 从1行合并到第5行！ </Title>
        <Title id="13051684" name="居中显示" type="0">((Range)tworksheet.Cells[1, 1]).HorizontalAlignment = Microsoft.Office.Interop.Excel.XlVAlign.xlVAlignCenter;




代码用 《Excel模板 导出》中：</Title>
        <Title id="15453644" name="Excel设置边框" type="0">public void SetRangeBorder(Worksheet excelWorkSheet, int r1, int c1, int r2, int c2)
        {
            Excel.Range range = excelWorkSheet.get_Range(excelWorkSheet.Cells[r1, c1], excelWorkSheet.Cells[r2, c2]);
            range.Borders.LineStyle = Excel.XlLineStyle.xlContinuous;
            range.Borders.ColorIndex = Excel.XlColorIndex.xlColorIndexAutomatic;
        }



注释：r1 =1, c1=1, 行和列的起始位置！ r2=行的总数,c2=列的总数！ 

需要配合目录中 &lt;Excel模板 导出&gt; 中的方法</Title>
        <Title id="2d2b6f25-cb48-40b2-a0f2-e8248007c690" name="直接打开Excel" type="0"> Excel.Application app = new Excel.Application();
 app.Visible = true;



就ok了

下面是个例子

 //调獭?用?的?模￡板?文?件t
                FileInfo mode = new FileInfo(System.Windows.Forms.Application.StartupPath + "\\Template\\订?单蹋?明÷细?表括?xls");
                Excel.Application app = new Excel.Application();
                if (app == null)
                {
                    return;
                }
                app.Application.DisplayAlerts = false;
                app.Visible = false;

                if (mode.Exists)
                {
                    Excel.Workbook tworkbook;
                    Object missing = System.Reflection.Missing.Value;

                    app.Workbooks.Add(missing);
                    //调獭?用?模￡板?
                    tworkbook = app.Workbooks.Open(mode.FullName, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing);
                    Excel.Worksheet tworksheet = (Excel.Worksheet)tworkbook.Sheets[1];
                    tworksheet.Cells[2, 4] = "订?单蹋?编括?码?测a试?";
                    tworksheet.Cells[2, 14] = "订?单蹋?编括?号?2";
                    tworksheet.Cells[3, 4] = "客í户§款?号?2";
                    app.Visible = true;
                }
</Title>
        <Title id="504bdbe0-73ed-44db-bb8f-ecb5ff8f06e2" name="Excel插入图片" type="0">        public void SetCellValueALL(int row, int column, string value, double height, double width, double top)
        {


            Excel.Worksheet ws = (Excel.Worksheet)excelApp.ActiveSheet;
            Excel.Range range = excelWorkSheet.Cells[row, column] as Excel.Range;
            // range.Select();
            Excel.Pictures pics = (Excel.Pictures)ws.Pictures(Type.Missing);
            Excel.Picture pic = pics.Insert(value, range);
            pic.Top = top;
            pic.Left = 265;
            pic.Width = width;
            pic.Height = height - 10;


            range.RowHeight = height + 10;
            range.ColumnWidth = 20;

        }</Title>
        <Title id="27164e7d-2f1f-432e-8806-db3b921d87c3" name="Excel的一些操作" type="0">以下是一些对excel的一些基本操作

1:工程对excel类库的导入,如：c:\program files\Microsoft office\offiece11\excel.exe
2:命名控件的引入: using Microsoft.office.Interop.Excel;

3:如果是对一个已经存在的excel文件进行操作则：
Application app=new Application();
Workbook wbook=app.Workbooks.Open("c:\\temp.xls",Type.Missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing);

Worksheet worksheet=(Worksheet)wbook.Worksheets[1];

4:如果是新建一个excel文件:
Application app=new Application();
Workbook wbook=app.Workbook.Add(Type.missing);
Worksheet worksheet=(Worksheet)wbook.Worksheets[1];

5:设置某个单元格里的内容:
worksheet.Cells[1,2]="列内容"

6读取某个单元格里的内容
string temp=((Range)worksheet.Cells[1,2]).Text;

7设置某个单元格里的格式
Excel.Range rtemp=worksheet.get_Range("A1","A1");
rtemp.Font.Name="宋体";
rtemp.Font.FontStyle="加粗"；
rtemp.Font.Size=5;

8 保存新建的内容:
worksheet.SaveAs("c:\\temp.xls",Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing,Type.missing);
</Title>
        <Title id="1297e525-d586-482e-8a1b-1811cf28f82c" name="Excel详细操作" type="0">1、 显示当前窗口：ExcelApp.Visible := True;
2、 更改 Excel 标题栏：ExcelApp.Caption := '标题内容';
3、 添加新工作簿：ExcelApp.WorkBooks.Add;
4、 设置第2个工作表为活动工作表：ExcelApp.WorkSheets[2].Activate;
5、 给单元格赋值：ExcelApp.Cells[1,1].Value := '第一行第一列';
6、 设置指定列的宽度（单位：字符个数），以第一列为例：
ExcelApp.ActiveSheet.Columns[1].ColumnsWidth := 5;
7、 设置指定行的高度（单位：磅）（1磅＝0.035厘米），以第二行为例：
ExcelApp.ActiveSheet.Rows[2].RowHeight := 1/0.035; // 1厘米
8、文字水平居中：Excelid.worksheets[1].Rows[1].HorizontalAlignment := $FFFFEFF4;
  文字垂直居中：Excelid.worksheets[1].Rows[1].VerticalAlignment := $FFFFEFF4;
9、 插入一行或一列：a. ExcelApp.ActiveSheet.Rows[2].Insert;
b. ExcelApp.ActiveSheet.Columns[1].Insert;
10、 删除一行或一列：a. ExcelApp.ActiveSheet.Rows[2].Delete;
b. ExcelApp.ActiveSheet.Columns[1].Delete;  
11、合并单元格：ExcelApp.worksheets[1].range[A1:F8'].Merge(abc);注：要声明变量abc: Variant;
12、竖行显示文字：ExcelApp.worksheets[1].Cells.Item[1,1].Orientation:= xlVertical;
13、单元格加边线：ExcelApp.worksheets[1].Range[A1:F8].Borders.LineStyle := 1;
14、在第8行之前插入分页符：ExcelApp.WorkSheets[1].Rows[8].PageBreak := 1;
15、在第4列之前删除分页符：ExcelApp.ActiveSheet.Columns[4].PageBreak := 0;
16、指定边框线宽度：ExcelApp.ActiveSheet.Range[ 'B3:D4' ].Borders[2].Weight := 3;
1-左    2-右   3-顶    4-底   5-斜( \ )     6-斜( / )
17、拷贝操作：a.拷贝整个工作表：ExcelApplication1.ActiveSheet.Used.Range.Copy;
b.拷贝指定区域：ExcelApplication1.ActiveSheet.Range[ 'A1:E2' ].Copy;
                 c.从A1位置开始粘贴：ExcelApplication1.ActiveSheet.Range.[ 'A1' ].PasteSpecial;
d.从文件尾部开始粘贴：ExcelApplication1.ActiveSheet.Range.PasteSpecial;
18、清除第一行第四列单元格公式：ExcelApp.ActiveSheet.Cells[1,4].ClearContents;
19、工作表保存：if not ExcelApp.ActiveWorkBook.Saved then
               ExcelApp.ActiveSheet.PrintPreview;
20、工作表另存为：ExcelApp.SaveAs( 'C:\Excel\Demo1.xls' );
21、放弃存盘：ExcelApp.ActiveWorkBook.Saved := True;
22、关闭工作簿：ExcelApp.WorkBooks.Close;
23、退出 Excel：ExcelApp.Quit;
下面是有关打印页面控制的语句：
   24、设置第一行字体属性：ExcelApp.ActiveSheet.Rows[1].Font.Name := '隶书';
ExcelApp.ActiveSheet.Rows[1].Font.Color := clBlue;
ExcelApp.ActiveSheet.Rows[1].Font.Bold := True;
ExcelApp.ActiveSheet.Rows[1].Font.UnderLine := True;
ExcelApp.ActiveSheet.Rows[1].Font.size:=10;
25、进行页面设置：a.页眉：ExcelApp.ActiveSheet.PageSetup.CenterHeader := '报表演示';
b.页脚：ExcelApp.ActiveSheet.PageSetup.CenterFooter := '共&amp;N页 第&amp;P页';
                     c.页眉到顶端边距2cm：ExcelApp.ActiveSheet.PageSetup.HeaderMargin := 2/0.035;
d.页脚到底端边距3cm：ExcelApp.ActiveSheet.PageSetup.HeaderMargin := 3/0.035;
                     e.顶边距2cm：ExcelApp.ActiveSheet.PageSetup.TopMargin := 2/0.035;
f.底边距2cm：ExcelApp.ActiveSheet.PageSetup.BottomMargin := 2/0.035;
                     g.左边距2cm：ExcelApp.ActiveSheet.PageSetup.LeftMargin := 2/0.035;
h.右边距2cm：ExcelApp.ActiveSheet.PageSetup.RightMargin := 2/0.035;
                     i.页面水平居中：ExcelApp.ActiveSheet.PageSetup.CenterHorizontally := 2/0.035;
j.页面垂直居中：ExcelApp.ActiveSheet.PageSetup.CenterVertically := 2/0.035;
                     k.打印单元格网线：ExcelApp.ActiveSheet.PageSetup.PrintGridLines := True;
26、打印预览工作表：ExcelApp.ActiveSheet.PrintPreview;
27、打印输出工作表：ExcelApp.ActiveSheet.PrintOut;
对Excel的其他控制：
28、excel的多单元格合计功能：ExcelApp..Cells[ARow, ACol].Formula 
:= '= SUM($+IntToStr(BeginRow) +:$ + IntToStr(EndRow) +');
注：声明变量ARow, ACol: Integer;
29、打开已经存在的Excel文件： ExcelApplication1.Workbooks.Open (c:\a.xls
EmptyParam,EmptyParam,EmptyParam,EmptyParam,
EmptyParam,EmptyParam,EmptyParam,EmptyParam,
   EmptyParam,EmptyParam,EmptyParam,EmptyParam,0);</Title>
        <Title id="36deaf5a-a087-4ad1-9fc9-1446f33b3738" name="“object”未包含“get_Range”" type="0">if(workSheet != null) 
{    
range = workSheet.get_Range(workSheet.Cells[beginRowIndex, beginColumnIndex] asExcel.Range, workSheet.Cells[endRowIndex, endColumnIndex] asExcel.Range);//需要加上 as Excel.Range
range.ColumnWidth = width;
}

关键字  asExcel.Range</Title>
        <Title id="a3623ee6-63c5-4cf0-956a-7f8f3d4110c1" name="复制行！" type="0"> Range templateRange = tworksheet.get_Range(tworksheet.Cells[7, 1] as Excel.Range, tworksheet.Cells[7, 37] as Excel.Range);
 Range targetRange = tworksheet.get_Range(tworksheet.Cells[i + 14, 1] as Excel.Range, tworksheet.Cells[i + 14, 37] as Excel.Range);
targetRange.RowHeight = 75;//行高度！ 可以省略
templateRange.Copy(targetRange);


复制第7行  添加到  i+14行中</Title>
        <Title id="3cdfca97-267d-4c28-b2e0-974f542e4222" name="Excel 复制列" type="0">  Range range = (Excel.Range)tworksheet.Columns[6];
                        range.ColumnWidth = 10;
                        range.Insert(Shift: Excel.XlInsertShiftDirection.xlShiftDown);



复制第6列 数据！

range.ColumnWidth = 10; 可有可无</Title>
      </Title>
      <Title id="39087797" name="时间与日期" type="1">
        <Title id="43833584" name="周数转换成日期" type="0">/// &lt;summary&gt;
        /// 周数转换成日期
        /// &lt;/summary&gt;
        /// &lt;param name="week"&gt;一年中的第几周,共52周&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public DateTime WeekConvertDate(int week)
        {
            DateTime dt = new DateTime(DateTime.Now.Year,1,1);
            dt = dt.AddDays((week - 1) * 7);
            return dt;
        }</Title>
        <Title id="33053536" name="获取指定日期是一年中的第几周" type="0">/// &lt;summary&gt; 
        /// 取指定日期是一年中的第几周
        /// &lt;/summary&gt; 
        /// &lt;param name="dtime"&gt;给定的日期&lt;/param&gt; 
        /// &lt;returns&gt;数字一年中的第几周&lt;/returns&gt; 
        public static int Weekofyear(DateTime dtime)
        {
            int weeknum = 0;
            DateTime tmpdate = DateTime.Parse(dtime.Year.ToString() + "-1" + "-1");
            DayOfWeek firstweek = tmpdate.DayOfWeek;
            //if(firstweek) 
            for (int i = (int)firstweek + 1; i &lt;= dtime.DayOfYear; i = i + 7)
            {
                weeknum = weeknum + 1;
            }
            return weeknum;
        } 

=====================第二种方法==================
            // dd获取当日所在第几周
            int dd = System.Globalization.CultureInfo.CurrentCulture.Calendar.GetWeekOfYear(DateTime.Today, System.Globalization.CalendarWeekRule.FirstFullWeek, 0);</Title>
        <Title id="5281414" name="获取周一、周日的日期" type="0"> /// &lt;summary&gt; 
        /// 计算某日起始日期（礼拜一的日期） 
        /// &lt;/summary&gt; 
        /// &lt;param name="someDate"&gt;该周中任意一天&lt;/param&gt; 
        /// &lt;returns&gt;返回礼拜一日期，后面的具体时、分、秒和传入值相等&lt;/returns&gt; 
        public static DateTime GetMondayDate(DateTime someDate)
        {
            int i = someDate.DayOfWeek - DayOfWeek.Monday;
            if (i == -1) i = 6;// i值 &gt; = 0 ，因为枚举原因，Sunday排在最前，此时Sunday-Monday=-1，必须+7=6。 
            TimeSpan ts = new TimeSpan(i, 0, 0, 0);
            return someDate.Subtract(ts);
        }
        /// &lt;summary&gt; 
        /// 计算某日结束日期（礼拜日的日期） 
        /// &lt;/summary&gt; 
        /// &lt;param name="someDate"&gt;该周中任意一天&lt;/param&gt; 
        /// &lt;returns&gt;返回礼拜日日期，后面的具体时、分、秒和传入值相等&lt;/returns&gt; 
        public static DateTime GetSundayDate(DateTime someDate)
        {
            int i = someDate.DayOfWeek - DayOfWeek.Sunday;
            if (i != 0) i = 7 - i;// 因为枚举原因，Sunday排在最前，相减间隔要被7减。 
            TimeSpan ts = new TimeSpan(i, 0, 0, 0);
            return someDate.Add(ts);
        }</Title>
        <Title id="62072034" name="更多日期函数" type="0">DateTime dt = DateTime.Now;  //当前时间

DateTime startWeek = dt.AddDays(1 - Convert.ToInt32(dt.DayOfWeek.ToString("d")));  //本周周一
DateTime endWeek = startWeek.AddDays(6);  //本周周日

 DateTime startMonth = dt.AddDays(1 - dt.Day);  //本月月初
DateTime endMonth = startMonth.AddMonths(1).AddDays(-1);  //本月月末
//DateTime endMonth = startMonth.AddDays((dt.AddMonths(1) - dt).Days - 1);  //本月月末

DateTime startQuarter = dt.AddMonths(0 - (dt.Month - 1) % 3).AddDays(1 - dt.Day);  //本季度初
DateTime endQuarter = startQuarter.AddMonths(3).AddDays(-1);  //本季度末

DateTime startYear = new DateTime(dt.Year, 1, 1);  //本年年初
DateTime endYear = new DateTime(dt.Year, 12, 31);  //本年年末

//本月最后一天
 Convert.ToDateTime(DateTime.Now.AddDays(1 - DateTime.Now.Day).AddMonths(1).AddDays(-1));</Title>
        <Title id="77874095" name="英文日期转换中文" type="0"> 传入参数   DateTime.Now.DayOfWeek()    



      public string ConvertENWeek(string EnglishWeek)
        {
            switch (EnglishWeek)
            {
                case "Monday":
                    return "星期一";
                case "Tuesday":
                    return "星期二";
                case "Wednesday":
                    return "星期三";
                case "Thursday":
                    return "星期四";
                case "Friday":
                    return "星期五";
                case "Saturday":
                    return "星期六";
                case "Sunday":
                    return "星期日";
            }
            return "";
        }</Title>
      </Title>
      <Title id="68822387" name="把byte[] 流转换成DataSet" type="0"> public DataSet DecompressDS(byte[] byt)
    {
        if (byt == null)
            return null;
        MemoryStream ms = new MemoryStream(byt);
        GZipStream zis = new GZipStream(ms, CompressionMode.Decompress, true);
        IFormatter bf = new BinaryFormatter();
        object obj = bf.Deserialize(ms);
        DataSet dsResult = (DataSet)obj;
        zis.Close();
        ms.Close();
        return dsResult;
    }



WebSerivce  方法接受DataSet常用的方法</Title>
      <Title id="83550892" name="把DataSet转换成Byte[]流" type="0">public byte[] CompressDS(DataSet ds)
    {
        if (ds == null)
            return null;
        MemoryStream ms = new MemoryStream();
        ds.RemotingFormat = SerializationFormat.Binary;
        IFormatter bf = new BinaryFormatter();
        bf.Serialize(ms, ds);
        GZipStream zos = new GZipStream(ms, CompressionMode.Compress, true);
        zos.Close();
        byte[] ret = ms.ToArray();
        ms.Close();
        return ret;
    }


向 WebService  发送DataSet常用的方法</Title>
      <Title id="71240828" name="上传图片" type="0"> private void UpPicture()
        {
            OpenFileDialog OpenFileDialog1 = new OpenFileDialog();
            OpenFileDialog1.Filter = "所有文件|*.*|bmp|*.bmp|JPG|*.jpg|PNG|*.png";
            string FileName = "";
            if (OpenFileDialog1.ShowDialog() == DialogResult.OK)
            {
                FileName = OpenFileDialog1.FileName;
                string str = FileName.Substring(FileName.LastIndexOf(".")+1);
                if (str.ToLower() != "jpg" &amp;&amp; str.ToLower() != "bmp" &amp;&amp; str.ToLower() != "png")
                {
                    MessageBox.Show("请用JPG,BMP,PNG格式文件上传照片");
                    return;
                }
                picPicture.ImageLocation = FileName;
            }
        }</Title>
      <Title id="79980822" name="判断是否为数字" type="0">using System.Text.RegularExpressions;

 //判断是否为数字
        public static bool isNumber(string strNumber)
        {
            Regex objNotNumberPattern = new Regex("[^0-9.-]");
            Regex objTwoDotPattern = new Regex("[0-9]*[.][0-9]*[.][0-9]*");
            Regex objTwoMinusPattern = new Regex("[0-9]*[-][0-9]*[-][0-9]*");
            String strValidRealPattern = "^([-]|[.]|[-.]|[0-9])[0-9]*[.]*[0-9]+$";
            String strValidIntegerPattern = "^([-]|[0-9])[0-9]*$";
            Regex objNumberPattern = new Regex("(" + strValidRealPattern + ")|(" + strValidIntegerPattern + ")");

            return !objNotNumberPattern.IsMatch(strNumber) &amp;&amp;
            !objTwoDotPattern.IsMatch(strNumber) &amp;&amp;
            !objTwoMinusPattern.IsMatch(strNumber) &amp;&amp;
            objNumberPattern.IsMatch(strNumber);
        }

注意 返回True 表示是数字 ！</Title>
      <Title id="91494640" name="textBox转货币格式" type="0">        private void zDigitText1_TextChanged(object sender, EventArgs e)
        {
            string str = zDigitText1.Text;
            if (str == "") return;
            if (str.Substring(str.Length-1,1) == ".")
            {
                zDigitText1.Text = str.Substring(0, str.Length - 1);
                return;
            }
            if (str.Length == 3)
            {
                zDigitText1.Text = "";
                return;
            }
            if (str.IndexOf(".") &gt; 0)
            {
                if (str.Length &gt;= 7)
                {
                   string newStr = getDouble(str);
                   if (newStr.Length &lt;= 6)
                   {
                       zDigitText1.Text = newStr;
                       zDigitText1.SelectionStart = zDigitText1.Text.Length - 3;
                       return;
                   }
                   string a = newStr.Substring(0, newStr.Length - 6);
                   string b = newStr.Substring(newStr.Length - 6);
                   str = a +","+ b;

                }
                if (str.Length &gt;= 11)
                {

                    string newStr = getDouble(str);
                    if (newStr.Length &lt; 10)
                    {
                        if (newStr.Length &lt;= 6)
                        {
                            zDigitText1.Text = newStr;
                            zDigitText1.SelectionStart = zDigitText1.Text.Length - 3;
                            return;
                        }
                        string a = newStr.Substring(0, newStr.Length - 6);
                        string b = newStr.Substring(newStr.Length - 6);
                        str = a + "," + b;
                    }
                    else
                    {
                        string c = newStr.Substring(0, newStr.Length - 9);
                        string d = newStr.Substring(newStr.Length - 9);

                        string a = d.Substring(0, d.Length - 6);
                        string b = d.Substring(d.Length - 6);
                        d = a + "," + b;
                        str = c + "," + d;
                    }

                }

                if (str.Length &gt;= 15)
                {

                    string newStr = getDouble(str);
                    if (newStr.Length &lt; 12)
                    {
                        if (str.Length &gt;= 11)
                        {
                            if (newStr.Length &lt; 10)
                            {
                                if (newStr.Length &lt;= 6)
                                {
                                    zDigitText1.Text = newStr;
                                    zDigitText1.SelectionStart = zDigitText1.Text.Length - 3;
                                    return;
                                }
                                string a = newStr.Substring(0, newStr.Length - 6);
                                string b = newStr.Substring(newStr.Length - 6);
                                str = a + "," + b;
                            }
                            else
                            {
                                string c = newStr.Substring(0, newStr.Length - 9);
                                string d = newStr.Substring(newStr.Length - 9);

                                string a = d.Substring(0, d.Length - 6);
                                string b = d.Substring(d.Length - 6);
                                d = a + "," + b;
                                str = c + "," + d;
                            }

                        }
                    }
                    else
                    {
                        string es = newStr.Substring(0, newStr.Length - 12);
                        string f = newStr.Substring(newStr.Length - 12);

                        string c = f.Substring(0, f.Length - 9);
                        string d = f.Substring(f.Length - 9);

                        string a = d.Substring(0, d.Length - 6);
                        string b = d.Substring(d.Length - 6);

                        d = a + "," + b;
                        f = c + "," + d;
                        str = es + "," + f;
                    }

                }

                zDigitText1.Text = str;
                zDigitText1.SelectionStart = zDigitText1.Text.Length - 3;
                return;
            }
            else
            {
                str = str + ".00";
                zDigitText1.Text = str;
                zDigitText1.SelectionStart = zDigitText1.Text.Length - 3;
                return;
            }

        }

        public string getDouble(string str)
        {
            if (str.IndexOf(",") == -1)
                return str;
           string head = str.Substring(0, str.IndexOf(","));
           string foot = str.Substring(str.IndexOf(",")+1);
           return getDouble(head + foot);
        }</Title>
      <Title id="84294021" name="读取文本" type="0">StreamReader sr = new StreamReader(Helper.FilePath+"\\"+name);
           string sLine = "";
           List&lt;string&gt; list = new List&lt;string&gt;();
           while (sLine != null)
           {
               sLine = sr.ReadLine();
               if (sLine != null &amp;&amp; sLine != "")
               {
                   list.Add(sLine);
               }
           }
           sr.Close();




using System.IO;
</Title>
      <Title id="83471298" name="string[]转换List&lt;string&gt;" type="0"> //string[]转羇换?List&lt;string&gt;
        public List&lt;string&gt; StringConvertList(string[] str)
        {
            List&lt;string&gt; list = new List&lt;string&gt;();
            foreach (string st in str)
            {
                list.Add(st);
            }
            return list;
        }
</Title>
      <Title id="67413210" name="遍历控件" type="0"> public void ClearAll()
        {
            foreach (Control c in groupBox1.Controls)
            {
                if (c is TextBox)
                {
                    c.Text = "";
                }
            }
        }</Title>
      <Title id="45880782" name="XML转换成DataTable" type="0"> /// &lt;summary&gt; 
            /// xml反ぁ?序ò列化ˉ成édatatable 
            /// &lt;/summary&gt; 
            /// &lt;param name="Filename"&gt;XML文?件t名?&lt;/param&gt; 
            /// &lt;returns&gt;datatable&lt;/returns&gt; 
            public DataTable DeserializeXmlFileDataTable(string Filename)
            {

                DataTable mydt;
                // Constructs an instance of the XmlSerializer with the type 
                // of object that is being deserialized. 
                XmlSerializer mySerializer = new XmlSerializer(typeof(DataTable));
                // To read the file, creates a FileStream. 
                FileStream myFileStream = new FileStream(Filename, FileMode.Open);
                // Calls the Deserialize method and casts to the object type. 
                try
                {
                    mydt = (DataTable)mySerializer.Deserialize(myFileStream);
                    myFileStream.Close();
                    return mydt;
                }

                catch (Exception ex)
                {
                    throw new Exception(ex.Message, ex); //拋?出?異?常￡，?在ú調用?處?去ǎ?處?理え?
                }
            }
 </Title>
      <Title id="63888095" name="读取某个路径所有文件" type="0">names = Directory.GetFileSystemEntries(FilePath);
            for(int i = 0; i &lt; names.Length; i++) 
            {
                names[i] = names[i].Substring(names[i].LastIndexOf("\\")+1);
               //获取 文件名
            }</Title>
      <Title id="21584871" name="获取图片" type="0">Bitmap.FromFile("xxx.jpg");  


返回： Image 类型</Title>
      <Title id="5307881" name="验证身份证" type="0"> /// &lt;summary&gt;
        /// 判D断?字?符?串?是?否?为a身Θ?份证¤号?
        /// &lt;/summary&gt;
        /// &lt;param name="strCardCode"&gt;输?入?的?字?符?串?&lt;/param&gt;
        /// &lt;returns&gt;bool:是?否?为a身Θ?份证¤号?&lt;/returns&gt;
        public static bool IsCardCode(string strCardCode)
        {
            bool isRight = true;
            if (strCardCode.Length != 18 &amp;&amp; strCardCode.Length != 15)
                return false;
            else if (strCardCode.Length == 15)
            {
                try
                {
                    Convert.ToInt64(strCardCode);
                }
                catch
                {
                    return false;
                }
            }
            else if (strCardCode.Length == 18)
            {
                string[] prov ={"11","12","13","14","15","21","22","23","31","32","33","34","35","36","37","41","42","43","44","45","46","50",
                    "51","52","53","54","61","62","63","64","65","81","82"};
                string s1 = strCardCode.Substring(0, 2);
                string s2 = strCardCode.Substring(0, 17);
                string s3 = strCardCode.Substring(6, 8);
                string s4 = s2.Substring(16, 1);
                try
                {
                    Convert.ToInt64(s2);
                }
                catch
                {
                    return false;
                }
                int iPos = 0;
                for (iPos = 0; iPos &lt; prov.Length; iPos++)
                {
                    if (prov[iPos] == s1)
                        break;
                }
                if (iPos &gt;= prov.Length)
                {
                    return false;
                }
                if (Convert.ToInt32(s3.Substring(0, 4)) &lt; 1910 || Convert.ToInt32(s3.Substring(0, 4)) &gt; (DateTime.Now.Year - 10))
                {
                    return false;
                }
                if (Convert.ToInt32(s3.Substring(4, 4).Substring(0, 2)) == 0 || Convert.ToInt32(s3.Substring(4, 4).Substring(0, 2)) &gt; 12)
                {
                    return false;
                }
                int iTmp = Convert.ToInt32(s3.Substring(4, 4).Substring(2, 2));
                if (iTmp == 0 || iTmp &gt; 31)
                {
                    return false;
                }
                if (strCardCode.Substring(17, 1).ToUpper() != "X")
                {
                    try
                    {
                        Convert.ToInt32(strCardCode.Substring(17, 1));
                    }
                    catch
                    {
                        return false;
                    }
                }
            }
            return isRight;
        }
</Title>
      <Title id="ff6562bb-9c4b-4c62-8de6-88e5d5a3b22f" name="单例模式" type="0"> private Flow_Purchase mFlow_Purchase;




if (mFlow_Purchase == null || mFlow_Purchase.IsDisposed == true)
                {
                    mFlow_Purchase = new Flow_Purchase();
                    mFlow_Purchase.MdiParent = this;
                    mFlow_Purchase.Show();
                    mFlow_Purchase.WindowState = FormWindowState.Maximized;
                }
                else
                {
                    mFlow_Purchase.Activate();
                }
</Title>
      <Title id="3be4b229-58c3-4627-956d-1c5cccdaacd1" name="数学函数 " type="0">有些时候不一定要用四舍五入的，可能需要上取整或下取整：

Math.Ceiling（）和Math.Floor 

Math.Ceiling(3.1)=4;    
Math.Floor(3.9)=3;


Math.Round ()  四舍五入

</Title>
      <Title id="7578cec7-0538-4dcb-bec1-3bb47e3b319d" name="创建文件夹" type="0">//判D断是否存在文件夹
                     if (Directory.Exists(System.Windows.Forms.Application.StartupPath + "\\IMG"))
                     {

                     }
                     else
                     {
                         Directory.CreateDirectory(System.Windows.Forms.Application.StartupPath + "\\IMG");
                     }
</Title>
      <Title id="26f3ec74-058d-4d3f-85a7-5180226c267b" name="货币转换大写" type="0"> /**/
    /// &lt;summary&gt; 
    /// 转换人民币大小金额 
    /// &lt;/summary&gt; 
    /// &lt;param name="num"&gt;金额&lt;/param&gt; 
    /// &lt;returns&gt;返回大写形式&lt;/returns&gt; 
    public string GetUpper(decimal num)
    {
        string strUpperMum = "零壹贰叁肆伍陆柒捌玖";            //0-9所对应的汉字 
        string strNumUnit = "万仟佰拾亿仟佰拾万仟佰拾元角分"; //数字位所对应的汉字 
        string strOfNum = "";    //从原num值中取出的值 
        string strNum = "";    //数字的字符串形式 
        string strReturnUpper = "";  //人民币大写金额形式 
        int i;    //循环变量 
        int sumLength;    //num的值乘以100的字符串长度 
        string ch1 = "";    //数字的汉语读法 
        string ch2 = "";    //数字位的汉字读法 
        int nzero = 0;  //用来计算连续的零值是几个 
        int temp;            //从原num值中取出的值 

        num = Math.Round(Math.Abs(num), 2);    //将num取绝对值并四舍五入取2位小数 
        strNum = ((long)(num * 100)).ToString();        //将num乘100并转换成字符串形式 
        sumLength = strNum.Length;      //找出最高位 
        if (sumLength &gt; 15) { return "溢出"; }
        strNumUnit = strNumUnit.Substring(15 - sumLength);   //取出对应位数的strNumUnit的值。如：200.55,sumLength为5所以strNumUnit=佰拾元角分 

        //循环取出每一位需要转换的值 
        for (i = 0; i &lt; sumLength; i++)
        {
            strOfNum = strNum.Substring(i, 1);          //取出需转换的某一位的值 
            temp = Convert.ToInt32(strOfNum);      //转换为数字 
            if (i != (sumLength - 3) &amp;&amp; i != (sumLength - 7) &amp;&amp; i != (sumLength - 11) &amp;&amp; i != (sumLength - 15))
            {
                //当所取位数不为元、万、亿、万亿上的数字时 
                if (strOfNum == "0")
                {
                    ch1 = "";
                    ch2 = "";
                    nzero = nzero + 1;
                }
                else
                {
                    if (strOfNum != "0" &amp;&amp; nzero != 0)
                    {
                        ch1 = "零" + strUpperMum.Substring(temp * 1, 1);
                        ch2 = strNumUnit.Substring(i, 1);
                        nzero = 0;
                    }
                    else
                    {
                        ch1 = strUpperMum.Substring(temp * 1, 1);
                        ch2 = strNumUnit.Substring(i, 1);
                        nzero = 0;
                    }
                }
            }
            else
            {
                //该位是万亿，亿，万，元位等关键位 
                if (strOfNum != "0" &amp;&amp; nzero != 0)
                {
                    ch1 = "零" + strUpperMum.Substring(temp * 1, 1);
                    ch2 = strNumUnit.Substring(i, 1);
                    nzero = 0;
                }
                else
                {
                    if (strOfNum != "0" &amp;&amp; nzero == 0)
                    {
                        ch1 = strUpperMum.Substring(temp * 1, 1);
                        ch2 = strNumUnit.Substring(i, 1);
                        nzero = 0;
                    }
                    else
                    {
                        if (strOfNum == "0" &amp;&amp; nzero &gt;= 3)
                        {
                            ch1 = "";
                            ch2 = "";
                            nzero = nzero + 1;
                        }
                        else
                        {
                            if (sumLength &gt;= 11)
                            {
                                ch1 = "";
                                nzero = nzero + 1;
                            }
                            else
                            {
                                ch1 = "";
                                ch2 = strNumUnit.Substring(i, 1);
                                nzero = nzero + 1;
                            }
                        }
                    }
                }
            }
            if (i == (sumLength - 11) || i == (sumLength - 3))
            {
                //如果该位是亿位或元位，则必须写上 
                ch2 = strNumUnit.Substring(i, 1);
            }
            strReturnUpper = strReturnUpper + ch1 + ch2;

            if (i == sumLength - 1 &amp;&amp; strOfNum == "0")
            {
                //最后一位（分）为0时，加上“整” 
                strReturnUpper = strReturnUpper + '整';
            }
        }
        if (num == 0)
        {
            strReturnUpper = "零元整";
        }
        return strReturnUpper;
    }</Title>
      <Title id="d85b9963-b373-45cc-a9e0-cda3df337ee9" name="指定字符串在某字符串中出现的次数" type="0">private int StrCount(string src, string find)
        {
            int iniPos = -1;
            int count = 0;
            iniPos = src.IndexOf(find);
            while (iniPos != -1)
            {
                count++;
                iniPos = src.IndexOf(find, iniPos + find.Length);
            }
            return count;
        }



例如 ：“我是中国人,我爱中国”  查询 ："我"  return 2</Title>
    </Title>
  </StarTitle>
  <StarTitle id="11887663" name="WinForm" type="1">
    <Title id="84944651" name="控件" type="1">
      <Title id="45511939" name="DevExpress.GridView" type="1">
        <Title id="71737524" name="控件" type="1">
          <Title id="38202927" name="CheckEdit" type="1">
            <Title id="549db60f-cbda-4122-b390-24124c5b4342" name="CheckEdit基本用法" type="0">绑定无效  是因为数据库类型是int 类型！  需要String  可以在SQL中转换成 varchar类型 然后在绑定

绑定需要3个属性

NullStyle = Unchecked

Valuechecked =  String 1 

ValuesUnchecked = String 0



如果需要单选的话  在  单选框Click事件 写
 private void ricDefualt_Click(object sender, EventArgs e)
        {
            DataTable dt = (DataTable)grd.DataSource;
            if (dt == null || dt.Rows.Count == 0) return;

            for (int i = 0; i &lt; dt.Rows.Count; i++)
            {
                if (i != gvd.FocusedRowHandle)
                {
                    dt.Rows[i]["IsDefault"] = 0;
                }
            }
        }
</Title>
            <Title id="3c00c6aa-c556-4f35-8ca0-b97b89d60ae3" name="CheckedChanged事件" type="0"> private void riceIsOut_CheckedChanged(object sender, EventArgs e)
        {
           DevExpress.XtraEditors.CheckEdit ce =  (DevExpress.XtraEditors.CheckEdit)sender;
           if (ce.Checked)
           {
               
           }
           else
           { 
           }
        }
</Title>
            <Title id="fb9fdbfe-9166-4b1e-987d-20a8f4945bf1" name="绑定后点击不改变Checked" type="0">这事数据库绑定错误！ 不能绑定int 类型！ 要转换成Varchar类型~</Title>
          </Title>
          <Title id="27303102" name="ComboBoxEdit" type="1">
            <Title id="3bfa09d4-2119-40d7-9488-e676e29e82dd" name="ComboBoxEdit获取SelectIndex" type="0"> private void ricboIsColor_SelectedValueChanged(object sender, EventArgs e)
        {
            //获得索引
            int i = ((DevExpress.XtraEditors.ComboBoxEdit)sender).SelectedIndex;
            //获取选中文本
            string str = ricboMoney.Items[index].ToString();


        }
</Title>
            <Title id="8f84164b-6d24-44fb-a427-279bf61d3a93" name="Gvd中的下拉列表禁止输入" type="0">Columns--------ColumnEdit--------TextEditStyle = DisableTextEditor</Title>
          </Title>
        </Title>
        <Title id="72244971" name="合并单元格--合并行" type="0">Views----OptionsView-----AllowCellMerge  = true

Columns----OptionsCoumn----- AllowMerge = true</Title>
        <Title id="83785614" name="列标题 居中对齐" type="0">Columns----AppearanceHeader(外观)-----TextOptions---
HAlignment = Center



如果是动态生成的话  需要加 
gridBand2.AppearanceHeader.Options.UseTextOptions = true;</Title>
        <Title id="12861637" name="表格颜色添加" type="0"> private void gvSelect_RowStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowStyleEventArgs e)
        {
            DevExpress.XtraGrid.Views.Grid.GridView View = sender as DevExpress.XtraGrid.Views.Grid.GridView;
            if(e.RowHandle&lt;0) return;
            if(View.GetRowCellDisplayText(e.RowHandle,View.Columns["Use_id"]).ToString()!=string.Empty)
                e.Appearance.BackColor = Color.SeaShell;
        }



============例子    (判断如果到货数量大于确认数量就标示红色 要么 就是本身色)
       private void grv_RowCellStyle(object sender, DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs e)
        {
            DataTable dt = (DataTable)grd.DataSource;
            if (dt == null || dt.Rows.Count == 0) return;
            for (int i = 0; i &lt; dt.Rows.Count; i++)
            {
                if (Convert.ToDouble(dt.Rows[i]["Count_dh"]) &lt; Convert.ToDouble(dt.Rows[i]["Count_qr"]))
                {
                    if (e.RowHandle == i)
                        e.Appearance.BackColor = Color.Red;
                }
                if (Convert.ToDouble(dt.Rows[i]["Count_dh"]) &gt; Convert.ToDouble(dt.Rows[i]["Count_dh"]))
                {
                    if (e.RowHandle == i)
                        e.Appearance.BackColor = Color.Purple;
                }

            }

        }

</Title>
        <Title id="10529931" name="单元格判断" type="0">        private void gvGrid_ValidatingEditor(object sender, DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs e)
        {
            if(gvGrid.FocusedColumn == gvGrid.Columns[2])
            {
                isNumber(e.Value)
            }
        }</Title>
        <Title id="95233231" name="底部求和" type="0">Views----OptionsView-ShowFooter = true

Columns--- SummaryItem ---SummaryType = Sum
                         DisplayFormat={0:0} “整数”
                                       {0:f2} “浮点保留两位”
</Title>
        <Title id="9280306" name="手动添加新的一行" type="0">gvd.OptionsView.NewItemRowPosition = NewItemRowPosition.Bottom;





using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraGrid;</Title>
        <Title id="45836329" name="关闭列表并保存数据" type="0">gvd.CloseEditor();
 gvd.UpdateCurrentRow();</Title>
        <Title id="70622866" name="添加序号列！" type="0">//行号
        private void gvdSize_RowCountChanged(object sender, EventArgs e)
        {
            gvd.CloseEditor();
            gvd.UpdateCurrentRow();
            DataTable dt = (DataTable)grd.DataSource;
            if (dt == null) return;
            int Count = 1;
            for (int i = 0; i &lt; dt.Rows.Count; i++)
            {
                if (dt.Rows[i].RowState == DataRowState.Deleted)
                {
                    continue;
                }
                dt.Rows[i]["Number"] = Count.ToString();
                Count++;
            }
            gvd.FocusedRowHandle = gvd.FocusedRowHandle + 1;
        }
   

//=======================方法二=====================
     private void gvStyle_CustomDrawRowIndicator(object sender, DevExpress.XtraGrid.Views.Grid.RowIndicatorCustomDrawEventArgs e)
        {
             e.Appearance.TextOptions.HAlignment=DevExpress.Utils.HorzAlignment.Far;
             if (e.Info.IsRowIndicator)
             {
                 if (e.RowHandle &gt;= 0)
                 {
                    e.Info.DisplayText = (e.RowHandle+1).ToString();
                 }
                 else if (e.RowHandle &lt; 0 &amp;&amp; e.RowHandle &gt; -1000)
                 {
                     e.Info.Appearance.BackColor = System.Drawing.Color.AntiqueWhite;
                     e.Info.DisplayText = "G" + e.RowHandle.ToString();
                 }
             }
        }


还要设置第一标题列的宽度  
IndicatorWith  = 45

e.Info.DisplayText = e.RowHandle.ToString(); 序号从0开始</Title>
        <Title id="47383446" name="皮肤样式" type="0">Views----外观-----PaintStyleName = FLAT
</Title>
        <Title id="60242602" name="列禁止排序" type="0">Columns-------OptionsFilter------AllowFilter = false


OptionsColumn ----AllowSort = false</Title>
        <Title id="57809267" name="日期格式化" type="0">yyyy-MM-dd HH:mm:ss

//不能为空值 一定会有值
repositoryItemDateEdit 日期格式化  很操蛋的说

EditFormat----FormatString ='yyyy-MM-dd'

Mask---EditMask = 'yyyy-MM-dd'

Mask ---UseMaskAsDisplayFormat= True

TextEditStyle = DisableTextEditor</Title>
        <Title id="45783558" name="某行某列 双击编辑框 事件" type="0">先把 要双击的列 改成 文本  
Columns---ColumnEdit ----转换成文本框 

然后关闭 gvdGrid   到外面属性界面中  寻找 刚才创建好的 文本框  找到事件 双击</Title>
        <Title id="11640039" name="动态代码添加分组合计" type="0">  gvd.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, i.ToString("yyy-MM-dd"), gc, "{0:f2}");
</Title>
        <Title id="56054313" name="DevExpress.ChartControl报表控件" type="0">DevExprees.XtraCharts.ChartControl


            chart.Series[0].DataSource = pr.getRepPriceRange(mstrStyleSql, begin, end);
            chart.Series[0].ArgumentDataMember = "Pr_nm";
            string[] strData = { "Com_pr" };
            if (rdbMoney.Checked)
                strData[0] = "Com_pr";
            else
                strData[0] = "Com_qu";
            chart.Series[0].ValueDataMembers.AddRange(strData);



rdbMoney 是单选按钮 判断是按照 金额 还是 数量显示</Title>
        <Title id="65634617" name="固定某一列不动" type="0">首先选择 gvd模式 改成 Bands！ 然后在Bands中 选中某一个双层行标题 在 行为的Fixed 改成 Left

Bands--Fixed  = Left




普通 GridView   在  Columns-------- Fixed = Left</Title>
        <Title id="75294792" name="固定某个列的大小" type="0">Column ---- OptionsColum.FixedWidth = true 

gvd.Width = xx

</Title>
        <Title id="72903425" name="默认分组并展开" type="0">gvd----Views----- OptionsBehavior ---- AutoExpandAllGroups  = true    // 展开分组

columns -----groupIndex = 0   //  如果代码生成 必须在绑定数据后  赋值</Title>
        <Title id="61626935" name="Excel导出" type="0"> SaveFileDialog saveFileDialog = new SaveFileDialog();   
            saveFileDialog.Title = "导出Excel";   
            saveFileDialog.Filter = "Excel文件(*.xls)|*.xls";   
            DialogResult dialogResult = saveFileDialog.ShowDialog(this);   
            if (dialogResult == DialogResult.OK)   
            {   
                DevExpress.XtraPrinting.XlsExportOptions options = new DevExpress.XtraPrinting.XlsExportOptions();   
                //gridControl1.ExportToXls(saveFileDialog.FileName, options);   
                gvd.ExportToXls(saveFileDialog.FileName);   
                DevExpress.XtraEditors.XtraMessageBox.Show("保存成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);   
            }   



///================第二种（推荐）=====================

 SaveFileDialog saveFileDialog = new SaveFileDialog();   
            saveFileDialog.Title = "导出Excel";   
            saveFileDialog.Filter = "Excel文件(*.xls)|*.xls";   
            DialogResult dialogResult = saveFileDialog.ShowDialog(this);   
            if (dialogResult == DialogResult.OK)   
            {   
               DevExpress.XtraGrid.Export.BaseExportLink link = this.gvd.CreateExportLink(new DevExpress.XtraExport.ExportXlsProvider(saveFileDialog.FileName));
                (link as DevExpress.XtraGrid.Export.GridViewExportLink).ExpandAll = false;
                link.ExportCellsAsDisplayText = true;
                link.ExportTo(true);
                DevExpress.XtraEditors.XtraMessageBox.Show("保存成功！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);   
            }  


//==============导出后打开 EXCEL===============
 try
                {
                    System.Diagnostics.Process process = new System.Diagnostics.Process();
                    process.StartInfo.FileName = strSavePath;
                    process.StartInfo.Verb = "Open";
                    process.StartInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Normal;
                    process.Start();
                }
                catch
                {
                    MessageBox.Show(this, "你的计算机中未安装Excel,不能打开该文档!", Application.ProductName, MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
</Title>
        <Title id="35372018" name="代码添加Bands文本居中" type="0"> GridBand gbi = new GridBand();
                    gbi.Caption = "第"+i+"周";
                    gbi.AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center;
                    gbi.AppearanceHeader.Options.UseTextOptions = true;



注意：必须要设置  gbi.AppearanceHeader.Options.UseTextOptions = true;
</Title>
        <Title id="cad8a3f3-cf1b-49fe-aa9d-d7072fe2ed65" name="动态生成列" type="0">================双层列动态添加====================
 GridBand gridBand = new GridBand();
                gridBand.Caption = dt.Rows[i][0].ToString();
                gridBand.AppearanceHeader.Options.UseTextOptions = true;
                gridBand.AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center;

                BandedGridColumn bgc = new BandedGridColumn();
                bgc.Caption = "通知单数量";
                bgc.FieldName = dt.Rows[i][0].ToString()+"TZD";
                bgc.Name = dt.Rows[i][0].ToString()+"TZD";
                bgc.Visible = true;
                bgc.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Numeric;
                bgc.DisplayFormat.FormatString = "{0:0}";
                bgc.SummaryItem.FieldName = dt.Rows[i][0].ToString() + "TZD";
                bgc.SummaryItem.DisplayFormat = "{0:0}";
                bgc.SummaryItem.SummaryType = DevExpress.Data.SummaryItemType.Sum;
                bgc.Width = 100;
                bgc.OptionsColumn.FixedWidth = true;
                bgc.OptionsColumn.AllowEdit = false;
                bgc.AppearanceCell.Options.UseTextOptions = true;
                bgc.AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center;
                bgc.AppearanceHeader.Options.UseTextOptions = true;
                bgc.AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center;
               bgc.OptionsColumn.AllowMerge = DevExpress.Utils.DefaultBoolean.True;   -- 单元格自动合并
               gvd.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, FileName, bgc, "{0:0}"); --分组底部显示
                gvd.Columns.Add(bgc);
                gridBand.Columns.Add(bgc);
 gvd.Bands.Add(gridBand);
</Title>
        <Title id="cd1cf4df-f38c-448d-9a12-9e8284c4a97b" name="去掉最左侧行标题" type="0">OptionsView -------- ShowIndicator == False</Title>
        <Title id="50dbb5aa-40bc-4f00-9e54-d7efa3033727" name="网格选中全行" type="0">Views----- OptionsSelection---------MultiSelect = true</Title>
        <Title id="cf638291-7e31-4f99-9582-4b16c31c79c9" name="Button" type="0">RepositoryItemButtonEdit rib = new RepositoryItemButtonEdit();
            rib.TextEditStyle = TextEditStyles.HideTextEditor;
            rib.Buttons[0].Kind = ButtonPredefines.Glyph;
            rib.ButtonClick += new DevExpress.XtraEditors.Controls.ButtonPressedEventHandler(this.GBDetail);//时间委托
            rib.Buttons[0].Caption = "详细信息";
            rib.Buttons[0].Visible = true;
            gridView1.Columns["变数"].ColumnEdit = rib;
//事件
private void GBDetail(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
           //获取当前行的index
            int RowIndex = gridView1.FocusedRowHandle;
            DataRow row = gridView1.GetDataRow(RowIndex);//获取当前行
           }</Title>
        <Title id="d68c8a8f-eb1d-4563-af0a-47486d5814fb" name="网格失去焦点事件" type="0">gvd_CellValueChanged


</Title>
        <Title id="e106d6fb-e25b-4a9e-adf4-680c864ad6ca" name="分组底部合计--GoupSummary" type="0">gvd.GroupFooterShowMode--- VisbleIfExpanded 或者 VisibleAlways !  倾向 VisibleAlways
gvd.Group Summary Items --- Add --Summary Items-- 3个属性 1.fieldName  2 ShowInGroupColumnFooter  3 SummaryType



注意：这里的 GroupSummayrItem 是和Views、Columns 平级别的！</Title>
      </Title>
      <Title id="41024186" name="CheckedListBox" type="1">
        <Title id="49070281" name="checkedListBox 全选" type="0"> for (int i = 0; i &lt; clbName.Items.Count; i++)
            {
                clbName.SetItemChecked(i, check);
               
            }</Title>
        <Title id="72583919" name="CheckedListBox 绑定值" type="0"> public class CLBValue         
 {             
     private string name;               
     public string Name             
     {  get { return name; }  }             
    private string value;               
     public string Value             
     {      get { return this.value; } }            
    public CLBValue(string name, string value)           
     {                  
           this.name = name;        
            this.value = value;      
        }                
     public override string ToString()    
      {  return name;  }         
 } 

 checkedListBox1.Items.Add(new CLBValue("a", "001"));  

添加一个实体类.. 

</Title>
      </Title>
      <Title id="96993628" name="ComboBox" type="1">
        <Title id="72295347" name="ComboBox下拉框提示" type="0">AutoCompleteMode = SuggestAppend
AutoCompleteSource =  ListItems</Title>
        <Title id="96476195" name="Combox下拉列表绑定后第一项添加空字符串" type="0">            DataTable dt = dal.dataTable("SELECT Card_No FROM CardKind");
            DataRow dr = dt.NewRow();
            dr[0] = "";
            dt.Rows.Add(dt);
            DataView dv = dt.Copy().DefaultView;
            dv.Sort = "Card_No";
            dt.Clear();
            dt = dv.ToTable();
            cboType.DataSource = dt;
            cboType.DisplayMember = "Card_No";</Title>
      </Title>
      <Title id="7105922" name="TreeView" type="1">
        <Title id="48111608" name="TreeView滚动条最顶端" type="0">treeView1.Nodes[0].EnsureVisible(); </Title>
        <Title id="21666920" name="TreeView展开和收缩" type="0">treeView.ExpandAll();----展开


treeView.CollapseAll();----折叠</Title>
        <Title id="97297910" name="TreeView滚动条顶部设置" type="0">trView.Nodes[0].EnsureVisible();
</Title>
        <Title id="268c2175-6800-4a8d-926f-f67e56eb86be" name="TreeView复选框--勾选" type="0">勾选 父类  ---全部勾选 
勾选 子类 全无--父类 取消
勾选子类任意一个 --勾选父类

在 tvTree_MouseClick 这个事件里添加 就OK！
======================
 private void tvTree_MouseClick(object sender, MouseEventArgs e)
        {
            TreeNode node = tvTree.GetNodeAt(new Point(e.X, e.Y));     
            if (node != null)
            {
                ChangeChild(node, node.Checked);//影?响ì子哩?节ú点?               
                ChangeParent(node);//影?响ì父?节ú点?            
            } 
        }
        //菜?单蹋?树骸?递蘗归é
        private void ChangeChild(TreeNode node, bool state)
        {
            node.Checked = state;
            foreach (TreeNode tn in node.Nodes)
                ChangeChild(tn, state);
        }
        //菜?单蹋?树骸?递蘗归é
        private void ChangeParent(TreeNode node)
        {
            if (node.Parent != null)
            {
                //兄?弟台?节ú点?被?选?中D的?个?数簓                
                int brotherNodeCheckedCount = 0;
                //遍括?历え?该?节ú点?的?兄?弟台?节ú点?                
                foreach (TreeNode tn in node.Parent.Nodes)
                {
                    if (tn.Checked == true)
                        brotherNodeCheckedCount++;
                }
                //兄?弟台?节ú点?全?没?选?，?其?父?节ú点?也?不?选?                
                if (brotherNodeCheckedCount == 0)
                {
                    node.Parent.Checked = false;
                    ChangeParent(node.Parent);
                }
                //兄?弟台?节ú点?只?要癮有瓺一?个?被?选?，?其?父?节ú点?也?被?选?                
                if (brotherNodeCheckedCount &gt;= 1)
                {
                    node.Parent.Checked = true;
                    ChangeParent(node.Parent);
                }
            }
        }
</Title>
      </Title>
      <Title id="82262925" name="OpenFileDialog 与 SaveFileDialog的用法" type="0">SaveFileDialog saveFile = new SaveFileDialog();

saveFile.Filter = "所有Csv文件|*.Csv|所有文件|*.*";//设置文件类型
            saveFile.Title = "导出数据";//设置标题
            string FileName = "";
            saveFile.AddExtension = true;//是否自动增加所辍名
            saveFile.AutoUpgradeEnabled = true;//是否随系统升级而升级外观
               if(saveFile.ShowDialog()==DialogResult.OK)//如果点的是确定就得到文件路径
               {
                  FileName=saveFile.FileName;//得到文件路径
                  //MessageBox.Show(FileName);
               }
-------------------- 以上需要 freamWork 2.0 SP1-- 

OpenFileDialog OpenFileDialog1 = new OpenFileDialog();
            OpenFileDialog1.Filter = "所有Execl文件|*.xls|所有文件|*.*";//设置文件类型
            OpenFileDialog1.Title = "数据文件";//设置标题
            string FileName = "";
            OpenFileDialog1.AutoUpgradeEnabled = true;//是否随系统升级而升级外观
            if (OpenFileDialog1.ShowDialog() == DialogResult.OK)//如果点的是确定就得到文件路径
            {
                FileName = OpenFileDialog1.FileName;//得到文件路径
                
            }
               if (OpenFileDialog.OpenFile().Length &gt; 150000)
                {
                    MessageBox.Show("图片大小超过150KB", "提示信息", MessageBoxButtons.OK,                  MessageBoxIcon.Information);
                    return;
                }


----------------文件夹路径----------------------
 FolderBrowserDialog folderBrowserDialog1 = new FolderBrowserDialog();
            if (folderBrowserDialog1.ShowDialog() == DialogResult.OK)
            {
                txtPeth1.Text = folderBrowserDialog1.SelectedPath;
            }
</Title>
      <Title id="23836266" name="文本的滚动条设置到最底部" type="0">RichTextBox1.Select(RichtextBox1.TextLenght,0)
是将文本的滚动条设置到最底部
不过需要更改
属性HideSelcetion 为False
</Title>
      <Title id="41199467" name="dataGridView判断单元格内容" type="0">        private void dgwVoucher_CellValidating(object sender, DataGridViewCellValidatingEventArgs e)
        {
            dgwVoucher.Rows[e.RowIndex].ErrorText = string.Empty;
           if(dgwVoucher.Columns[e.ColumnIndex].Name=="colCount" ||
               dgwVoucher.Columns[e.ColumnIndex].Name=="colLiQuan" ||
               dgwVoucher.Columns[e.ColumnIndex].Name=="colJinE")
            {
                if (e.FormattedValue.ToString() == "")
                {
                    return;
                }
                if (!(isNumber(e.FormattedValue.ToString())))
                {
                    dgwVoucher.Rows[e.RowIndex].ErrorText = "数量输入有误！";
                    e.Cancel = true; 
                }
              
            }
        }</Title>
      <Title id="92065657" name="选项卡特殊情况禁止转换" type="0">private void tabControl1_Selecting(object sender, TabControlCancelEventArgs e)
        {
            if (isNewOrUpdate)
            {
                e.Cancel = true;
            }
        }


isNewOrUpdate 是当新建或者更新的时候！取消变换卡</Title>
      <Title id="72991291" name="右键菜单 添加快捷键" type="0">属性ShortcutKeys </Title>
      <Title id="44921499" name="RichTextBox关键字识别（上色）" type="0">public partial class RichTextBox : Form
    ...{
        public RichTextBox()
        ...{
             InitializeComponent();
         }

        private void tSql_TextChanged(object sender, EventArgs e) //文本框改变事件
        ...{
            int index = this.tSql.SelectionStart;    //记录修改的位置
            this.tSql.SelectAll();
            this.tSql.SelectionColor = Color.Black;


            string[] keystr =...{ "select ", "from ", "where ", " and ", " or ", " order ", " by ", " desc ", " when ", " case ",
   " then ", " end ", " on ", " in ", " is ", " else ", " left ", " join ", " not ", " null " };
            for (int i = 0; i &lt; keystr.Length; i++)
                this.getbunch(keystr[i], this.tSql.Text);

            this.tSql.Select(index, 0);     //返回修改的位置
            this.tSql.SelectionColor = Color.Black;

         }
        public int getbunch(string p, string s) //给关键字上色
        ...{
            int cnt = 0; int M = p.Length; int N = s.Length;
            char[] ss = s.ToCharArray(), pp = p.ToCharArray();
            if (M &gt; N) return 0;
            for (int i = 0; i &lt; N - M + 1; i++)
            ...{
                int j;
                for (j = 0; j &lt; M; j++)
                ...{
                    if (ss[i + j] != pp[j]) break;
                 }
                if (j == p.Length)
                ...{
                    this.tSql.Select(i, p.Length);
                    this.tSql.SelectionColor = Color.Blue;
                     cnt++;
                 }
             }
            return cnt;

         }

     }</Title>
      <Title id="34362530" name="txtBox 只能输入数字" type="0"> private void txtAge1_TextChanged(object sender, EventArgs e)
        {
            if (txtAge1.Text !="" &amp;&amp; !isNumber(txtAge1.Text))
            {
                txtAge1.Text = txtAge1.Text.Substring(0, txtAge1.Text.Length - 1);
                txtAge1.SelectionStart = txtAge1.Text.Length;
            }
        }


==============double类型！带点控制===============

 private void txtArea_TextChanged(object sender, EventArgs e)
        {
            if (txtArea.Text == ".")
            {
                txtArea.Text = txtArea.Text.Substring(0, txtArea.Text.Length - 1);
                txtArea.SelectionStart = txtArea.Text.Length;
            }
            if (txtArea.Text != "" &amp;&amp; txtArea.Text.Substring(txtArea.Text.Length - 1) == ".") 
            {
                if (!isTheNum(txtArea.Text))
                {
                    txtArea.Text = txtArea.Text.Substring(0, txtArea.Text.Length - 1);
                    txtArea.SelectionStart = txtArea.Text.Length;
                }
            }
            else if (txtArea.Text != "" &amp;&amp; !isNumber(txtArea.Text))
            {
                txtArea.Text = txtArea.Text.Substring(0, txtArea.Text.Length - 1);
                txtArea.SelectionStart = txtArea.Text.Length;
            }
        }

        public bool isTheNum(string str)
        {
            int a = str.Length - str.Replace(".", "").Length;
            if (a &gt; 1)
                return false;
            else
                return true;
        }</Title>
      <Title id="48020996" name="winForm中添加WPF控件" type="0">在WinForm中可以使用WPF中的控件，或者由WPF创建的自定义控件；
 
步骤1：创建WinForm工程；
 
步骤2：在WinForm工程的解决方案资源管理器中，在刚刚创建的WinForm解决方案中新建或者添加现有的WPF用户控件工程；
 
步骤3：在WPF中创建自定义的控件，或者添加WPF控件到面板上；
 
步骤4：在WinForm面板上添加ElementHost控件（工具箱中）；
 
步骤5：生成解决方案；
 
步骤6：在刚刚的ElementHost中的Child属性中添加刚刚的WPF生成的控件；
 
步骤7：完成。
 
如果在ElementHost的Child属性中添加了WPF生成的控件，编译的时候出现如下错误：
 
错误 1 类型“System.Windows.Markup.IComponentConnector”在未被引用的程序集中定义。必须添加对程序集“System.Xaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089”的引用。 
 
则要在WinForm中解决方案-&gt; 添加引用-&gt;System.Xaml，类似的错误，就添加相应的引用。


--------------------------------------------------------------------------------

假设我们的WpfControlLibrary1中有个方法叫wpf_fun();如果我们要在test中调用的话,则需要把WPF的控件添加到WinForm中的ElementHost中，然后再需要调用的地方写上((WpfControlLibrary1.MainControl)elementHost1.Child).wpf_fun();，其中MainControl就是你自己创建的自定义的控件的名称，这样就可以了。</Title>
      <Title id="31728279" name="打印Panle" type="0"> Bitmap objBit = new Bitmap(panlCode.Width, panlCode.Height);
                        panlCode.DrawToBitmap(objBit, new Rectangle(0, 0, panlCode.Width, panlCode.Height));
                        objImage = objBit;
                        PrintDialog objPrint = new PrintDialog();
                        objPrint.Document = new System.Drawing.Printing.PrintDocument();
                        objPrint.Document.PrintPage += new System.Drawing.Printing.PrintPageEventHandler(Document_PrintPage);
                        objPrint.ShowDialog();
                        objPrint.Document.Print();
                        Application.DoEvents();



        void Document_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)
        {
            e.Graphics.DrawImage(objImage, new Point(0, 0));
        }
</Title>
      <Title id="25544102" name="WebService" type="1">
        <Title id="d297dfaa-1340-452d-a98f-98ba811e6b90" name="上传图片" type="0">/// &lt;summary&gt;
    /// 图?片?上?传?到?服务?器÷
    /// &lt;/summary&gt;
    /// &lt;param name="img"&gt;&lt;/param&gt;
    /// &lt;param name="name"&gt;&lt;/param&gt;
    [WebMethod]
    public bool SendImage(byte[] content, string fileName)
    {
        string pathandname = getImagePath() + fileName;
        int index = pathandname.LastIndexOf(".");
        if (index == 0)
        {
            return false;
        }
        else
        {
            string extended = string.Empty;
            if (index + 1 == pathandname.Length)
            {
                return false;
            }
            else
            {
                extended = pathandname.Substring(index + 1);
                if (extended == "jpeg" || extended == "gif" || extended == "jpg" || extended == "bmp" || extended == "png")
                {
                    try
                    {
                        if (!Directory.Exists(getImagePath()))//若?文?件t夹D不?存?在ú则ò新?建¨文?件t夹D  
                        {
                            Directory.CreateDirectory(getImagePath()); //新?建¨文?件t夹D  
                        }
                        File.WriteAllBytes(pathandname, content);
                        return true;
                    }
                    catch (Exception ex)
                    {
                        return false;
                    }
                }
                else
                {
                    return false;
                }
            }
        }
    }

 private string getImagePath()
    {
        string path = Server.MapPath("") + "\\Config.xml";
        XmlDocument xmlDocument = new XmlDocument();
        xmlDocument.Load(path);
        XmlNode xmlNode = xmlDocument.DocumentElement;
        foreach (XmlNode node in xmlNode)
        {
            if (node.Name == "ImgPath")
            {
                return  node.InnerText;
            }
        }
        return "";
    }
</Title>
        <Title id="376e4199-99b7-43f8-bb45-6616b51e3738" name="路径" type="0">1.Context.Server.MapPath("/") 应用程序根目录所在的位置 如 C:\Inetpub\wwwroot\
2.Context.Server.MapPath("./") 表示所在页面的当前目录 
    注：等价于Server.MapPath("") 返回 Server.MapPath("")所在页面的物理文件路径
3.Server.MapPath("../")表示上一级目录 
4.Server.MapPath("~/")表示当前应用级程序的目录，如果是根目录，就是根目录，如果是虚拟目录，就是虚拟目录所在的位置 如：C:\Inetpub\wwwroot\Example\
注：等效于Server.MapPath("~")。

另：以下几句等效
string filename=Server.MapPath("./") + @"\Web.config";
string filename=Server.MapPath("./") + "/Web.config";
string filename=Server.MapPath("") + @"\Web.config"</Title>
      </Title>
    </Title>
    <Title id="14506320" name="基本知识" type="1">
      <Title id="3619444" name="运行窗体不显示" type="0">private void Form1_Load(object sender, EventArgs e)
{
            this.Hide();
            this.ShowInTaskbar = false;
}

</Title>
      <Title id="45196601" name="WebSerivce在WinFroms调用" type="0">1。工程中添加网站！
2. 添加新建项目  Web服务
3.编译生成后  访问 地址是否成功  如果成功 复制地址  例：http://Loaclhost:XX/WebService.asmx
4.选择WinFrom工程 引用 右键 添加服务引用！点击 高级    点击 添加 Web Service  
    把刚才复制的地址 添加进来   给一个 命名空间！ 
.添加引用把WebService的了路径添加进入后
5.using 自身namespace.创建后引用的名
  例 using WebServiceTestWinFroms.ServiceReference1;
6.在方法中调用



=====WebService有两种调用方式  一种是Web引用  一种是 服务引用
建议调用时候 用Web引用！就是 点击进入 高级选项后 的地方</Title>
      <Title id="31411454" name="获取或设置IE" type="0">◆◆◆本地目录Data中
CS --- IEDriver.cs
DLL--- Interop.SHDocVw.dll



还需要工程导入 Microsoft.mshtml</Title>
      <Title id="30586537" name="设为开机启动项" type="0">try
            {
                RegistryKey key = Registry.LocalMachine.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true);
                if (key == null)
                {
                    key = Registry.LocalMachine.CreateSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run");
                }
                if (key.GetValue("YMSPersonCardRead") == null)
                {
                    RegistryKey R_local = Registry.LocalMachine;
                    RegistryKey R_run = R_local.CreateSubKey(@"SOFTWARE\Microsoft\Windows\CurrentVersion\Run");
                    R_run.SetValue("YMSPersonCardRead", Application.StartupPath + "\\身份证刷卡.exe");
                    R_run.Close();
                    R_local.Close();
                }
               

            }catch(Exception ex)
            {
            
            }</Title>
      <Title id="46238340" name="隐藏任务栏中的窗体" type="0">            this.Hide();
            this.ShowInTaskbar = false;
</Title>
      <Title id="53930558" name="获取HTML页面里的某个元素" type="0">IEDriver ie = new IEDriver("HTMLPage");
            HTMLDocument document = ie.GetHTMLDocument();
            int i = 0;
            foreach (mshtml.IHTMLElement el in (mshtml.IHTMLElementCollection)document.body.all)
            {
                string tagname = el.tagName;
                if (tagname == "SPAN")
                {
                    if (i == 1)
                    {
                        string dd = el.innerHTML;
                        MessageBox.Show(dd);
                    }
                    i++;
                }
            }
</Title>
      <Title id="28568108" name="向程序发送键盘" type="0"> private void txtCode_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                SendKeys.Send("{Tab}");
            }
        }</Title>
      <Title id="689b88f2-9618-4b33-9e04-40b10d27e5e7" name="VB程序传值给Winfrom" type="0"> static class Program
    {
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        [STAThread]
        static void Main(string[] arg)
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1());

            //Form1 from = new Form1();
            //from.btnGO_Click(null, null);
            //from.txtInput.Text = arg[0];
            //from.button1_Click(null, null);
            //Application.Exit();
        }
    }
</Title>
      <Title id="9b0c618a-588d-4785-99a9-0c2cabd83fa7" name="获取和设置网页内容" type="0">
IEDriver ie = new IEDriver("IE 标题 title");    ---- 在该目录下有 这个类 ！ 和一个 DLL  
   HTMLDocument document = ie.GetHTMLDocument();

IHTMLInputElement hid = (IHTMLInputElement)document.getElementById("productsIdList");
                string va = hid.value;

IHTMLInputElement txt = (IHTMLInputElement)document.getElementById("jumpto");
                txt.value =  (i + 1).ToString();
                HTMLButtonElement btn = (HTMLButtonElement)document.getElementById("jumptopage");
                btn.click();
</Title>
      <Title id="63f5240c-08c4-4138-9a33-b0f4acc3c266" name="关闭进程中的IE" type="0">1.//关闭所有的IE    
 2.           System.Diagnostics.Process[] myProcesses;  
 3.            myProcesses = System.Diagnostics.Process.GetProcessesByName("IEXPLORE");  
 4.            foreach (System.Diagnostics.Process instance in myProcesses)  
 5.            {  
 6.                instance.CloseMainWindow();  
 7.            }  
 8.            instance.kill();  
 9.//关闭标题为你要求的IE   
 10.            Process[] pros = System.Diagnostics.Process.GetProcessesByName("IEXPLORE");  
 11.            foreach (Process p in pros)  
 12.            {  
 13.                if (p.MainWindowTitle.Equals("YourTitleSetting"))  
 14.                    p.Kill();  
 15.            }    </Title>
      <Title id="9413b3d2-8ae1-42a1-a30b-be0d0cbe2556" name="窗体加载之后运行" type="0">在窗体的 Shown 事件里 写


这样执行运行窗体之后 就运行代码 可以显示窗体</Title>
      <Title id="129366b6-2e57-49ab-a4a7-8b19da85bfec" name="获取屏幕尺寸" type="0">MessageMail messageMail = new MessageMail();

                System.Drawing.Rectangle rect = Screen.GetWorkingArea(this);
                Point mypoint = new Point();
                mypoint.X = rect.Right - Convert.ToInt32(rect.Right * 0.25);
                mypoint.Y = Convert.ToInt32(rect.Height * 0.07);
                messageMail.Location = mypoint;

                messageMail.Show();
</Title>
    </Title>
    <Title id="34706033" name="异常处理" type="1">
      <Title id="66747113" name="项目加载报错" type="0">“从用户数据存储中检索信息时出错。未找到平台" 


找到目录下的.csproj文件，将&lt;PlatformID&gt;4118C335-430C-497f-BE48-11C3316B135E&lt;/PlatformID&gt;一句改为&lt;PlatformID&gt;3C41C503-53EF-4c2a-8DD4-A8217CAD115E&lt;/PlatformID&gt;，即可运行。</Title>
      <Title id="53149071" name="引用DLL编译时候提示：未能找到类型" type="0">在项目上点右键--&gt;属性--&gt;应用程序--&gt;目标框架--&gt;修改为.NET Framework 4。

而我原来的设置是.NET Framework 4 Client Profile。</Title>
    </Title>
  </StarTitle>
  <StarTitle id="10159163" name="ASP.NET" type="1">
    <Title id="37442090" name="其它" type="1">
      <Title id="49357936" name="不常用" type="1">
        <Title id="63061586" name="Web.config加密" type="0">命令提示工具 aspnet_regiis.exe

aspnet_regiis.exe -pef section physical_directory -prov provider

section 表示要加密的配置文件
physical_directory用于指定站点的物理路径
virtual_directory用于制定虚拟路径
provider 指定加密提供程序

例子：
aspnet_regiis.exe -pef "connectionString" 
"你的Web项目路径"  -prov "DataProtectionConfigurationProvider"

解密例子：
aspnet_regiis.exe -pdf "connectionString" "你的Web项目路径" 
</Title>
        <Title id="52433045" name="WebParte数据库部署" type="0">在VS2008的命令提示符下输入aspnet_regsql.exe
</Title>
        <Title id="85573412" name="Handler添加水印" type="0">public class BookCover:IHttpHandler
{
   //封面文件夹路径
   private const string COVERSADDR="~/Images/BookCovers";
   //数字水印路径
   private const string WATERMARK_URL="~/Image/watermark.jpg";
   //默认图片的路径
  private string DEFAULTIMAGE_URL = "~/Images/default.jpg";
public void ProcessRequest(HttpContext context)
{
  //组合图片的路径
  string path = context.Request.MapPath(COVERSADDR+context.System.Dawing.Image Cover);
  if(File.Exists(path))
  {
   //加载文件
   Cover = Image.FromFile(path);
   //添加水印
   Image watermark = Image.FromFile(context.Request.MapPath(WATERMARK_URL));
   //实例化画布
   Graphics g = Graphics.FromImage(Conver);
   g.DrawImage(watermark,new Rectangle(Conver.Width-watermark.Width,Cover.Height-watermark.Height,watermark.Width,watermark.Height),0,0watermark.Width,watermark.Height,GraphicsUnit.Pixel);
g.Dispose();
watermark.Dispose();
}
else
{
//图片的默认路径
  Cover=Image.FromFile(context.Request.MapPath(Default_URL));
}
context.Response.ContentType="image/jpeg";
Cover.Save(context.Response.OutputStream,System.Drawing.Image.ImageFormat.Jpeg);
Cover.Dispose();
context.Response.End();
}
  }
}
}
</Title>
        <Title id="77269200" name="身份验证" type="0">&lt;system.web&gt;
 &lt;authention mode="Forms"&gt;
   &lt;forms name="AdminUser" loginUrl="" timeout="60"&gt;
&lt;/froms&gt;
 &lt;/authentication&gt;
&lt;/system.web&gt;
</Title>
        <Title id="81598599" name="授权" type="0">&lt;configuration&gt;
  &lt;system.web&gt;
     &lt;authorization&gt;
        &lt;deny users="?"/&gt;
         &lt;allow roles="admin"&gt;
     &lt;/authorization&gt;
  &lt;/system.web&gt;
&lt;/configuration&gt;</Title>
        <Title id="5776669" name="标签分组框" type="0">&lt;fieldset&gt;
&lt;legend&gt;
分组TITLE
&lt;/legend&gt;
&lt;/fieldset&gt;</Title>
        <Title id="90190537" name="发送邮件" type="0">using System.Web.Mail;
-------------------第一种
SmtpMail.Send("30939235@qq.com", "30939235@qq.com", "标题", "内容");
这个方法很简单，不适合发送带附件的邮件

-------------------第二种
try
        {
            MailMessage mail = new MailMessage();
            //设置发信人地址
            mail.From = "30939235@qq.com";
            //设置收信人地址
            mail.To = "30939235@qq.com";
            mail.Subject = "Send Using Web Mail";
            //设置邮件的正文的格式为HTML
            mail.BodyFormat = MailFormat.Html;
            //对于需要身份认证的SMTP服务器，可以通过下面的方式设置用户名和密码
            mail.Fields.Add("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate", "1");//基本的身份验证方式
            mail.Fields.Add("http://schemas.microsoft.com/cdo/configuration/sendusername", "30939235");//把用户名替换为发件人地址中@前面的部分
            mail.Fields.Add("http://schemas.microsoft.com/cdo/configuration/sendpassword", "xiongjun.ivan");//设置密码
            SmtpMail.SmtpServer = "192.168.1.100";
            SmtpMail.Send(mail);

            
        }
        catch (Exception ex)
        {
            Response.Write(ex.Message);
        }</Title>
      </Title>
      <Title id="76867645" name="上传文件" type="0"> if (FileUpload1.HasFile)
            {
                string type = FileUpload1.FileName.Substring(FileUpload1.FileName.LastIndexOf("."));
                string fileName = DateTime.Now.Year.ToString() + DateTime.Now.Millisecond.ToString() + type;
                FileUpload1.SaveAs(Server.MapPath("~/image/")+fileName);
                Image1.ImageUrl = "~/image/" + fileName;
            }
----------------------------完整示例------------------------------
    &lt;form id="form1" runat="server" enctype="multipart/form-data" &gt;
         &lt;input type="file"  id="inputFile" name="inputFile"  runat="server"/&gt;
         &lt;input type="button" id="btn_Buttion" value="上传" onserverclick="uploadFile" name="Button1" runat="server" /&gt;&lt;br /&gt;
         
         &lt;asp:Label ID="Label1" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;br /&gt;
         &lt;asp:Label ID="Label2" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&lt;br /&gt;
         &lt;asp:Label ID="Label3" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;
    &lt;/form&gt;
★★★form表单中必须有enctype="multipart/form-data" 属性
------------------------后台代码
public void uploadFile(object sender, EventArgs e)
    {
        //检查上传文件不能为空
        if (inputFile.PostedFile.ContentLength &gt; 0)
        {
            //设定上传文件的保存路径
            string strSaveDir = "~/System/";
            string strName = inputFile.PostedFile.FileName;
            //取得文件名(包括路径)里最后一个“.”的索引
            int intExt = strName.LastIndexOf(".");
            //取得文件的扩展名
            string strExt = strName.Substring(intExt);
            //自动根据日期和时间为文件命名，确保文件名不重复
            DateTime now = DateTime.Now;
            string strNewName = now.ToString("yyyyMMddHHmmss") + strExt;
            //取得文件名(包括路径)里的最后一个“\”的索引
            int intPath = strName.LastIndexOf("\\");
            //保存文件到你所要的目录，这里是IIS根目录下的System目录，你可以改变
            inputFile.PostedFile.SaveAs(Server.MapPath(strSaveDir + strNewName));
            //得到这个文件的相关属性........
            Label1.Text = "OK";
            Label2.Text = "文件类型" + inputFile.PostedFile.ContentType + "(" + strExt + ")";
            Label3.Text = "文件大小" + (inputFile.PostedFile.ContentLength / 1024).ToString() + "KByte(s)";
        }
        else
        {
            Label1.Text = "请选择要上传的文件";
            Label2.Text = "";
            Label3.Text = "";
        }
    }</Title>
      <Title id="35396518" name="文件上传到数据库" type="0"> protected void btnSubmit_Click(object sender, EventArgs e)
    {
        ServiceBAL sb = new ServiceBAL();
        string docType; //文件类型
        Stream objStream;
        if (IsValid)//验证是否成功
        {
            if (txtFileContents.PostedFile != null)
            {
                string strName = txtFileContents.PostedFile.FileName;
                int intExt = strName.LastIndexOf(".");
                docType = strName.Substring(intExt);//获取类型

                int intDocLen = txtFileContents.PostedFile.ContentLength;//获取文件大小
                byte[] buffer = new byte[intDocLen];
                objStream = txtFileContents.PostedFile.InputStream;
                objStream.Read(buffer, 0, intDocLen);

                sb.InsertToDB(txtTitle.Text, buffer, docType);
            }
        }
    }
------------------------思路
★★★主要是把文件转化成流保存到数据库的image类型当中</Title>
      <Title id="56208062" name="验证码" type="0">★★★★★:先创建一个页面GenerateCodeImage.aspx 然后把下面的代码复制到该页面的后台代码中! 该页只返回一张图片,Session中保存该图片的字符,用其他页面调用该页

using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Drawing;
using System.IO;

public partial class GenerateCodeImage : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        string str = getRandomValidate(4);
        Session["check"] = str;   //保存以便确认
        getImageValidate(str);
    }
    Random ran = new Random();
    /// &lt;summary&gt;
    /// 生成随机的字符串，参数len用于指定字符串的长度。字符串可以包含字母和数字
    /// &lt;/summary&gt;
    /// &lt;param name="len"&gt;&lt;/param&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public string getRandomValidate(int len)
    {
        int num, tem;
        string rtuStr = "";
        for (int i = 0; i &lt; len; i++)
        {
            num = ran.Next();
            int mod = num % 36;
            if (mod &lt; 10)
                tem = mod + '0';
            else
                tem = mod + 'A';
            rtuStr += Convert.ToChar(tem).ToString();
        }
        return rtuStr;
    }
    /// &lt;summary&gt;
    /// 随机的在背景上画几条线
    /// &lt;/summary&gt;
    /// &lt;param name="gfc"&gt;&lt;/param&gt;
    /// &lt;param name="img"&gt;&lt;/param&gt;
    public void drawLine(Graphics gfc, Bitmap img)
    {
        for (int i = 0; i &lt; 8; i++)
        {
            int x1 = ran.Next(img.Width);
            int y1 = ran.Next(img.Height);
            int x2 = ran.Next(img.Width);
            int y2 = ran.Next(img.Height);
            gfc.DrawLine(new Pen(Color.Silver), x1, y1, x2, y2);
        }
    }
    /// &lt;summary&gt;
    /// 随机的在背景上画一些点
    /// &lt;/summary&gt;
    /// &lt;param name="img"&gt;&lt;/param&gt;
    public void drawPoint(Bitmap img)
    {
        //选择画100个点，可以根据实际情况改变
        int col = ran.Next();
        for (int i = 0; i &lt; 100; i++)
        {
            int x = ran.Next(img.Width);
            int y = ran.Next(img.Height);
            img.SetPixel(x, y, Color.FromArgb(col));
        }
    }
    /// &lt;summary&gt;
    /// 根据给定的字符串生成对应的图片，
    /// 除了在图片中显示指定的字符外，
    /// 还需要在背景中添加一些随机线和点
    /// &lt;/summary&gt;
    /// &lt;param name="strValue"&gt;&lt;/param&gt;
    public void getImageValidate(string strValue)
    {
        int width = Convert.ToInt32(strValue.Length * 12);//计算图像宽度
        Bitmap img = new Bitmap(width, 23);
        Graphics gfc = Graphics.FromImage(img);  //产生Gaphice对象，进行图画
        gfc.Clear(Color.White);
        drawLine(gfc, img);
        //写验证码,需要定义Font
        Font font = new Font("arial", 12, FontStyle.Bold);
        System.Drawing.Drawing2D.LinearGradientBrush brus = new System.Drawing.Drawing2D.LinearGradientBrush(new Rectangle(0, 0, img.Width, img.Height),
            Color.DarkOrchid, Color.Blue, 1.5f, true);
        gfc.DrawString(strValue,font,brus,3,2);
        drawPoint(img);
        gfc.DrawRectangle(new Pen(Color.DarkBlue), 0, 0, img.Width - 1, img.Height - 1);
        //将图片添加到页面
        MemoryStream ms = new MemoryStream();
        img.Save(ms, System.Drawing.Imaging.ImageFormat.Gif);
        //更改HTTP头
        Response.ClearContent();
        Response.ContentType = "image/gif";
        Response.BinaryWrite(ms.ToArray());

        gfc.Dispose();
        img.Dispose();
        Response.End();
    }
}
--------------------------调用页--------------------------------
 &lt;asp:TextBox ID="TextBox1" runat="server"&gt;&lt;/asp:TextBox&gt;
    &lt;asp:Image ID="Image1" ImageUrl="~/GenerateCodeImage.aspx" runat="server" /&gt;
    &lt;asp:Button ID="Button1" runat="server" Text="提交" onclick="Button1_Click" /&gt;

★★★： ImageUrl="~/GenerateCodeImage.aspx" 指定图片源
-------------------------后台代码
 protected void Button1_Click(object sender, EventArgs e)
    {
        if (TextBox1.Text.Trim() == (string)Session["check"])
        {
            Response.Write("&lt;script&gt;alert('成功')&lt;/script&gt;");
        }
        else
        {
            Response.Write("&lt;script&gt;alert('失败')&lt;/script&gt;");
            TextBox1.Text = "";
        }
    }</Title>
      <Title id="12990610" name="查找控件强制转换" type="0">dtHeDingMianJiJiaTingChengYuan.Rows[j][2] = ((DropDownList)gv1HeDingMianJiJiaTingChengYuan.Rows[j].Cells[0].Controls[1]).SelectedValue;
            dtHeDingMianJiJiaTingChengYuan.Rows[j][3] = ((HtmlInputText)gv1HeDingMianJiJiaTingChengYuan.Rows[j].Cells[0].Controls[3]).Value;
            dtHeDingMianJiJiaTingChengYuan.Rows[j][4] = ((HtmlSelect)gv1HeDingMianJiJiaTingChengYuan.Rows[j].Cells[0].Controls[5]).Value;
            dtHeDingMianJiJiaTingChengYuan.Rows[j][5] = ((HtmlInputText)gv1HeDingMianJiJiaTingChengYuan.Rows[j].Cells[0].Controls[7]).Value;
            dtHeDingMianJiJiaTingChengYuan.Rows[j][6] = ((HtmlSelect)gv1HeDingMianJiJiaTingChengYuan.Rows[j].Cells[0].Controls[9]).Value;
            dtHeDingMianJiJiaTingChengYuan.Rows[j][7] = ((HtmlInputText)gv1HeDingMianJiJiaTingChengYuan.Rows[j].Cells[0].Controls[11]).Value;
            dtHeDingMianJiJiaTingChengYuan.Rows[j][8] = ((HtmlSelect)gv1HeDingMianJiJiaTingChengYuan.Rows[j].Cells[0].Controls[13]).Value;</Title>
      <Title id="96025815" name="动态添加DIV层和table" type="0">HtmlGenericControl div =new HtmlGenericControl(); 


 Response.Write("&lt;table border=\"1\"&gt;");
        Response.Write("&lt;tr&gt;");
        Response.Write("&lt;td colspan=\"3\" rowspan=\"3\"&gt;");
        Response.Write("&lt;asp:TextBox ID=\"TextBox1\" runat=\"server\"&gt;66666666666&lt;/asp:TextBox&gt;&lt;/td&gt;");
        Response.Write("&lt;/tr&gt;");
        Response.Write("&lt;/table&gt;");


-------------------第二种
Panel div1 = new Pane(); 
HtmlGenericControl iframe1 = new HtmlGenericControl( "iframe "); 
div1.Controls.Add(iframe1); 
div1.Visible = true; 
iframe1.Visible = true; 
Page.Form.Controls.Add(div1); 
iframe1.Attributes.Add( "src ", "http://www.sohu.com ");

-------------------第三种
&lt;asp:PlaceHolder ID="ph1" runat="server"&gt;&lt;/asp:PlaceHolder&gt;
ph1.Controls.Add(new LiteralControl("&lt;table&gt;"));
ph1.Controls.Add(new LiteralControl("&lt;tr&gt;&lt;td&gt;"));
ph1.Controls.Add(new LiteralControl(" &lt;img src=\"jt.jpg\" width=\"35px\" height=\"20px\" /&gt;"));
ph1.Controls.Add(new LiteralControl("&lt;/td&gt;&lt;/tr&gt;"));
ph1.Controls.Add(new LiteralControl("&lt;/table&gt;"));

</Title>
      <Title id="59346879" name="动态添加服务器控件" type="0">&lt;asp:PlaceHolder ID="ph1" runat="server"&gt;&lt;/asp:PlaceHolder&gt;
添加以下服务器控件 

  Button bt = new Button();
                bt.CssClass = "classOne";
                bt.Text = CountFlows[i];
                bt.Click += new EventHandler(bt_Click);
                ph1.Controls.Add(bt);
                ph1.Controls.Add(new LiteralControl(" &lt;br&gt; "));


最后一个是添加换行！</Title>
      <Title id="74842674" name="文本框判断" type="0">&lt;asp:textbox id="TextBox1" onkeyup="if(isNaN(value))execCommand('undo')" runat="server"
Width="80px" onafterpaste="if(isNaN(value))execCommand('undo')"&gt;&lt;/asp:textbox&gt;
其实服务器控件也能加上onkeydown与up等事件的
这样就行了 只能输入小数与数字

在.net开发中，为了确保数据的正确性，经常要用户输入的内容进行验证，比喻说只能输入数字。
首先在TextBox控件中加一个属性事件:
&lt;asp:textbox class="Text" 
        onkeypress="if (event.keyCode &lt; 48 || event.keyCode &gt;57) event.returnValue = false;"
id="txtY_Revenue" style="TEXT-ALIGN: right" runat="server" Width="90%" MaxLength="12"&gt;
    &lt;/asp:textbox&gt;
键盘按下去时检查按下的是不是0-9，如果不是的话，不将当前的输入放入文本框中
说明： 此方法控制TextBox只输入数字：0~9，提供一种思路
补充:
1.取消按钮按下时的虚线框 

在input里添加属性值 hideFocus 或者 HideFocus=true
2.只读文本框内容 

在input里添加属性值 readonly
3.防止退后清空的TEXT文档(可把style内容做做为类引用) 

&lt;INPUT style=behavior:url(#default#savehistory); type=text id=oPersistInput&gt;
4.ENTER键可以让光标移到下一个输入框 
&lt;input onkeydown="if(event.keyCode==13)event.keyCode=9" &gt;
5.只能为中文(有闪动) 
&lt;input onkeyup="value=value.replace(/[ -~]/g,'')" onkeydown="if(event.keyCode==13)event.keyCode=9"&gt;利用Ascii码的范围进行判断
6.只能为数字(有闪动) 
&lt;input onkeyup="value=value.replace(/[^\d]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^\d]/g,''))"&gt;利用Ascii码的范围进行判断
7.只能为数字(无闪动) 
&lt;input style="ime-mode:disabled" onkeydown="if(event.keyCode==13)event.keyCode=9" onKeyPress="if ((event.keyCode&lt;48 || event.keyCode&gt;57)) event.returnValue=false"&gt;利用Ascii码的范围进行判断
8.只能输入英文和数字(有闪动) 

&lt;input onkeyup="value=value.replace(/[\W]/g,'') "onbeforepaste="clipboardData.setData('text',clipboardData.getData('text').replace(/[^\d]/g,''))"&gt;利用js的正则表达式进行验证
9.屏蔽输入法 
&lt;input type="text" name="url" style="ime-mode:disabled" onkeydown="if(event.keyCode==13)event.keyCode=9"&gt;
10. 只能输入 数字，小数点，减号（-） 字符(无闪动) 
&lt;input onKeyPress="if (event.keyCode!=46 &amp;&amp; event.keyCode!=45 &amp;&amp; (event.keyCode&lt;48 || event.keyCode&gt;57)) event.returnValue=false"&gt;利用Ascii码的范围进行判断
11. 只能输入两位小数，三位小数(有闪动) 
&lt;input maxlength=9 onkeyup="if(value.match(/^\d{3}$/))value=value.replace(value,parseInt(value/10)) ;value=value.replace(/\.\d*\./g,'.')" onKeyPress="if((event.keyCode&lt;48 || event.keyCode&gt;57) &amp;&amp; event.keyCode!=46 &amp;&amp; event.keyCode!=45 || value.match(/^\d{3}$/) || /\.\d{3}$/.test(value)) {event.returnValue=false}" id=text_kfxe name=text_kfxe&gt; 利用js的正则表达式进行验证。
----------------------input-------------------------
 onkeydown="if(event.keyCode==13)event.keyCode=9" 
                onKeyPress="if ((event.keyCode&lt;48 || event.keyCode&gt;57)) event.returnValue=false" 

只能输入数字</Title>
      <Title id="25592228" name="JavaScrip获取ID" type="0"> document.getElementById('&lt;%=txtCodeUpdate.ClientID %&gt;')
</Title>
      <Title id="49113184" name="强大的对话框！（推荐）" type="0">http://www.planeart.cn/demo/artDialog/_doc/API.html#API</Title>
      <Title id="126e936c-03b1-4092-ad6d-47a7fd9a9216" name="如何判断手机登陆" type="0">public static bool IsWap(){   string agent =( Request.UserAgent+"").ToLower().Trim();   if(agent==""||agent.IndexOf("mozilla")!=-1||agent.IndexOf("opera")!=-1)return false;   return true;}</Title>
    </Title>
    <Title id="72467391" name="控件" type="1">
      <Title id="9977305" name="GridView" type="1">
        <Title id="44289618" name="GridView光棒效果" type="0"> protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Attributes.Add("onmouseover", "ddd=this.style.backgroundColor;this.style.backgroundColor='#6699ff'");
            e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor=ddd");
        }
    }
</Title>
        <Title id="86566815" name="GridView点击Button更改值" type="0"> protected void Button1_Click(object sender, EventArgs e)
    {
        List&lt;int&gt; count = new List&lt;int&gt;();
        for (int i = 0; i &lt; GridView1.Rows.Count; i++)
        {

            if ((GridView1.Rows[i].Cells[0].FindControl("CheckBox2") as CheckBox).Checked)
            {
                   int a  = Convert.ToInt32(GridView1.DataKeys[i].Value);
                   count.Add(a);
            }
        }
        foreach (int j in count)
        {
            GetAllUser ga = new GetAllUser();
            ga.UpdateUserOn(j);
        }
        GridView1.DataBind();
    }
</Title>
        <Title id="51178838" name="GridView与LinkBution自定义删除按钮" type="0">重要的是 用GridView 的 RowCommand事件！表示 当GridView点击按钮时
 protected void GridView1_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        if (e.CommandName == "delete")
        {
            bb.DeleteById(Convert.ToInt32(e.CommandArgument));
        }
    }
首先 给 LinkBution 按钮的2个重要属性赋值 CommandName,CommandArgument

&lt;asp:LinkButton ID="LinkButton1" CommandArgument='&lt;%# Eval("Bid") %&gt;' runat="server" CommandName="delete"&gt;删除&lt;/asp:LinkButton&gt;</Title>
        <Title id="61118194" name="GridView 修改列名共有三种方案" type="0">1.使用DataSourceID的方式添加数据，并在属性中修改列名;

2.利用 DataBind();

       SqlDataAdapter da = new SqlDataAdapter("select * from Test",conn);
        DataSet ds = new DataSet();
        da.Fill(ds);   

        this.GridView1.DataSource = ds.Tables[0].DefaultView;
        this.GridView1.DataBind();

        GridView1.HeaderRow.Cells[0].Text = "编号";
       GridView1.HeaderRow.Cells[1].Text = "姓名";

3.使用BoundField 类

SqlDataAdapter da = new SqlDataAdapter("select * from Test",conn);
        DataSet ds = new DataSet();
        da.Fill(ds);   
   
        BoundField fieldId = new BoundField();
        fieldId.DataField = "id";
        fieldId.HeaderText = "编号";

        this.GridView1.Columns.Insert(0, fieldId);

        

        BoundField fieldName = new BoundField();
        fieldName.DataField = "Name";
        fieldName.HeaderText = "姓名";
        this.GridView1.Columns.Insert(1,fieldName);
       

        int count = this.GridView1.Columns.Count;

        this.GridView1.DataSource = ds.Tables[0].DefaultView;
        this.GridView1.DataBind();
</Title>
        <Title id="73362204" name="GridView动态添加行" type="0"> protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            Session["userInfo"] = new DataTable();
        }
    }
    //添加行按钮
    protected void Button1_Click(object sender, EventArgs e)
    {
       DataTable dt = (DataTable)Session["userInfo"];
        DataRow row = dt.NewRow();
        dt.Rows.Add(row);
        GridView1.DataSource = dt;
        GridView1.DataBind();
        Session["userInfo"] = dt;
    }
    protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        DataTable dtCaiLiao = Session["userInfo"] as DataTable;
        if (GridView1.Rows.Count == 0)
        {
            return;
        }
        dtCaiLiao.Rows.RemoveAt(e.RowIndex);//删除行
        GridView1.DataSource = dtCaiLiao;
        GridView1.DataBind();
    }</Title>
        <Title id="84403805" name="DropDownList在GridView中绑定字段" type="0">在DorpDownList的items属性中添加需要的值(要对应数据库中的列的值,例如：新建,改建),在点击DorpDownList控件右边的箭头任务中的DataBindings选择SelectValue 选择要绑定的字段后 要选择格式！！ OK完毕！

◆◆◇要特别注意的是 绑定字段后 选择格式！还有点击双向绑定</Title>
        <Title id="70137131" name="GridView查找控件" type="0"> protected void GridView4_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            ((LinkButton)e.Row.Cells[7].FindControl("LinkButton1")).Attributes.Add("onclick", "return confirm('确定？')");
        }
    }</Title>
        <Title id="57438045" name="GridView转换成Excel" type="0"> public void ExportToExcel(string FileType, string FileName)
    {
        gvDaiBan.AllowPaging = false;
        bindGv();
        gvDaiBan.DataBind();
        Response.Charset = "UTF-8";
        Response.ContentEncoding = System.Text.Encoding.GetEncoding("GB2312");
        Response.AppendHeader("Content-Disposition", "attachment;filename=" + HttpUtility.UrlEncode(FileName, System.Text.Encoding.UTF8).ToString());
        Response.ContentType = FileType;
        Response.Write("&lt;meta http-equiv=Content-KType content=text/html;charset=GB2312&gt;");
        this.EnableViewState = false;
        StringWriter tw = new StringWriter();
        HtmlTextWriter hw = new HtmlTextWriter(tw);
        gvDaiBan.RenderControl(hw);
        Response.Output.Write(tw.ToString());
        Response.Flush();
        Response.End();
        gvDaiBan.AllowPaging = true;
        bindGv();
        gvDaiBan.DataBind();
    }</Title>
        <Title id="50766282" name="GridView添加分页" type="0">首先属性里更改AllowPaging  = true


    protected void gvSatisfaction_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        gvSatisfaction.PageIndex = e.NewPageIndex;
        gvSatisfaction.DataSource = mb.getSatisfaction(beginTime, endTime, ((U_UserList)Session["UserInfo"]).UserId);
        gvSatisfaction.DataBind();
    }

添加以下 这个事件就好
</Title>
        <Title id="68146605" name="GridView添加CheckBox绑定" type="0">GridView中有一列为CheckBox，添加了CheckBox后，编辑模板列，编辑DataBindings选择checked那一项，然后填上Convert.ToBoolean(Eval("bool"))




其中bool 就是绑定字段  0或者1 </Title>
        <Title id="41207782" name="GridView编辑、更新、删除" type="0">public partial class gridview_GridViewUp : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            GridViewBind();
        }
    }

    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        GridView1.PageIndex = e.NewPageIndex;
        GridViewBind();
    }

    private void GridViewBind()
    {
        string connStr = ConfigurationManager.ConnectionStrings["ConnString"].ConnectionString;
        string SqlStr = "Select a.*,b.description FROM test01 a,xueli b where a.xueli=b.code and a.id&lt;1000 and a.id&gt;200";
        DataSet ds = new DataSet();

        try
        {
            SqlConnection conn = new SqlConnection(connStr);
            if (conn.State.ToString() == "Closed") conn.Open();
            SqlDataAdapter da = new SqlDataAdapter(SqlStr, conn);
            da.Fill(ds, "test01");
            if (conn.State.ToString() == "Open") conn.Close();

            GridView1.DataSource = ds.Tables[0].DefaultView;
            GridView1.DataBind();
        }
        catch (Exception ex)
        {
            Response.Write("数据库错误，错误原因：" + ex.Message);
            Response.End();
        }
    }

    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (((DropDownList)e.Row.FindControl("DDLXueli")) != null)
        {        
            DropDownList ddlxueli = (DropDownList)e.Row.FindControl("DDLXueli");

            // 生成 DropDownList 的值，绑定数据
            string connStr = ConfigurationManager.ConnectionStrings["ConnString"].ConnectionString;
            string SqlStr = "Select * from xueli";
            DataSet ds = new DataSet();

            SqlConnection conn = new SqlConnection(connStr);
            if (conn.State.ToString() == "Closed") conn.Open();
            SqlDataAdapter da = new SqlDataAdapter(SqlStr, conn);
            da.Fill(ds, "xueli");
            if (conn.State.ToString() == "Open") conn.Close();

            ddlxueli.DataSource = ds.Tables[0].DefaultView;
            ddlxueli.DataTextField = "description";
            ddlxueli.DataValueField = "code";
            ddlxueli.DataBind();
            //

            // 选中 DropDownList
            ddlxueli.SelectedValue = ((HiddenField)e.Row.FindControl("HDFXueli")).Value;
            //
        }
    }

    protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
    {
        GridView1.EditIndex = e.NewEditIndex;
        GridViewBind();
    }
    protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
    {
        GridView1.EditIndex = -1;
        GridViewBind();
    }

    protected void GridView1_RowUpdating(object sender, GridViewUpdateEventArgs e)
    {
        string id = GridView1.DataKeys[e.RowIndex].Values[0].ToString();
        string card = ((TextBox)GridView1.Rows[e.RowIndex].FindControl("TBCard")).Text;
        string xueli = ((DropDownList)GridView1.Rows[e.RowIndex].FindControl("DDLXueli")).SelectedValue;
        string price = ((TextBox)GridView1.Rows[e.RowIndex].FindControl("TBPrice")).Text;

        string connStr = ConfigurationManager.ConnectionStrings["ConnString"].ConnectionString;
        string SqlStr = "update test01 set card='" + card + "',xueli='" + xueli + "',price='" + price + "' where id=" + id;

        try
        {
            SqlConnection conn = new SqlConnection(connStr);
            if (conn.State.ToString() == "Closed") conn.Open();
            SqlCommand comm = new SqlCommand(SqlStr, conn);
            comm.ExecuteNonQuery();
            comm.Dispose();
            if (conn.State.ToString() == "Open") conn.Close();

            GridView1.EditIndex = -1;
            GridViewBind();
        }
        catch (Exception ex)
        {
            Response.Write("数据库错误，错误原因：" + ex.Message);
            Response.End();
        }
    }

    protected void GridView1_RowDeleting(object sender, GridViewDeleteEventArgs e)
    {
        string id = GridView1.DataKeys[e.RowIndex].Values[0].ToString();
        string connStr = ConfigurationManager.ConnectionStrings["ConnString"].ConnectionString;
        string SqlStr = "delete from test01 where id=" + id;

        try
        {
            SqlConnection conn = new SqlConnection(connStr);
            if (conn.State.ToString() == "Closed") conn.Open();
            SqlCommand comm = new SqlCommand(SqlStr, conn);
            comm.ExecuteNonQuery();
            comm.Dispose();
            if (conn.State.ToString() == "Open") conn.Close();

            GridView1.EditIndex = -1;
            GridViewBind();
        }
        catch (Exception ex)
        {
            Response.Write("数据库错误，错误原因：" + ex.Message);
            Response.End();
        }
    }
}
//删除 需要设置 DataKeyNames 在Grid中
例子 &lt;asp:GridView ID="gridBranch" runat="server" AutoGenerateColumns="False" 
            BackColor="White" BorderColor="#3366CC" DataKeyNames="ID" BorderStyle="None" BorderWidth="1px" 
            CellPadding="4" onrowdeleting="gridBranch_RowDeleting"&gt;
这里的 DataKeyName =“ID” 就是绑定数据库要查询出的 主键列！就是唯一性的东西 根据ID这个字段删除某行 

</Title>
        <Title id="40203803" name="LinkButton的JavaScript提示（删除）" type="0"> LinkButton2.Attributes.Add("onclick","return confirm('确定？')");



 protected void gvRuanJian_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            ((LinkButton)e.Row.Cells[1].FindControl("LinkButton1")).Attributes.Add("onclick", "return confirm('确定要删除？')");
        }
    }</Title>
        <Title id="70693363" name="GridView绑定字段替换" type="0">比如显示后的数据是 0  替换成 "正常 "   1  替换成 "不可用" 

首先 把GridView字段 更改成模板...
然后进入 编辑模板当中  把 itemTemplate 中的 lable 名字记下来  比如  lblStatus

 protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
               if (((Label)e.Row.FindControl("lblstatus")) != null)
               {
                   if (((Label)e.Row.FindControl("lblstatus")).Text == "0")
                   {
                       ((Label)e.Row.FindControl("lblstatus")).Text = "正常";
                   }
                   else
                   {
                       ((Label)e.Row.FindControl("lblstatus")).Text = "不可用";
                   }
               }
            }
        }
</Title>
        <Title id="95812145" name="RowDataBound中修改控件Visible" type="0">
   protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
        {

  ((LinkButton)e.Row.FindControl("LinkButton2")).Visible = true;

}


在修改Visble  需要默认 控件 Visible=false



</Title>
      </Title>
      <Title id="41376854" name="DropDownList" type="1">
        <Title id="df4dc097-2339-490e-b0df-1d04e1cd559f" name="DropDwonList 如何赋值" type="0">用.Text 和 SelectValue 都是对应的是值！而非 文本

想用文本内容赋值 需要用
 for (int i = 0; i &lt; ddlPro.Items.Count; i++)
            {
                ddlPro.Items[i].Selected = false;
            }
ddlPro.Items.FindByText(dt.Rows[0]["province"].ToString()).Selected = true;

先清空内容 在赋值</Title>
        <Title id="71a9d133-0188-49dd-bf19-ffb01d17af41" name="查找是否存在" type="0">if (!ddlDis.Items.Contains(new ListItem(dt.Rows[0]["cityzone"].ToString())))
            {
                 ddlDis.Items.Add(new ListItem(dt.Rows[0]["cityzone"].ToString()));
            }
</Title>
        <Title id="42605326" name="两个DropDownList联动方法" type="0">=================第一个Dorp===============
 protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            DataTable tbQu = SqlHelper.ExecuteDataset(SqlHelper.connectionString, CommandType.Text, "select countyName,id from County").Tables[0];
            DropDownList1.DataTextField = "countyName";
            DropDownList1.DataValueField = "id";
            DropDownList1.DataSource = tbQu;
            DropDownList1.DataBind();
            DropDownList1.Items.Insert(0,"==请选择==");
        }
==============第二个Dorp============
 protected void DropDownList1_TextChanged(object sender, EventArgs e)
    {
        if (DropDownList1.SelectedIndex != 0)
        {
            DataTable tbQu = SqlHelper.ExecuteDataset(SqlHelper.connectionString, CommandType.Text,
                "select StreetSceneName from StreetScene where BelongCounty='" + DropDownList1.SelectedValue + "'").Tables[0];
            DropDownList2.DataTextField = "StreetSceneName";
            DropDownList2.DataSource = tbQu;
            DropDownList2.DataBind();
            DropDownList2.Items.Insert(0, "==请选择==");
        }
        else
        {
            DropDownList2.Items.Clear();
            DropDownList2.Items.Add("==请选择==");
        }
    }


//========需要AutoPostBack 开启</Title>
        <Title id="a76701c3-8db8-402e-90c1-553e7761e3ef" name="插入==全部==" type="0">ddlPM.DataSource = objOrder.GetAllFQ();
                ddlPM.DataTextField = "PartitionName";
                ddlPM.DataValueField = "PartitionCode";
                ddlPM.DataBind();
                ddlPM.Items.Insert(0, "===全部===");
</Title>
      </Title>
      <Title id="26280568" name="AutoComplete关键字提示框" type="0"> &lt;cc1:AutoCompleteExtender ID="AutoCompleteExtender1" runat="server"
  TargetControlID="TextBox1"   ServicePath="~/System/MyUserService.asmx" 
      ServiceMethod="getAll" MinimumPrefixLength="1" EnableCaching="true"
       CompletionSetCount="5"
    &gt;
    &lt;/cc1:AutoCompleteExtender&gt;

注释:
TargetControlID :要实现自动完成功能的控件ID
ServicePath     :WebService的路径
ServiceMethod   :要使用的WebService方法
MinimumPrefixLength :用户输入多少个字符才出现提示
EnableCaching    :是否启用缓存
CompletionSetCount:提示数据的行数

注意：1.需要建立一个Web Service 而且 方法的必须有2个参数而且参数为(string prefixText,int count)
2.而且要在在这个WebService类上面添加[System.Web.Script.Services.ScriptService]  </Title>
      <Title id="5734084" name="Accordion折叠面板" type="0">---------------------静态菜单-----------------------
&lt;cc1:Accordion ID="Accordion1" runat="server"&gt;
     &lt;Panes&gt;
      &lt;cc1:AccordionPane ID="AccordionPane1"&gt;
          &lt;Header&gt;我的好友&lt;/Header&gt;
          &lt;Content&gt;&lt;br/&gt;
              白超&lt;br/&gt;
              胖子&lt;br/&gt;
          &lt;/Content&gt;
      &lt;/cc1:AccordionPane&gt;
      &lt;cc1:AccordionPane ID="AccordionPane2"&gt;
          &lt;Header&gt;陌生人&lt;/Header&gt;
          &lt;Content&gt;&lt;br/&gt;
             张三&lt;br/&gt;
             李四&lt;br/&gt;
           &lt;/Content&gt;
       &lt;/cc1:AccordionPane&gt;
      &lt;/Panes&gt;
&lt;/cc1:Accordion&gt;
---------------------动态菜单-------------------------------
 using AjaxControlToolkit;
 public void DispalyBooks()
    {
        //BookInfo是Model
        IList&lt;BookInfo&gt; list = BLL.getAllBook();
        foreach(BookInfo item in list)
        {
            AccordionPane ap = new AccordionPane();
            Label lable1 = new Label();
            lable1.Text = item.Name;
            //将标签控件添加到AccordionPane标题部分
            ap.HeaderContainer.Controls.Add(lable1);
            //将AccordionPane 追加到Accordion 的 Panes集合中
            Accordion1.Panes.Add(ap);
        }
    }
-------------------------注释-------------------------------
HeaderCssClass:表示整个菜单的标题样式

ContentCssClass:表示菜单的内容样式

AutoSize:表示Accordion内容的现实方式，主要有None、Limit合Fill三种，其中None表示可以被无限的拉伸和收缩

Panes:Panse是Accordion控件的内容所在，它里面只能包括AccordionPance控件，可以有很多歌Panse和AccordionPance

HeaderTemplate:Accordion的标题模板

ContentTemplate：Accordion的内容模板

------------------错误---如果没有上下折叠效果-----------
只要将
&lt;asp:ScriptManager ID="ScriptManager1" runat="server" /&gt; 
更改为：
&lt;ajaxToolkit:ToolkitScriptManager ID="ToolkitScriptManager1" runat="server"&gt;&lt;/ajaxToolkit:ToolkitScriptManager&gt;

当然在页面的头部，你有写 &lt;%@ Register Assembly="AjaxControlToolkit" Namespace="AjaxControlToolkit" TagPrefix="ajaxToolkit" %&gt;

</Title>
      <Title id="6292915" name="Calender日期控件" type="0"> &lt;cc1:CalendarExtender ID="CalendarExtender1" runat="server"
         TargetControlID="txtDate"
         Format="yyyy-MM-dd"
         CssClass="cssCdar"
         PopupButtonID="Button"
         
        &gt;
        &lt;/cc1:CalendarExtender&gt;
-----------------------注释------------------------------
TargetControlID：与日期绑定的TextBox控件ID
Format：日历显示的日期格式
CssClass：日历的样式
PopupButtonID：通过选择的按钮弹出日期时按钮的ID</Title>
      <Title id="39383582" name="CollapsiblePanel控件隐藏折叠" type="0"> &lt;cc1:CollapsiblePanelExtender ID="CollapsiblePanelExtender1" runat="server"
         TargetControlID="Panel1"
         CollapsedSize="0"
         ExpandedSize="342"
         Collapsed ="false"
         ExpandControlID="Panel2"
         CollapseControlID="Panel2"
         AutoCollapse="false"
         AutoExpand="false"
         ScrollContents="false"
         CollapsedText="显示..";
         ExpandedText="隐藏.."
         ImageControlID="imgbtnHideShow"
         ExpandedImage="~/images/001.jpg"
         CollapsedImage="~/image/002.jpg"
         ExpandDirection="Horizontal"
        &gt;
        &lt;/cc1:CollapsiblePanelExtender&gt;
-------------------------注释-------------------------------------
TargetControlID：被显示或隐藏的Panel的ID
CollapsedSize：折叠后的尺寸
ExpandedSize：展开后的尺寸
Collapsed ：默认Panel是否处于折叠状态
ExpandControlID：激发伸展效果的控件ID
CollapseControlID：激发折叠效果的控件ID
AutoCollapse：失去焦点时是否自动折叠
AutoExpand：失去焦点时是否自动展开
ScrollContents：Panel内是否显示滚动条
CollapsedText：折叠后显示的文本信息
ExpandedText：展开后显示的文本信息
ImageControlID：使用图片实现折叠和展开时图片的ID
ExpandedImage：实现展时使用的图片路径
CollapsedImage：实现折叠时使用的图片路径
ExpandDirection：展开方向，有水平和垂直两种
-------------------------实例-----------------------------
&lt;div&gt;
        &lt;asp:Panel ID="Panel1" runat="server" Width="270px"&gt;
             ......
        &lt;/asp:Panel&gt;
    
    &lt;/div&gt;
        &lt;asp:Panel ID="Panel2" runat="server"&gt;
            ......
        &lt;/asp:Panel&gt;</Title>
      <Title id="72705498" name="Rating控件评分" type="0"> &lt;cc1:Rating ID="Rating1" runat="server"
        CurrentRating="3"
        MaxRating="5"
        StarCssClass="ratingStar"
        EmptyStarCssClass="emptyRationgStar"
        FilledStarCssClass="filledRtingStar"
        WaitingStarCssClass="waitingRatingStar"
        AutoPostBack="true"
        OnChanged="Rating1_Changed"
        Height="22px"
        &gt;
        &lt;/cc1:Rating&gt;
-------------------------注释-----------------------------------
CurrentRating：当前默认的等级
MaxRating：最大等级
StarCssClass：等级星的样式
EmptyStarCssClass：未被选中的等级星的显示样式
FilledStarCssClass：选中的等级星的显示样式
WaitingStarCssClass：更改等级星选中状态时的显示样式
OnChanged：等级变化时触发的事件

提示：ratingStar、emptyRationgStar、filledRtingStar、waitingRatingStar等样式在《使用Ajax和Web Service》68页</Title>
      <Title id="5487187" name="ModalPopup模式窗口" type="0"> &lt;cc1:ModalPopupExtender ID="ModalPopupExtender1" runat="server"
         TargetControlID="btnSelect"
         PopupControlID="Panel1"
         DropShadow="true"
         OkControlID="btnOK"
         CancelControlID="btnCencel"
         Drag="true"
         PopupDragHandleControlID="Panel2"
         BackgroundCssClass="bgCss"
         X="250"
         Y="250"
        &gt;
        &lt;/cc1:ModalPopupExtender&gt;
-----------------------注释----------------------------
TargetControlID：用来控制弹出窗口的控件ID
PopupControlID：要弹出的控件ID
DropShadow：弹出的控件是否有阴影效果
OkControlID：确定按钮的ID
CancelControlID：取消按钮的ID
Drag：是否允许拖拽
PopupDragHandleControlID：允许拖拽的控件
BackgroundCssClass：弹出控件后其它部分的样式
X：水平坐标，距页面左边缘的距离
Y：垂直坐标，距页面上边缘的距离</Title>
      <Title id="93430330" name="UpdateProgress多个控件应用" type="0">protected void Page_Load(object sender,EventArgs e)
{
    UpdateProgress1.AssociatedUpdatePanelID= "UpdatePanel1";
    UPdateProgress2.AssociatedUpdatePanelID= "UpdatePanel2";
}

protected void Button1_Click(object sender,EventArags e)
{
    this.Label1.Text = DateTime.Now.ToString();
   Thread.Sleep(5000);
}
--------------------------------注释
为UpdateProgress1 的 AssociatedUpdatePanelID属性 指定 哪一个UpdatePanel 就可以实现多个</Title>
      <Title id="59129179" name="TabContainer控件-选项卡" type="0"> &lt;cc1:TabContainer ID="TabContainer1" runat="server" Width="167px"&gt;
            &lt;cc1:TabPanel ID="tag1" runat="server" &gt;
              &lt;HeaderTemplate&gt;选项卡一&lt;/HeaderTemplate&gt; 
               &lt;ContentTemplate&gt;内容一..&lt;/ContentTemplate&gt;
            &lt;/cc1:TabPanel&gt;
             &lt;cc1:TabPanel ID="tag2" runat="server" &gt;
              &lt;HeaderTemplate&gt;选项卡二&lt;/HeaderTemplate&gt; 
               &lt;ContentTemplate&gt;内容二...&lt;/ContentTemplate&gt;
            &lt;/cc1:TabPanel&gt;
        &lt;/cc1:TabContainer&gt;
------------------------注释---------------------------
HeaderTemplate：选项卡的标题模板
ContentTemplate：选项卡内容模板</Title>
      <Title id="81676197" name="SqlDataSource查询更改方法" type="0">&lt;asp:SqlDataSource ID="SqlDataSource1" runat="server" 
            ConnectionString="&lt;%$ ConnectionStrings:BooksConnectionString %&gt;" 
            SelectCommand="SELECT BookInfo.id, BookInfo.bookName, BookInfo.price, c.typeName FROM BookInfo INNER JOIN TypeInfo AS c ON BookInfo.typeId = c.typeId" 
            
            UpdateCommand="UPDATE BookInfo SET bookName = @bookName, price = @price WHERE id = @id" 
            onselecting="SqlDataSource1_Selecting" onupdated="SqlDataSource1_Updated"&gt;
            &lt;UpdateParameters&gt;
                &lt;asp:Parameter Name="bookName" /&gt;
                &lt;asp:Parameter Name="price" /&gt;
                &lt;asp:Parameter Name="id" /&gt;
            &lt;/UpdateParameters&gt;
            
        &lt;/asp:SqlDataSource&gt;

★★★ 修改时参数&lt;UpdateParameters&gt;时关键
</Title>
      <Title id="92241584" name="TreeNode 节点提示功能" type="0">TreeNode node = new TreeNode(treeName, ltv.FindAffairID(userPower[i]));
                    
node.ToolTip = "在此属性添加提示功能":
</Title>
      <Title id="30140738" name="TextBox 失去焦点事件" type="0">1.AutoPostBack    = true
2.TextChanged(object sender,EventArgs e)
{
    ...搞定
}</Title>
      <Title id="65159914" name="TreeView 展开和收缩" type="0"> TreeNode treeNode = new TreeNode();
            treeNode.SelectAction = TreeNodeSelectAction.Expand;

treeview.Nodes.Add(treeNode);</Title>
      <Title id="63903953" name="给button按钮添加背景" type="0"> background:url(images/bkFlow_blue.gif);
</Title>
      <Title id="71005039" name="TreeView关闭所有节点" type="0">tvAffairs.CollapseAll();
  关闭
 tvAffairs.ExpandAll();
展开</Title>
      <Title id="73759992" name="TextBox设置文字居中" type="0">&lt;asp:TextBox   id="TextBox1"   style="TEXT-ALIGN:center"   runat="server"&gt;&lt;/asp:TextBox&gt;




只要添加  style="TEXT-ALIGN:center"    就好</Title>
      <Title id="45870400" name="AspNetPager分页(极品)" type="0">路径：Data\DLL\AspNetPager.dll


1. 先把 DLL导入 VS工具栏  
2. 再把DLL导入到项目中
3.把控件拖入界面
4.在查询中 只要设置2个属性 
     (1) AspNetPager1.PageSize = 10; //设置每页显示的记录数量
    (2) AspNetPager1.RecordCount = pageMax; //获取出要使用的总记录数

//存储过程是万能类型！！任意查询都可通用！！在该程序Data/TXT/分页存储过程.txt

5.在    AspNetPager1_PageChanged 事件中调用 查询方法即可



=========================代码如下======================
 protected void Page_Load(object sender, EventArgs e)
        {
            AspNetPager1.PageSize = 10;            
           if (!IsPostBack)
            {
                SelectALL();
            }
        }

   protected void AspNetPager1_PageChanged(object sender, EventArgs e)
        {
            SelectALL();
        }
 protected void SelectALL()
        {
            int pageMax = 0;
            objGroup = new DAL();
            GridView1.DataSource = objGroup.SelectAllCustomerStore(AspNetPager1.CurrentPageIndex.ToString(),     
            AspNetPager1.PageSize.ToString(), ref pageMax,"where 1=1");
            GridView1.DataBind();
            AspNetPager1.RecordCount = pageMax; //返回出总记录数 即count
        }

===================后台代码以及存储过程============================
///方法一
 public DataTable SelectAllCustomerStore(string PageIndex, string PageCount, ref int PageMax,string where)
        {

            PageMax = 0;
            string strSql = "EXEC ProAllGroup @PAGEINDEX,@PAGESIZE,@OVERID,@SELECT,@TABLENAME,@WHEREVALUE,@ORDER";

            IDbDataParameter[] parameters = new IDbDataParameter[]{
                DataAccess.CreateParameter("@PAGEINDEX",PageIndex),
                DataAccess.CreateParameter("@PAGESIZE",PageCount),
                DataAccess.CreateParameter("@OVERID","CustomID"),
                 DataAccess.CreateParameter("@SELECT","b.*"),
                DataAccess.CreateParameter("@TABLENAME","tbCustomerStore a inner join tbproductinf b on a.productCode= b.productCode"),
                DataAccess.CreateParameter("@WHEREVALUE",where),
                DataAccess.CreateParameter("@ORDER","order by SerialNo"),
                };

            DataSet objSet = null;
            objSet = dal.ExecuteDataSet(strSql, CommandType.Text, parameters);
            PageMax = (int)objSet.Tables[1].Rows[0][0];

            return objSet.Tables[0];
        }

///方法二 （推荐）
//==============================================
 public DataTable SelectAllCustomerStore(string PageIndex, string PageCount, ref int PageMax, string where)
        {

            PageMax = 0;
            SqlParameter[] parm = new SqlParameter[7];
            parm[0] = new SqlParameter("@PAGEINDEX", PageIndex);
            parm[1] = new SqlParameter("@PAGESIZE", PageCount);
            parm[2] = new SqlParameter("@OVERID", "ID");
            parm[3] = new SqlParameter("@SELECT", "*");
            parm[4] = new SqlParameter("@TABLENAME", "tbBranch");
            parm[5] = new SqlParameter("@WHEREVALUE", where);
            parm[6] = new SqlParameter("@ORDER", "Order by ID ");

            DataSet objSet = new DataSet();
            dal.ExecuteProcedure("ProAllGroup",parm,ref objSet);
            
            PageMax = (int)objSet.Tables[1].Rows[0][0];

            return objSet.Tables[0];
        }

//===============================================
//存储过程是万能类型！！任意查询都可通用！！在该程序Data/TXT/分页存储过程.txt

//HTML 页面代码 ----借鉴
&lt;div style=" text-align:center"&gt;
                   &lt;webdiyer:AspNetPager ID="AspNetPager1" runat="server" FirstPageText="首页" 
                    LastPageText="尾页" LayoutType="Div" NextPageText="下一页" PageIndexBoxType="TextBox" 
                    PrevPageText="上一页" ShowPageIndexBox="Never" SubmitButtonText="" NumericButtonTextFormatString="[{0}]"
                    TextAfterPageIndexBox="" TextBeforePageIndexBox="" 
                        onpagechanged="AspNetPager1_PageChanged"&gt;
                &lt;/webdiyer:AspNetPager&gt;
                &lt;/div&gt;

</Title>
      <Title id="65912708" name="验证控件" type="0">RequiredFieldValidator（必须字段验证） 用于检查是否有输入值 
CompareValidator（比较验证） 按设定比较两个输入 
RangeValidator（范围验证） 输入是否在指定范围 
RegularExpressionValidator（正则表达式验证） 正则表达式验证控件 
CustomValidator（自定义验证） 自定义验证控件 
ValidationSummary（验证总结） 总结验证结果 



======================================================
一、RequiredFieldValidator（必须字段验证）的使用

RequiredFieldValidator控件使用的标准代码如下：

＜ASP:RequiredFieldValidator id="Validator_Name" Runat="Server"
　　　ControlToValidate="要检查的控件名"
　　　ErrorMessage="出错信息"
　　　Display="Static|Dymatic|None"
　＞
　占位符
＜/ASP: RequiredFieldValidator ＞

在以上标准代码中：
　　ControlToValidate：表示要进行检查控件ID；
　　ErrorMessage：表示当检查不合法时，出现的错误信息；
　　Display：错误信息的显示方式；Static表示控件的错误信息在页面中占有肯定位置；Dymatic表示控件错误信息出现时才占用页面控件；None表示错误出现时不显示，但是可以在ValidatorSummary中显示；
　　占位符：表示Display为Static时，错误信息占有"占位符"那么大的页面空间；

现在，让我们看一个实例：
＜ASP:TextBox id="txtName" RunAt="Server"/＞
＜ASP:RequiredFieldValidator id="Validator1" Runat="Server"
　　　ControlToValidate="txtName"
　　　ErrorMessage="姓名必须输入"
　　　Display="Static"＞
　　*姓名必须输入
＜/ASP:RequiredFieldValidator＞

在以上例子中，检查txtName控件是否有输入，如果没有，显示错误信息"姓名必须输入"。是不是很简单？
注意：以上代码和下面其他控件的代码最好放入Form中，和ASP中不一样的是，Form最好写为这样：
＜Form RunAt="Server"＞
其他代码
＜/Form＞　 
这样，Form在服务器端执行，提交才会有效；

二、CompareValidator（比较验证）控件

比较控件比较两个控件的输入是否符合程序设定，大家不要把比较仅仅理解为"相等"，尽管相等是用的最多的，其实，这里的比较包括范围很广，大家看标准代码就会明白。

比较控件的标准代码如下：
＜ASP:CompareValidator id="Validator_ID" RunAt="Server"
ControlToValidate="要验证的控件ID"
errorMessage="错误信息"
ControlToCompare="要比较的控件ID"
type="String|Integer|Double|DateTime|Currency"
operator="Equal|NotEqual|GreaterThan|GreaterTanEqual|LessThan|LessThanEqual|DataTypeCheck"
Display="Static|Dymatic|None"
＞
占位符
＜/ASP:CompareValidator＞

在以上标准代码中：
　　Type表示要比较的控件的数据类型；
　　Operator表示比较操作（也就是刚才说的为什么比较不仅仅是"相等"的原因），这里，比较有7种方式；
　　其他属性和RequiredFieldValidator相同；
　　在这里，要注意ControlToValidate和ControlToCompare的区别，如果operate为GreateThan，那么，必须ControlToCompare大于ControlToValidate才是合法的，这下，应该明白它们两者的意义了吧？例子程序请参考RequiredFieldValidator控件，对照标准代码自己设计。

三、RangeValidator（范围验证）控件

验证输入是否在一定范围，范围用MaximumValue（最大）和MinimunVlaue来确定，标准代码如下：

＜ASP:RangeValidator id="Vaidator_ID" Runat="Server" 
controlToValidate="要验证的控件ID"
type="Integer"
MinimumValue="最小值"
MaximumValue="最大值"
errorMessage="错误信息"
Display="Static|Dymatic|None"
＞
占位符
＜/ASP:RangeValidator＞

在以上代码中：
用MinimumValue和MaximumValue来界定控件输入值得范围，用type来定义控件输入值的类型。

四、RegularExpresionValidator（正则表达式）控件

正则表达式验证控件的功能非常强大，你可以自己容易构造验证方式，我们先来看看标准代码：

＜ASP:RegularExpressionValidator id="Validator_ID" RunAt="Server"
ControlToValidate="要验证控件名"
ValidationExpression="正则表达式"
errorMessage="错误信息"
display="Static"
＞
占位符
＜/ASP:RegularExpressionValidator＞

在以上标准代码中，ValidationExpression是重点，现在来看看它的构造：
　　在ValidationExpression中，不同的字符表示不同的含义：
　　"."表示任意字符；
　　"*"表示和其他表达式一起，表示容易组合；
　　"[A-Z]"表示任意大写字母；
　　"\d"表示容易一个数字；
　　注意，在以上表达式中，引号不包括在内；
　　举例：
　　　正则表达式：".*[A-Z]"表示数字开头的任意字符组合其后接一个大写字母。

五、ValidationSummary（验证总结）控件

该控件收集本页的所有验证错误信息，并可以将它们组织以后再显示出来。其标准代码如下：

＜ASP:ValidationSummary id="Validator_ID" RunAT="Server"
HeaderText="头信息"
ShowSummary="True|False"
DiaplayMode="List|BulletList|SingleParagraph"
＞
＜/ASP: ValidationSummary ＞　 
在以上标准代码中，HeadText相当于表的HeadText，DisplayMode表示错误信息显示方式：List相当于HTML中的＜BR＞；BulletList相当于HTML中的＜LI＞；SingleParegraph表示错误信息之间不作如何分割；

六、CustomValidator（自定义验证）控件

该控件用自定义的函数界定验证方式，其标准代码如下：

＜ASP:CustomValidator id="Validator_ID" RunAt="Server"
controlToValidate="要验证的控件"
onServerValidateFunction="验证函数"
errorMessage="错误信息"
Display="Static|Dymatic|None"
＞
占位符
＜/ASP: CustomValidator ＞</Title>
      <Title id="91351743" name="选项卡(自定义)" type="0">========================= CSS=========================
.divDisTapOne
{
    padding-top:3px;background:#FFFFFF;font-size:16px; color:#FF0000; font-weight:bold;
    cursor:pointer;
}
.divDisTapTwo
{
     filter:alpha(opacity=90);
	opacity:0.9;
	-moz-opacity=0.9;   
	font-size:16px; color:#000000
    }

.divProMessageMain{
	width:734px;
	height:25px;
	background:url(../Image/backTop.gif);
	clear:both;
	padding-top:5px;
	text-align:center
}
//注释：background:url(../Image/backTop.gif); 这个图片 就是一条红色的背景图片   可以改成背景色
=================javaScript=================
 function mouseIn1() {
           var div = document.getElementById("div-1");
           div.className="divDisTapOne"
           var div2 = document.getElementById("div-2");
           div2.className = "divDisTapTwo"
           var divCpms = document.getElementById("Cpms");
           divCpms.style.display = "block";
           var divGgms = document.getElementById("Ggms");
           divGgms.style.display = "none";
       }
       function mouseIn2() {
           var div = document.getElementById("div-2");
           div.className = "divDisTapOne"
           var div2 = document.getElementById("div-1");
           div2.className = "divDisTapTwo"
           var divCpms = document.getElementById("Cpms");
           divCpms.style.display = "none";
           var divGgms = document.getElementById("Ggms");
           divGgms.style.display = "block";
       }
====================HTML===============================

&lt;div class="divProMessageMain"&gt;
						&lt;table width="100%" height="30px" border="0"&gt;
							&lt;tr&gt;
								&lt;td width="2%"&gt;&lt;/td&gt;
								&lt;td width="15%" &gt;&lt;div id="div-1" onmouseover="mouseIn1()" class="divDisTapOne"&gt;产品描述&lt;/div&gt;&lt;/td&gt;
								&lt;td width="15%"&gt;&lt;div id="div-2"  onmouseover="mouseIn2()" class="divDisTapTwo"&gt;规格描述&lt;/div&gt;&lt;/td&gt;
								&lt;td&gt;&lt;/td&gt;
								&lt;td&gt;&lt;/td&gt;
								&lt;td&gt;&lt;/td&gt;
							&lt;/tr&gt;
						&lt;/table&gt;
					&lt;/div&gt;
					&lt;div  id="Cpms" class="divProBody" style=" display:block"&gt;
                    
                     第一个选项卡

                    &lt;/div&gt;
                    &lt;div id="Ggms" class="divProBody" style=" display:none"&gt;
    
                   第二个选项卡
                    &lt;/div&gt;

</Title>
      <Title id="28086311" name="可移动层、对话框（推荐）" type="0">要有 ajax 控件！！
//---=================------HTML 头部添加--------=======================-----
&lt;%@ Register Assembly="AjaxControlToolkit" Namespace="AjaxControlToolkit" TagPrefix="cc1" %&gt;


//-==================javascript================================
&lt;script type="text/javascript"&gt;
 function DisplayDiv() {

        var div = document.getElementById('&lt;%=PanelHead.ClientID %&gt;');
        div.style.display = "block";
        div.style.top = "40%";
        div.style.left = "35%";
        return false;
    }
    function imgFoues() {
        document.getElementById('imgX').src = "../Admin/Image/XB.png";
    }
    function imgFouesUn() {
        document.getElementById('imgX').src = "../Admin/Image/XA.png";
    }
    function closeDiv() {
        var div = document.getElementById('&lt;%=PanelHead.ClientID %&gt;');
        div.style.display = "none";
    }
&lt;/script&gt;
=========================HTML==================

    &lt;cc1:dragpanelextender ID="DragPanelExtender1" TargetControlID="PanelHead" 
        DragHandleID="PanelBody" runat="server"&gt;
   &lt;/cc1:dragpanelextender&gt;
    &lt;asp:Panel ID="PanelHead" Width="400px" style=" display:none; background: url(../Admin/Image/index-menu.gif)" runat="server"&gt;
        &lt;asp:Panel ID="PanelBody" runat="server"&gt;
          &lt;div style=" background: url(../Admin/Image/TitlBlue.png); height:30px; font-family:微￠软è?雅?黑ú; color:White;"&gt;
          &lt;table cellpadding="0" cellspacing="0"  style=" width:100%; height:100%"&gt;
                &lt;tr&gt;
                    &lt;td style="  width:9px;text-align:left"&gt;&lt;img alt="" src="../Admin/Image/leftRound.png" /&gt;&lt;/td&gt;
                    &lt;td align="left"  style=" padding-left:10px; padding-top:5px; color:White"&gt;手?机ú修T改?&lt;/td&gt;
                    &lt;td align="right" style=" text-align:right; padding-right:10px; padding-top:5px;"&gt;&lt;img id="imgX" onclick="closeDiv()" onmousemove="imgFoues()"  onmouseout="imgFouesUn()" alt="" src="../Admin/Image/XA.png" /&gt; &lt;/td&gt;
                    &lt;td style=" width:12px;text-align:right"&gt;&lt;img alt="" src="../Admin/Image/rightRound.png" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
          &lt;/table&gt;
          &lt;/div&gt;
        &lt;/asp:Panel&gt;
        &lt;asp:Panel ID="Panel3" BackColor="White" runat="server"&gt;
        &lt;div id="changeptprocess" style="border:#70A9DD 1px solid;display:block; width:398px; height:200px"&gt;
            &lt;asp:UpdatePanel style=" width:100%; height:100%" ID="UpdatePanel3" runat="server"&gt;
            &lt;ContentTemplate&gt;
            
           
          &lt;table  style=" width:100%; height:100%"&gt;
          &lt;tr&gt;&lt;td align="right"&gt;手?机ú号?码?：阰&lt;/td&gt;&lt;td&gt;
              &lt;asp:Label ID="lblOldMoblie" runat="server" Text="Label"&gt;&lt;/asp:Label&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;
                &lt;asp:Button 
                  ID="btnSend" runat="server" 
                  style=" background-image:url(../Image/btnBackImg.png); width:57px; height:21px" 
                  Text="发ぁ?送í" onclick="btnSend_Click" /&gt;&lt;/td&gt;&lt;td&gt;
                 &lt;/td&gt;&lt;/tr&gt;
          &lt;tr&gt;&lt;td align="right"&gt;验é证¤码?：阰&lt;/td&gt;&lt;td&gt;
              &lt;asp:TextBox ID="txtCheck" class="textline" runat="server"&gt;&lt;/asp:TextBox&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
         &lt;tr&gt;&lt;td align="right"&gt;新?手?机ú号?：阰&lt;/td&gt;&lt;td&gt;
              &lt;asp:TextBox ID="txtNewMobile" class="textline" runat="server"&gt;&lt;/asp:TextBox&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
          &lt;tr&gt;&lt;td &gt;
             &lt;/td&gt;&lt;td align="left"&gt;
                  &lt;asp:Button ID="btnOK" runat="server" 
                      style="background-image: url(../Image/btnBackImg.png); width: 57px; height: 21px" 
                      Text="确ā?认?" onclick="btnOK_Click" /&gt;
              &lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
          &lt;/table&gt;
           &lt;/ContentTemplate&gt;
            &lt;/asp:UpdatePanel&gt;
        &lt;/div&gt;
        &lt;/asp:Panel&gt;
  
    &lt;/asp:Panel&gt;
=======================样式图片图片在Data/IMG/...============</Title>
      <Title id="97393380" name="日期控件（推荐）" type="0">在本地目录 Data\JS\  My97DatePicker
把整My97DatePicker个文件夹 复制到工程中

1. 导入
&lt;script language="javascript" type="text/javascript" src="/Script/My97DatePicker/WdatePicker.js"&gt;&lt;/script&gt;
 
2. 
 &lt;input type="text" id="txtBirtdy" runat="server" onclick="WdatePicker()" readonly="readonly"  /&gt;


完成  ！！！！
</Title>
      <Title id="1f1818fe-7d3f-422c-995c-cf8c682f470d" name="TextBox 控件提示 " type="0">placeholder="请?输?入?5-20个?字?符?"
 


&lt;asp:TextBox ID="txtCode" runat="server" CssClass="noline" placeholder="请?输?入?5-20个?字?符?" style=" margin-top:0.2em; margin-left:2.8em;" &gt;&lt;/asp:TextBox&gt;

</Title>
      <Title id="9e7d2c24-38df-4bde-b591-615470bb7e42" name="CheckBoxList 全选和反选" type="0">for (var i = 0; i &lt; document.getElementById("&lt;%=cblBox.ClientID %&gt;").getElementsByTagName("input").length; i++) {
        document.getElementById("&lt;%=cblBox.ClientID %&gt;_" + i).checked = false;
    }     





&lt;asp:CheckBoxList Width="239px" ID="cblBox" runat="server"&gt;
                  &lt;/asp:CheckBoxList&gt;
</Title>
    </Title>
    <Title id="23649924" name="语法" type="1">
      <Title id="12305276" name="页面跳转" type="0">1.Response.Redirect();      (当前地址改变)

2.Context.Server.Transfer("index.aspx");
    (当前地址不改变,且只能跳转当前网站的aspx网页)</Title>
      <Title id="87997615" name="缓存技术" type="0">---------------------整页缓存-----------------------------
&lt;%@ OutputCache
      Duration="60"
   VaryByParam="id;name"
      VaryByContorl="none"
      Location="any"
      VarByCustom="browser"
%&gt;
----------------------注释
Duration：必须属性,表示压面被缓存时间，以秒为单位
VaryByParam：该属性是以分隔号的字符串变量,以其中每一个变量作为参数传递的页都讲被作为缓存处理.“none”表示不随任何参数变化，“*”根据所有参数变化   注意：如果没有VaryByControl，该属性是必须的
VaryByContorl：该属性是以分隔号的字符串变量,用来改变用户控件的输出缓存，这些字符串代表用户控件声明的服务器控件ID  注意：如果没有VarByParam，该属性是必须的
Loaction：指定输出缓存项的位置,默认为any
VarByCustom：用于自定义输出缓存要求，它允许在global.asax中自定义变动，如果该属性值是borwser，则缓存将随浏览器名称和主要版本信息的不同而异
&lt;%@ OutputCache Duration="600" VaryByParam="none"%&gt;

---------------------页面部分缓存-------------------------------
Substitution控件
&lt;asp:Substitution ID="Substitution1" runat="server" MethodName="getTime" /&gt;
--------------------后台代码
 public static string getTime(HttpContext cont)
    {
        return DateTime.Now.ToString();
    }
---------------------注释
注意Substitution控件MethodName属性所调用的方法必须满足3个条件
1.必须是static方法
2.返回类型必须是string类型
3.参数类型必须是HttpContent类型
★★★可以把这个Substitution控件看做一个Label 

---------------------应用程序缓存----------------------------
using System.Web.Caching;
1.Cache["bookinfo"] = bookBLL.getBooks();

2. 使用Add()方法 这种方法适用于需要设置缓存的有效期、依赖项的缓存
  Cahe.Add("text1","使用add缓存测试",null,DateTime.Now.AddSeconds(6),TimeSpan.Zero,CacheItemPriority.High,null);
使用add()方法时 要注意它的7个参数必须写完整才生效，所以灵活性不够好

3.使用Insert()方法可以实现多种方法的重载，使用起来比较灵活
      只需要键值两个参数就可以添加缓存
   Cache.Insert("text2"."使用insert缓存测试"); 
   添加依赖项的缓存如下
   Cache.Insert("text3","使用Insert缓存测试",new System.Web.Caching.
      CacheDependency(null,dependencies));
      设置有效期策略的缓存如下
   Cache.Insert("text4","使用insert缓存测试",DateTime.Now.AddMinutes(1d),System.Web.Caching.Cache.NoSlidingExpiration);
      添加优先级的缓存如下
   Cache.Insert("text5","使用insert缓存测试",null,
      System.Web.Caching.Cache.NoAbosoluteExpiration,
      System.Web.Caching.Cache.NoAbosoluteExpiration,
      System.Web.Caching.CacheItemPriority.High,null);
--------------------------------示例代码
 public void ininPage(int bid)
    {
        Book book = BookManager.GetBookById(bid);
        if (Cache["BookCache"] == null)
        {
            Cache["BookCache"] = BookManager.getBookById(bid);
        }
        else
        {
            book = (Book)Cache["BookCache"];
        }
    }
 

</Title>
      <Title id="39999556" name="&lt;appSettings&gt;用法" type="0">&lt;appSettings&gt;
//添加一个Connstr字符串
&lt;add key="Connstr" value="server=(local);database=BOOK;User ID=sa;password=sa" /&gt;
&lt;/appSettings&gt;

在任何CS页面里取值:
string connstr = ConfigurationSettings.AppSettings["Connstr"]; </Title>
      <Title id="10630909" name="DataBinder.Eval" type="0">'&lt;%# DataBinder.Eval(Container.DataItem, "字段") %&gt;'

'&lt;%# DataBinder.Eval(Container, "DataItem.字段") %&gt;'</Title>
    </Title>
    <Title id="13541513" name="Ajax" type="1">
      <Title id="41173403" name="安装AjaxControlToolkit.dll" type="0">◆◆◆本地目录Data中
DLL --- AjaxControlToolkit.dll

下载AjaxControlToolkit并集成到VS2005中的详细过程
[实名贴，值得关注] 

web2.0横空出世，ajax首当其冲，今天做web的如果再不学点ajax的话，就显的落伍了，而学ajax的用的环境如果是asp.net，那ajax.net你就不得不学了。首先就是环境的配置，如下
vs2005+sql2005+Winxp sp2+ie6.0+Office2003
工具下载  
1.ASPAJAXExtSetup.msi
http://download.microsoft.com/download/5/4/6/5462bcbd-e738-45fa-84ca-fa02b0c4e1c2/ASPAJAXExtSetup.msi
2.ASPAJAXSourceCode.msi
http://download.microsoft.com/download/6/d/6/6d6c7c47-b9ff-4934-bb03-8a45b8418d35/ASPAJAXSourceCode.msi

3.AjaxControlToolkit 
AjaxControlToolkit-NoSource
AjaxControlToolkit
有朋友给我反应说AjaxControlToolkit不能下载。现在给出下载链接。不好意思 
http://ajax.asp.net/downloads/default.aspx?tabid=47
http://www.codeplex.com/AtlasControlToolkit/Release/ProjectReleases.aspx?ReleaseId=1425

环境设置如下：
下载完 ASPAJAXExtSetup.msi 安装更新后在你的系统盘下的（以C盘为例） 出现这个 文件夹：
C:\Program Files\Microsoft asp.NET\ASP.NET 2.0 ajax Extensions\v1.0.61025
安装这个后我们就可以创建Asp.net AJAXEnabledWebSite站点了，这其实就是个ajax.net网站的模板。但是我们现在还不能使用微软给我们开发好的ajax控件 。要想知道怎么使用ajax.net控件往下看。
下载AjaxControlToolkit ，上面两个一个是带源代码的 一个是不带源代码的toolkit。建议下载带源代码的 toolkit。下载完成后把该文件解压到：
C:\Program Files\Microsoft asp.NET\ASP.NET 2.0 ajax Extensions\v1.0.61025\AjaxContronlToolkit\ 
双击运行AjaxControlToolkit.sln。
用vs2005打开这个sln，编译TemplateVSI这个项目后，把在C:\Program Files\Microsoft asp.NET\ASP.NET 2.0 AJAX Extensions\SampleWebSite\Bin下面生成的AjaxControlToolkit.dll和AjaxControlToolkit.pdb复制到
C:\Program Files\Microsoft asp.NET\ASP.NET 2.0 AJAX Extensions\Binaries文件夹下面，这样我们就可以在vs2005中使用ajax.net这些控件了。
新建一个Ajax ControlToolkitWebSite 类型的web项目。在工具栏中新添加一个选项卡起名：AjaxControltoolkit
在这个选项卡上右键选择项-》浏览找到刚才复制过去的AjaxControlToolkit.dll，添加进来。这样我们就ajax.net控件成功引用到vs2005中了 。
现在你可以新建一个 Ajax ControlToolkitWebSite  项目来 happy一下。今天就写到这里，后面将具体介绍每个ajax.net控件和vs2005下面的控件的具体用法。希望大家继续关注，有什么问题也可以在这里讨论研究。 </Title>
      <Title id="70719716" name="控件说明" type="0">ListSearchExtender   -------  快速查找下拉列表的值（按字母）

FilteredTextBoxExtender  -------限制文本框内的字符（例如只能是数字）

AutoCompleteExtender --------- 自动提示文本框(从数据库查询出来)

TextBoxWatermarkExtender -------- 文本框的提示！点击后提示消失

SlideShowExtender -------------- 图片的轮换

MaskedEditValidator  ------------- 文本框的格式控件(mask属性输入9999-99-99) 

passwordstrength ------------- 检测密码的安全度

confirmButtonExtender ---------- 对按钮弹出对话框的




</Title>
      <Title id="75460224" name="JavaScript调用后台方法" type="0">导入文件在本地目录DLL------AjaxPro.dll

第一步
导入AjaxPro.dll

第二步
protected void Page_Load(object sender, EventArgs e)
{
   AjaxPro.Utility.RegisterTypeForAjax(typeof(fd0002));
}

第三步
 [AjaxPro.AjaxMethod]
    public string getName()
    {
        return "aaa";
    }
◆◆◇ 这里方法要返回string类型

第四步

   function getName()
   { 
      fd0002.getName(tess);
   }
   function tess(ref)
   {
      alert(ref.value);
   }

◆◆◆◆注意 在 后台代码不可以 调用前台控件值
比如 text1.value 只有把值返回用JS来赋值
◆◆◆◆◆非常关键 一定要在web.config里面添加
&lt;system.web&gt; --在这个节点下添加
    &lt;httpHandlers&gt;
      &lt;add verb="POST,GET" path="ajaxpro/*.ashx" type="AjaxPro.AjaxHandlerFactory,AjaxPro"/&gt;
    &lt;/httpHandlers&gt;
&lt;/system.web&gt;

fd0002  是页面的名字  类名~</Title>
      <Title id="2740813" name="在后台设置Session" type="0"> HttpContext.Current.Session["ShenFenZheng"] 
</Title>
      <Title id="34613066" name="AJAX演示" type="0">http://www.tracefact.net/Article/AjaxControlToolkit.aspx</Title>
      <Title id="88331176" name="UpdatePanle更新值不变" type="0">需要把更新控件值的地方 也添加 UpdatePanle </Title>
      <Title id="e979eb69-a3c7-48a5-9a5f-a6a77d1f7cf5" name="UpdatePanle添加之后 服务器控件失灵" type="0">需要在
&lt;/ContentTemplate&gt;
        &lt;Triggers&gt;&lt;asp:PostBackTrigger ControlID="btnPictureSet" /&gt;&lt;/Triggers&gt;
        &lt;Triggers&gt;&lt;asp:PostBackTrigger ControlID="btnSign1Set" /&gt;&lt;/Triggers&gt;
        &lt;Triggers&gt;&lt;asp:PostBackTrigger ControlID="btnSign2Set" /&gt;&lt;/Triggers&gt;
    &lt;/asp:UpdatePanel&gt;


添加 Triggers 属性 把失灵的控件ID 写进 ControlID 里</Title>
    </Title>
    <Title id="22076779" name="手机网页" type="1">
      <Title id="dccb472d-0c48-4ad4-b8b8-6ff6a645743d" name="屏幕固定" type="0">
&lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/&gt;


在 Head 标签中添加 
</Title>
    </Title>
    <Title id="51888202" name="异常处理" type="1">
      <Title id="99911835" name="母版页 中调用JS的对象" type="0">document.getElementById("&lt;%=txtCertCode.ClientID %&gt;").value
这样才能调用到控件！！~</Title>
      <Title id="92585770" name="ajax控件异常" type="0">错误提示：AjaxControlToolkit requires ASP.NET Ajax 4.0 scripts. Ensure the correct version of the scripts are referenced. If you are using an ASP.NET ScriptManager, switch to the AjaxScriptManager in System.Web.Ajax.dll, or use the ToolkitScriptManager in AjaxControlToolkit.dll.
将
&lt;asp:ScriptManager ID="ScriptManager1" runat="server" /&gt; 
更改为：
&lt;cc1:ToolkitScriptManager ID="ToolkitScriptManager1" runat="server"&gt;&lt;/cc1:ToolkitScriptManager&gt;
当然在页面的头部，你有写 &lt;%@ Register Assembly="AjaxControlToolkit" Namespace="AjaxControlToolkit" TagPrefix="cc1" %&gt;</Title>
      <Title id="14563137" name="找不到本地路经" type="0">dateSet.ReadXml("Configer/PassWord.xml");

换成

dateSet.ReadXml(Server.MapPath("Configer/PassWord.xml"));
</Title>
      <Title id="c49efec8-4e1f-4209-a789-d08e59f5c303" name="检测到危险代码" type="0">validateRequest="false"


&lt;%@ Page Language="C#" validateRequest="false" AutoEventWireup="true" CodeBehind="CouponsHTML.aspx.cs" Inherits="UpdateData.Func.CouponsHTML" %&gt;


只要在Page里面添加 validateRequest 就OK </Title>
    </Title>
    <Title id="93401053" name="常用方法" type="1">
      <Title id="39175030" name="EXCEL上传" type="0"> &lt;asp:FileUpload ID="FileUpload1"  runat="server" /&gt;
&lt;asp:Button ID="btnUploadExcel"runat="server" Text=" 上 传 "onclick="btnUploadExcel_Click" /&gt; 





protected void btnUploadExcel_Click(object sender, EventArgs e)
{
      string tPast1 = "c:\\test\\"+DateTime.Now.ToString("yyyyMMddHHmmss")+".xls"; //某个临时路径 需要先上传至服务器
       FileUpload1.PostedFile.SaveAs(tPast1);  //保存到服务器上！
       DataSet ds = ReadExcel(tPast1);  //将EXCEL转换成DATASET

}




 /// &lt;summary&gt;
        /// 读á取?Excel文?件t
        /// &lt;/summary&gt;
        /// &lt;param name="filePath"&gt;Excel文?件t的?服务?器÷屋Y里?路·径?&lt;/param&gt;
        /// &lt;returns&gt;DataSet数簓据Y集ˉ&lt;/returns&gt;
        public DataSet ReadExcel(string filePath)
        {
            string connStr = "Provider=Microsoft.ACE.OLEDB.12.0;" + "Data Source=" + filePath + ";" + "Extended Properties=Excel 12.0;";
            string sql_F = "Select * FROM [{0}]";

            OleDbConnection conn = null;
            OleDbDataAdapter da = null;
            DataTable tblSchema = null;
            ArrayList tblNames = new ArrayList();

            // 初?始?化ˉ连?接ó，?并￠打洙?开a
            conn = new OleDbConnection(connStr);
            if (conn.State == ConnectionState.Open)
            {
                conn.Close();
            }
            conn.Open();

            // 获?取?数簓据Y源′的?表括?定¨义?元a数簓据Y                        
            tblSchema = conn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, new object[] { null, null, null, "TABLE" });

            foreach (DataRow row in tblSchema.Rows)
            {
                tblNames.Add((string)row["TABLE_NAME"]); // 读á取?表括?名?
            }

            // 初?始?化ˉ适酣?配?器÷
            da = new OleDbDataAdapter();
            // 准?备?数簓据Y，?导?入?DataSet
            DataSet ds = new DataSet();
            foreach (string tblName in tblNames)
            {
                try
                {
                    da.SelectCommand = new OleDbCommand(String.Format(sql_F, tblName), conn);

                    da.Fill(ds, tblName);

                }
                catch
                {
                    // 关?闭?连?接ó
                    if (conn.State == ConnectionState.Open)
                    {
                        conn.Close();
                    }
                    throw;
                }
            }
            // 关?闭?连?接ó
            if (conn.State == ConnectionState.Open)
            {
                conn.Close();
            }
            return ds;
        }
</Title>
      <Title id="18132316" name="对话框提示" type="0">---------------------页面无刷新提示框---------------------
◆◆◆本地目录Data中
CS --- AlertMessage.cs
  new AlertMessage().showMsg(this.Page, "添加成功！");

--------------------- 方法一 ------------------------------ 《推荐》(无需UpdatePanel)
string str = "&lt;script&gt;alert('无此用户')&lt;/script&gt;";
            Page.ClientScript.RegisterStartupScript(this.GetType(),"MyOffic",str);


--------------------- 方法二 ------------------------------
 Response.Write("&lt;script&gt;alert('登录成功！');document.location.href='login.aspx'&lt;/script&gt;");

--------------------- 方法三 ------------------------------
 Response.Write("&lt;script&gt;alert('');&lt;/script&gt;");    //此方案会影响样式
----------------------方法三 ----------------------------
 System.Web.UI.ScriptManager.RegisterStartupScript(UpdatePanel1, this.GetType(), "click", "alert('添加成功！');", true);
❤要有UpdatePanel</Title>
      <Title id="16307117-2b31-4a32-845d-a33b65678f94" name="发送地址 接受XML（接口）" type="0">public string GetHttp(string url)
        {
            HttpWebRequest myRequest = (HttpWebRequest)WebRequest.Create(url);
            myRequest.Method = "GET";
            HttpWebResponse myResponse = (HttpWebResponse)myRequest.GetResponse();
            StreamReader reader = new StreamReader(myResponse.GetResponseStream(), Encoding.UTF8);
            string content = reader.ReadToEnd();
            reader.Close();
            return content;
        }



使用方法--------------
 string path = "http://api.map.baidu.com/geocoder?address="&amp;output=xml&amp;key=ABQIAAAAzr2EBOXUKnm_jVnk0OJI7xSosDVG8KKPE1-m51RBrvYughuyMxQ-i1QfUnH94QxWIa6N4U6MouMmBA";

            XmlDocument doc = new XmlDocument();
            doc.LoadXml(GetHttp(path)); 
            XmlElement rootElement = doc.DocumentElement;

            XmlNode x = rootElement.SelectSingleNode("lat");
            XmlNode y = rootElement.SelectSingleNode("lng");
            txtX.Text = x.InnerText;
            txtY.Text = y.InnerText;
</Title>
      <Title id="0dcb6664-dbcb-4478-8cb9-4de3754e5819" name="上传图片" type="0">        protected void ibtnSave_Click(object sender, ImageClickEventArgs e)
        {

           try
            {
                if (FileUpload2.PostedFile.FileName == "")
                {
                    this.Upload_info.Text = "请选择上传文件";
                }
                else
                {
                    string filename = Guid.NewGuid().ToString() + ".jpg";
                    string serverpath = Server.MapPath("~/images/") + filename;
                    FileUpload2.PostedFile.SaveAs(serverpath);
                    this.Upload_info.Text = "上传成功";
                    ViewState["ImageFile"] = filename;
                    imgShow.ImageUrl = "~/images/" + filename;
                }
            }
            catch (Exception ex)
            {
                this.Upload_info.Text = "上?传?发ぁ?生Θ?错洙?误ó！?原-因皑?是?：阰" + ex.ToString();
            }
}
将图片名称保存在了ViewState["ImageFile"] 里  在其他保存数据库事件中可以获取到
前台代码=======================================

     &lt;div class="InfoText"&gt;
        &lt;asp:Label ID="Label7" runat="server" Text="优?惠Y券ā?图?片?：阰"&gt;&lt;/asp:Label&gt;
    &lt;/div&gt;
    &lt;div class="VSpace"&gt;&amp;nbsp;&lt;/div&gt;
    &lt;div class="InfoText"&gt;
        &lt;asp:FileUpload Font-Size="14" Font-Names="微￠软è?雅?黑ú" ID="FileUpload2" runat="server" Width="420px" /&gt;
        &lt;asp:Label ID="Label8" runat="server" Width="100px"&gt;&lt;/asp:Label&gt;
        &lt;asp:Label ID="Upload_infoTwo" runat="server" ForeColor="#CC3300"&gt;&lt;/asp:Label&gt;
    &lt;/div&gt;
    &lt;div class="InfoText"&gt;
        &lt;asp:Image ID="Image1" ImageUrl="~/images/infoimg.png"  runat="server" Height="300px" Width="500px" 
            BorderStyle="Solid" BorderWidth="1px" ImageAlign="Middle" /&gt;
    &lt;/div&gt;
    &lt;div style="margin-left:50px;color:Red;font-size:12px"&gt;
    图?片?最?佳?效§果?(200x200)
    &lt;/div&gt;
    &lt;div class="InfoText"&gt;
        &lt;span style="padding-right:400px"&gt;&amp;nbsp;&lt;/span&gt;&lt;asp:ImageButton ID="ibtnSave" 
            Width="100px" Height="35px"  runat="server" 
            ImageUrl="../images/upload.png" onclick="ibtnSave_Click" 
             /&gt;
    &lt;/div&gt;
</Title>
      <Title id="70e705b6-e10f-4ad9-ac1b-af68e76def52" name="Div加滚动条" type="0">&lt;div style=" overflow:scroll; height:500px"&gt; 这里是你要显示的内容 &lt;/div&gt;</Title>
    </Title>
    <Title id="95780511" name="HTML" type="1">
      <Title id="980ae3a3-3ab1-4940-afec-9c0f068780f9" name="DIV居中" type="0">&lt;div style=" margin:0 auto;width:18em"&gt;

其中 宽度要设置！</Title>
      <Title id="549576f6-bae5-4b17-887e-e9269566d452" name="div透明层" type="0">        &lt;div id="divAddress" style="position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; z-index: 100001; width: 100%; height: 1650px; background-color: rgb(0, 0, 0); opacity: 0.4; background-position: initial initial; background-repeat: initial;"&gt; 
        &lt;/div&gt;
</Title>
    </Title>
    <Title id="65010438" name="成品区" type="1">
      <Title id="3eb23c46-4077-454f-9eb0-8c4cd50eda42" name="细边框圆角（例子：注册页面）" type="0"> &lt;style type="text/css"&gt;
    .noline 
{ 
        BACKGROUND-COLOR:   transparent; 
        BORDER-BOTTOM:   1px none #a0a0a0; 
        FONT-SIZE:   1em;
        width: 12em;
        height:1em;
        border-left-style: none;
        border-left-color: inherit;
        border-left-width: medium;
        border-right-style: none;
        border-right-color: inherit;
        border-right-width: medium;
        border-top-style: none;
        border-top-color: inherit;
        border-top-width: medium;
        }
        #register_form{
            width:18em; 
	        padding-left:0px;
            border: 1px solid #b0b0b1;
            border-radius:10px;            /* W3C syntax */
        }
        .list:empty{
	        border:0;
        }
        .list li{line-height:40px;border-top:1px solid #b0b0b1;list-style:none;}
        .list li:first-child{border-top:0;}
        .list div{display:inline;}
    &lt;/style&gt;


&lt;div style=" margin:0 auto;width:18em"&gt;
              &lt;ul id="register_form" class="list"&gt;
					&lt;li&gt;
						&lt;div style=" margin-left:1em;"&gt;&lt;label style=" font-size:0.8em;"&gt;用?户§名?:&lt;/label&gt;&lt;/div&gt;
						&lt;div&gt;&lt;asp:TextBox ID="txtCode" placeholder="会á员±账?号?"   runat="server" CssClass="noline" style=" margin-top:0.2em;" &gt;&lt;/asp:TextBox&gt;&lt;/div&gt;
                    &lt;/li&gt;
					&lt;li&gt;
						&lt;div style="float:left;margin-left:1em;"&gt;&lt;label style=" font-size:0.8em;"&gt;设Θ?置?密ü码?:&lt;/label&gt;&lt;/div&gt;
						&lt;div&gt;&lt;asp:TextBox ID="txtPwd1" placeholder="设Θ?置?密ü码?"  runat="server" CssClass="noline"  style=" margin-top:0.2em;" TextMode="Password"&gt;&lt;/asp:TextBox&gt;&lt;/div&gt;
                   &lt;/li&gt;
					&lt;li&gt;
						&lt;div style="float:left;margin-left:1em;"&gt;&lt;label style=" font-size:0.8em;"&gt;确ā?认?密ü码?:&lt;/label&gt;&lt;/div&gt;
						&lt;div&gt;&lt;asp:TextBox ID="txtPwd2" placeholder="确ā?认?密ü码?"  runat="server" CssClass="noline" style=" margin-top:0.2em;"  TextMode="Password"&gt;&lt;/asp:TextBox&gt;&lt;/div&gt;
                    &lt;/li&gt;
                    &lt;li&gt;
						&lt;div style="float:left;margin-left:1em;"&gt;&lt;label style=" font-size:0.8em;"&gt;店台?铺ì号?:&lt;/label&gt;&lt;/div&gt;
						&lt;div&gt;&lt;asp:TextBox ID="txtBranch" placeholder="店台?铺ì号?"  runat="server" CssClass="noline" style=" margin-top:0.2em;" &gt;&lt;/asp:TextBox&gt;&lt;/div&gt;
                    &lt;/li&gt;
                    &lt;/ul&gt;
     &lt;/div&gt;
</Title>
      <Title id="be18ef13-0240-41b0-af16-8124fd0fcec0" name="将图片URL保存到本地" type="0">//将?图?片?保馈?存?到?本?地?
        public void SaveUrlImage(string Url, string FilePath)
        {
            if (Url == "")
                return;
            HttpWebRequest webrequest = (HttpWebRequest)WebRequest.Create(Url);
            HttpWebResponse webresponse = (HttpWebResponse)webrequest.GetResponse();
            if (webresponse.StatusCode == HttpStatusCode.OK)
            {
                System.Drawing.Image image = System.Drawing.Image.FromStream(webresponse.GetResponseStream());
                image.Save(FilePath); //保馈?存?在ú本?地?文?件t夹D  
                image.Dispose(); //释酣?放?资哩?源′  
            }
        }
Url  图片地址！！ FilePath 保存本地路径</Title>
    </Title>
  </StarTitle>
  <StarTitle id="47440441" name="SQL" type="1">
    <Title id="61296282" name="方法" type="1">
      <Title id="24656827" name="获取年和月" type="0">year(lieming)
month(lieming)</Title>
      <Title id="8617474" name="字符串函数" type="0">------------------------------Len--------------------------
Len  返回传递给它的字符串长度
select Len('SQL Server 课程') 
返回：12
--------------------Upper--------------------------
Upper把床递给它的字符串转换为大写
select Upper('sql server 课程')
返回：SQL SERVER 课程
--------------------Ltrim---------------------------
Ltrim清除字符串左边的空格 
select Ltrim('     Sql')
返回：Sql
--------------------Rtrim----------------------------
Rtrim清除字符串右边的空格
select Rtrim('sql        ')
返回：sql;
--------------------Right-------------------------------
Right从字符串右边返回指定数目的字符
select Right('买买提，土耳松',3)
返回：土耳松
Left 同理
--------------------Replace---------------------------------
Replace替换一个字符串的字符
select replace('莫乐可切，杨可','可','T')
返回：莫乐T切,杨T
--------------------------------------------------------------------------------</Title>
      <Title id="81692639" name="日期函数" type="0">----------------- ---GetDate-------------------------
select GetDate()
返回：今天的日期
---------------------DateDiff------------------------
两个日期之间的指定日期部分的区别
select datediff(mm,'01/01/99','05/01/99')
返回：4
---------------------DateName------------------------
日期中指定部分的字符串形式
select dateName(dw,'01/01/2009')
返回：Saturday
---------------------DatePart------------------------
日期中指定日期部分的整数形式
select datepart(day,'01/15/2000')
返回：15
--------------------时间差-----------------------
select datediff(d,'2010-11-5',getdate()) fromvoter 

中间的d代表天数 m代表月份！表示从‘2010-11-5’到今天的时间差</Title>
      <Title id="4012860" name="数学函数" type="0">------------------abs------------------------
去数值表达式的绝对值
select abs(-43)
返回：43
-----------------ceiling------------------------
取大于或等于指定数值的最小整数
select ceiling(43.5)
返回：44
-----------------Floor--------------------------
取小于或等于指定数值的最大整数
select floor(43.5)
返回 43
-----------------Power-------------------------
取数值表达式的幂值
select power(5,2)
返回 25
-----------------Round----------------------------
将数值表达式四舍五入为指定精度
select round(43.543,1)
返回 43.5
-----------------Sipn---------------------------------
对于整数返回+1，对于负数返回-1，对于0则返回0
select sipn(-34)
返回 -1
-----------------sprt----------------------------------
取浮点表达式的平方根
select sqrt(9)
返回 3</Title>
      <Title id="68505707" name="系统函数" type="0">---------------------Convert-------------------------
用来转换数据类型
select convert(varchar(5),1234565)
返回：1234565
----------------------Current_User------------------------------
返回当前用户名
select Current_User
返回：你当前登录的用户名
----------------------DataLength---------------------------------
返回用于指定表达式的字节数
select DataLength('中华人民共和国')
返回：7
</Title>
      <Title id="57321810" name="IsNull()" type="0">SELECT ISNULL(COUNT(*),0) FROM AffairsInfo 

ISNULL()是表示 如何处理为空的值</Title>
      <Title id="99161104" name="sql语句ID赛选" type="0"> select * from A_States 
 where  '|1|3|4|' like '%|'+ltrim(StateId)+'|%' </Title>
      <Title id="93804185" name="添加序号列" type="0">ROW_NUMBER()over(order by getdate()) as Number</Title>
      <Title id="59764391" name="列变成行显示" type="0">用Union ALL 连接 几个列连接几次 </Title>
    </Title>
    <Title id="19740701" name="其它" type="1">
      <Title id="82981762" name="分页实例" type="0">/****** Object:  StoredProcedure [dbo].[ProAllGroup]    Script Date: 03/17/2014 10:35:14 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- AUTHOR:BILL
-- CREATE DATE: 2012-10-13
-- DESCRIPTION:	分页数据查询
-- =============================================
CREATE PROCEDURE [dbo].[ProAllGroup] 
	@PAGEINDEX INT ,--当前页数
	@PAGESIZE INT ,--每页显示数量
	@OVERID VARCHAR(50),--转换为ID的列名
    @SELECT VARCHAR(1000),--查询内容
	@TABLENAME VARCHAR(1000),--查询的表名（多表查询时，直接写多表明：FROM TABLE1 LEFT JOIN TABLE2 ON TABLE1.ID = TABLE2.ID）
	@WHEREVALUE VARCHAR(2000),--WHERE条件
	@ORDER VARCHAR(1000)
		
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @SQL VARCHAR(2000)--拼接的SQL语句
	DECLARE @PAGESTART INT
	DECLARE @PAGEEND INT
	
	SET @PAGESTART = @PAGEINDEX*@PAGESIZE-(@PAGESIZE-1);
	SET @PAGEEND = @PAGEINDEX*@PAGESIZE;
	
    SET @SQL = 'WITH TEMP AS (SELECT '+@SELECT+',ROW_NUMBER() OVER (ORDER BY '+@OVERID+') AS ROWID FROM '+@TABLENAME+'  '+ @WHEREVALUE +' ) ';
    SET @SQL = @SQL + 'SELECT * FROM TEMP WHERE ROWID BETWEEN ' + CONVERT(VARCHAR,@PAGESTART)+' AND '+CONVERT(VARCHAR,@PAGEEND)+' '+@ORDER;
    SET @SQL = @SQL+' SELECT COUNT(*) FROM '+@TABLENAME+' '+@WHEREVALUE;
    PRINT @SQL;
    EXECUTE (@SQL);
END

GO</Title>
      <Title id="50803635" name="分页存储过程" type="0">Create proc proc_AllBook
@page int,                //当前页数
@pageSize int             //每页显示的数量
as
WITH temp As (SELECT *,ROW_NUMBER() OVER(order by ID) as rowid FROM Books)
 select * from temp where rowid between  @page*@pageSize-(@pageSize-1) and @page*@pageSize

注意:ID是列,Books是表名 
proc_AllBook是存储过程名</Title>
      <Title id="40188043" name="分页" type="0">   WITH temp As (SELECT *,ROW_NUMBER() OVER(order by pid) as rowid FROM userInfo)
   select * from temp where rowid between 1 and 5 

注释:pid 为要排序的列名,userInfo为要分页的库名</Title>
      <Title id="55434960" name="存储过程例子" type="0">Create proc addbook  
@uid      int,           //输入参数
@bookname varchar(50),
@price    float,
@zuozhe   varchar(50),
@id       int  output    //输出参数
as  
   declare @bid int
   insert into bookInfo values(@bookname,@price,@zuozhe)
   SELECT @bid=@@Identity FROM bookInfo 
   insert into tagInfo values(@uid,@bid)
   select @id =@@identity FROM bookInfo
go

declare @to int 
exec addbook 1,'上帝之手',32,'如来',@to output

select @to</Title>
      <Title id="8793109" name="事务的例子" type="0">BEGIN TRANSACTION
 DECLARE @error int
 SET @error =0

    select * from userInfo   //执行过程

 SET @error=@error+@@ERROR

 IF @error &lt;&gt; 0
  BEGIN 
    PRINT '有错误'
    ROLLBACK TRANSACTION     //回滚事务
  END
 ELSE
  PRINT '成功!'
  COMMIT TRANSACTION         //提交事务
go</Title>
      <Title id="64303932" name="Cmd开启服务" type="0">NET START MSSQLSERVER 开启

NET STOP MSSQLSERVER 关闭

必须是在管理员身份运行 不然会报错！  系统错误 5</Title>
    </Title>
    <Title id="26551396" name="语法" type="1">
      <Title id="54031439" name="得到刚输入的数据库ID" type="0">"SELECT @@Identity FROM Users"</Title>
      <Title id="24955229" name="Truncate table删除" type="0">Truncate table  users 

删除速度比 Delete执行速度快 使用系统资源和事物更少

Truncate table 删除表中所有行 但是表的结构，列，约束，索引等不会被改动，

Truncate table 不能用于有外键约束的表,需要用Delete语句</Title>
      <Title id="83079084" name="查询排序" type="0">select * from users order by id decs

asc 升序  desc降序  默认为acs</Title>
      <Title id="21627325" name="范围查询" type="0">select * from users where time between '2009-1-1' and '2010-1-1'

用BETWENN  AND 语句</Title>
      <Title id="66554889" name="删除表中重复项" type="0">select * from book where id in 
(select max(id) from book group by uid )


删除book中重复项 并保留最大的ID数... uid为重复


----------------或者----------------
select distinct  a from b

在字段前加 distinct </Title>
      <Title id="27578936" name="判断是否存在(库，表，存储过程)" type="0">IF OBJECT_ID('UserInfo') IS NOT NULL
	DROP DATABASE UserInfo


■■■DATABASE 删除数据库
■■■PROC      删除存储过程
■■■TABLE     删除表</Title>
      <Title id="3730091" name="多表合并  UNION " type="0">两个表 连接 用UNION   
 但会删除掉重复项目  
用 UNION ALL  不会删除重复项 </Title>
      <Title id="29706761" name="内联 inner join" type="0">select  *  
from fila06a3 i 
inner join vwA005 v           on i.inf_no=v.C3
inner join fila03b b          on v.sty_no = b.sty_no
inner join fild01b d          on d.Com_id=b.Com_id
inner join tbYearBDSaleYS tb  on v.C3 = tb.BDCode
where  left(StartDate,7)&lt;='2010-06'
</Title>
      <Title id="18086775" name="case when 的语法" type="0">select *,(case IsConfirm  when 'Y' then '已审核'   when 'N' then '未审核' else '其他'  end) as Confirm from tbAccountARAdjust</Title>
      <Title id="78255926" name="SQL删除列" type="0">alter table FILA01A drop column ProVip</Title>
      <Title id="64521812" name="复制相同结构表内容" type="0">insert into  table_A   select * from table_B





insert  into B(ID,Col2,Col1,Col3)
select ID,Col2,Col1,Col3 from A--select 顺序与inert顺序一至</Title>
      <Title id="37302688" name="添加唯一约束" type="0">


alter table CardInf add constraint uniqueindex unique(ID,Name)




</Title>
      <Title id="4b5a71f5-2fb7-49fd-9e3f-2e498bc145bc" name="多表更新" type="0">UPDATE dbo.Table2
    SET dbo.Table2.ColB = dbo.Table2.ColB + dbo.Table1.ColB
    FROM dbo.Table2
    INNER JOIN dbo.Table1
    ON (dbo.Table2.ColA = dbo.Table1.ColA);



</Title>
    </Title>
    <Title id="57722636" name="异常处理" type="1">
      <Title id="1879648" name="存储过程不返回结果" type="0">解决方案：在存储过程中加 set nocount on
表示不用返回受影响条数  因为存储过程中 Insert Update语句多时 就不返回了</Title>
      <Title id="aea7c4bc-ae5b-4f08-ab1e-77180abbbf38" name="provider:命名管道提供程序，error:0-管道的另一端上无任何进程。)(Microsoft SQL Server,错误:233)" type="0">打开‘程序’－‘所有程序’－‘Microsoft SQL Server ’－‘配置工具’－‘SQL Server 配置管理器’，在弹出的窗体中，找到‘SQL Server 2005 网络配置’，把‘MSSQLSERVER的协议’下的“Named Pipes”和“TCP/IP”启动，然后重新启动Microsoft SQL Server</Title>
      <Title id="c3f08197-ad9a-443c-800b-87a4ca9b220b" name="关于单引号‘报错" type="0">使用2个 单引号''  就会替换成 '了</Title>
    </Title>
    <Title id="78942430" name="经验" type="1">
      <Title id="19898838" name="3表连接 固定输出2张表" type="0">select * from 
(
   select B.Use_id,B.Use_dr,B.Use_nm,A.BrandCode,A.BrandName from tbbrand as A,fila01a AS B where B.Use_id in('1001','1002','1003') 
 )
as A left join 
(
   select * from tbChannelPlan where  SaleYear = 2021 or SaleYear is null
)
 as  B on a.BrandCode=B.brandCode and A.Use_id = b.Use_id 
ORDER by A.Use_id</Title>
    </Title>
    <Title id="8473294" name="常用方法" type="1">
      <Title id="29709888" name="除数为零" type="0">case when sum(Com_qu)&lt;&gt;0 then (SUM(Com_pr)/SUM(Com_qu)) else 0 end as Com_pr,



//判断多重除数是否为零
case when Com_pr2=0 then 0 when Month_index=0 then 0 else  (Com_pr1 - Com_pr2)/Com_pr2*Com_pr3/Month_index end as YuGu,</Title>
      <Title id="25496383" name="追加列" type="0">alter   table   filc02a   add   nickname   char(20)




alter table tbSetSKUStyle add Note  varchar(500)  default '' with values
--追加列后添加默认值</Title>
      <Title id="29718467" name="SQL建表" type="0">IF OBJECT_ID('tbPriceRange')IS NOT NULL
	DROP Table tbPriceRange
GO
Create Table tbPriceRange
(
   Pr_id int IDENTITY(1, 1) PRIMARY key,
   Pr_nm varchar(50) NOT NULL,
   Pr_begin decimal(18,8) NOT NULL,
   Pr_end  decimal(18,8) NOT NULL	
)</Title>
      <Title id="36069110-c98d-41be-b22b-37fbae689c2f" name="SQL 获取日期" type="0">Convert(varchar(20) ,GetDate(),120)</Title>
      <Title id="4f0d2320-ce78-44db-aeeb-5913dbd89c89" name="保留2位小数" type="0">
select Convert(decimal(18,2),0.123456)</Title>
      <Title id="d6bd7391-590c-42ab-8988-b99e61b7ac25" name="筛选重复项" type="0">select StaffCode,StaffName,IDCardCode,Mobile,Sex,Email from tbCustomerInf where StaffName in
 (
    select StaffName from tbCustomerInf  group by StaffName having COUNT(StaffName)&gt;1
 ) order by StaffName


记得Order by 一下</Title>
    </Title>
  </StarTitle>
  <StarTitle id="81888957" name="JavaScript" type="1">
    <Title id="36664373" name="方法" type="1">
      <Title id="17182732" name="判断为数字或字符" type="0">var bool = isNaN(x)

返回布尔值 true为字符 false为数字</Title>
      <Title id="98176313" name="全选多选框" type="0">function fun(ck)
   {
      var chen = document.getElementById('&lt;%=GridView1.ClientID%&gt;');
      for(i=1;i&lt;chen.rows.length-1;i++)
      {
         var dd = chen.rows[i].cells[0].childNodes[0];
          dd.checked = ck.checked;
      }
   }

调用: &lt;input ID="Checkbox1" type="checkbox" onclick="fun(this)" /&gt;

在ASP.NET的GridView中点击全选
</Title>
      <Title id="5467805" name="Windows常用方法" type="0">1.alert("提示信息");显示一个带有提示信息和确定按钮的对话框

2.confirm("提示信息");显示一个带有提示信息、确定和取消按钮的对话框

3.open("url","name");打开具有指定名称的新窗口，并且加载给指定URL所指定的文档；如果没有提供URL，则打开一个空白文档

4.close();关闭当前窗口

5.showModalDialog();在一个模式窗口中显示指定的HTML文档


-----------------------open()示例--------------------------
open("index.html","登录窗口","toolbars=0,location=0,statusbars=0,
           menubars=0,width=700,height=500,scrollbars=1");

height：窗口的宽度
width：窗口的宽度
toolbars：浏览器工具条，包括 “后退”和“前进”按钮等 yes为显示
scrollbars：是否显示滚动条
menubar：表示菜单栏
location：是否显示地址，yes或1为是，no或0为否
status：是否显示状态内的信息，yes或1为允许
resizable：是否允许改变窗口的大小，yes或1为是，no或0为否

**********showModalDialog()属性和open()一样
</Title>
      <Title id="94600766" name="setTimeout()方法" type="0"> setTimeout("showTime()",1000);
其中，setTimeout为内置函数，showTime()为被调用的自定义函数，并且每隔1000毫秒就被调用一次 


------------------------示例
    &lt;script&gt;
       function showTime()
       {
         var time = new Date();
         var hour = time.getHours();
         var minute = time.getMinutes();
         var second = time.getSeconds();
         document.textBox1.value= hour+":"+minute+":"+second;
       }
       var myTime = setTimeout("showTime()",1000);
    &lt;/script&gt;</Title>
      <Title id="51217393" name="动态添加Table行" type="0">&lt;html &gt;
&lt;head&gt;
    &lt;title&gt;动态添加Table行&lt;/title&gt;
    &lt;script type="text/javascript"&gt;
          function AddNewRow()
          {
                var row_index= document.getElementById("hidItemList").value;  
                var new_row=Table1.insertRow(Table1.rows.length);  
                new_row.setAttribute("id", "row"+row_index);  
                new_row.setAttribute("align", "center");
                var new_col=new_row.insertCell(0);
                new_col.innerHTML="&lt;span id='spanID"+row_index+"'&gt;用户ID"+row_index+"&lt;/span&gt;";  
                var new_col=new_row.insertCell(1);
                new_col.innerHTML="&lt;span id='spanItem"+row_index+"'&gt;用户名"+row_index+"&lt;/span&gt;";  
                var new_col=new_row.insertCell(2);
                new_col.innerHTML="&lt;input type='text' name='txtMATNR"+row_index+"' style='width: 90px' &gt;";  
                var new_col=new_row.insertCell(3);
                new_col.innerHTML="&amp;nbsp;&lt;span id='spanGG"+row_index+"'&gt;&lt;/span&gt;";  
                var new_col=new_row.insertCell(4);
                new_col.innerHTML="&lt;input type='button' value='删除此行' name='btnDel"+row_index+"'  style='width: 60px' onclick=\"delete_row('row"+row_index+ "')\"&gt;";  
                document.getElementById("hidItemList").value = parseInt(row_index)+1;
          }  
          function delete_row(rname)   
          {
                var i;  
                i=Table1.rows(rname).rowIndex;
                Table1.deleteRow(i);
          }
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
        &lt;table border="1" width="600px" id="Table1"&gt;
            &lt;tr align="center"&gt;
                &lt;td&gt;用户ID&lt;/td&gt;
                &lt;td&gt;用户名&lt;/td&gt;
                &lt;td&gt;性别&lt;/td&gt;
                &lt;td&gt;年龄&lt;/td&gt;
                &lt;td&gt;删除&lt;/td&gt;
                
            &lt;/tr&gt;
        &lt;/table&gt;
        &lt;input id="新增Item" type="button" value="button"  onclick="AddNewRow()"/&gt;
        &lt;input id="hidItemList" type="hidden"  value="1"/&gt;
&lt;/body&gt;
&lt;/html&gt;
</Title>
      <Title id="91638364" name="遍历GridView控件" type="0"> var GridView1 = document.getElementById("MainContent_gvCaiLiao")
           for (i = 1; i &lt; GridView1.rows.length; i++) {
               var bool = GridView1.rows[i].cells[1].getElementsByTagName("INPUT")[0];
               alert(bool.value);
           }


INPUT 表示 这个在GridView里的文本框是 INPUT标签！</Title>
      <Title id="97750987" name="常用方法" type="0">获得焦点 txtBox..focus();
</Title>
      <Title id="80313164" name="获取鼠标坐标" type="0">         divOutText.style.pixelTop = event.clientY;
         divOutText.style.pixelLeft = event.clientX;  



event.clientX 这个就是鼠标的坐标</Title>
      <Title id="85634649" name="跳转" type="0">document.location.href="xxxx.htm"</Title>
      <Title id="99624856" name="int、float转换" type="0">parseInt()和parseFloat()</Title>
      <Title id="f910d3a2-db94-417f-8c31-f5e8878abb1f" name="获取URL参数" type="0">&lt;script type="text/javascript"&gt;
    function request(paras) {
        var url = location.href;
        var paraString = url.substring(url.indexOf("?") + 1, url.length).split("&amp;");
        var paraObj = {}
        for (i = 0; j = paraString[i]; i++) {
            paraObj[j.substring(0, j.indexOf("=")).toLowerCase()] = j.substring(j.indexOf("=") + 1, j.length);
        }
        var returnValue = paraObj[paras.toLowerCase()];
        if (typeof (returnValue) == "undefined") {
            return "";
        } else {
            return returnValue;
        }
    }
&lt;/script&gt;



var  ipx  = request("IPX");
var ipy = request("IPY");

//http://112.124.26.5/xiaohu/PageDetail/Member/MapTest.aspx?IPX=31.233&amp;IPY=234.45 
</Title>
    </Title>
    <Title id="46402179" name="语法" type="1">
      <Title id="66869668" name="类型转换" type="0">var a = parseInt();
var b = parseFloat();
</Title>
      <Title id="79054099" name="时间用法Date" type="0">------------------------Date--------------------------------
var time = new Date();    当前时间
var time = new Date("2013/1/4");  自定义设置时间

Date对象方法的参数对应
Seconds(秒) 和  minutes(分)——0~59
Hours—— 0~23
Day —— 0~6 (星期中的每一天)
Date —— 1~31(一个月中的每一天)
Months—— 0~11(1-12个月)


---------------------get分组 和 set分组方法------------------
◇getDate()  返回一个月中的每一天，值 1~31之间

◇getDay() 返回星期中的每一天，值 0~6 之间

◇getHours() 返回小时数，值 0~23之间

◇getMinutes() 返回分钟数，值 0~59之间

◇getSeconds() 返回秒数，值 0~59之间

◇getMonth() 返回月份，值 0~11之间

◇getFullYear() 返回年份，其值为4位数

◇getTime() 返回自某一时刻(1970年1月1日)以来的毫秒数

❤❤❤get取值 而set是赋值~~用法一样


</Title>
      <Title id="38917150" name="div显示和隐藏属性" type="0">document.getElementById("div2").style.display = "block";

document.getElementById("div2").style.display = "none"

</Title>
      <Title id="49226933" name="创建数组" type="0"> var va = new Array();
</Title>
      <Title id="24373212" name="split()分隔符" type="0">var ref = "a|b|c|d";

var va = new Array();
         va = ref.split("|")

va ==  {'a','b','c','d',};

</Title>
      <Title id="92015728" name="RadioButtonList在JS中判断是否选中" type="0"> var rbltable = document.getElementById("RadioButtonList1");
            var rbs = rbltable.getElementsByTagName("INPUT");
            rbs[0].checked = true;

 其结果 第一项被选中 如果是 rbs[1]的话就是第二项被选中</Title>
    </Title>
    <Title id="12446547" name="其它" type="1">
      <Title id="36852551" name="上传文件" type="0">function fun(FileUpload)
      {
          var fu = FileUpload.value;
          fu = fu.toLowerCase().substr(fu.lastIndexOf("."));
          if(fu ==".jpg" || fu == ".doc" || fu ==".bmp")
          {
            return true
          }
          else
          {
             FileUpload.value = "";
             alert("格式不正确");
          }        
      }

 &lt;asp:FileUpload ID="FileUpload1" onchange="return fun(this)" runat="server" /&gt;
</Title>
      <Title id="16521737" name="获取TABLE父子控件" type="0">&lt;HTML&gt;
 &lt;HEAD&gt;
 &lt;/HEAD&gt;

 &lt;BODY&gt;
 &lt;script&gt;
 function find(obj)
 {
         //tr的对象obj
         //obj.parentElement就是table
         //obj.parentElement.children.length，table的孩子数
         //obj.parentElement.children(1),就是table的第2个孩子(tr)
         //obj.parentElement.children(1).children(0),就是就是table的第2个孩子(tr)的第一个孩子(td),就这样找...都能找到
 alert(obj.parentElement.children(0).children(0).innerText);
//显示1
 }
 &lt;/script&gt;
&lt;table width='50%' border=1&gt;
 &lt;tr onClick='find(this);'&gt;
  &lt;td&gt;1
  &lt;/td&gt;
  &lt;td&gt;2
  &lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;3
  &lt;/td&gt;
  &lt;td&gt;4
  &lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;
&lt;/BODY&gt;
&lt;/HTML&gt; </Title>
    </Title>
    <Title id="40593986" name="控件" type="1">
      <Title id="1936012" name="日期控件" type="0">◆◆◆本地目录
JS---JScriptd.js

用法：

&lt;script type="text/javascript" src="../../Script/JScriptd.js"&gt;&lt;/script&gt;

&lt;input ID="txtBirtdy" type="text" runat="server" readonly="readonly"  onclick="setday(this)"  /&gt;
</Title>
    </Title>
    <Title id="52846218" name="常用方法" type="1">
      <Title id="a6f60124-2c34-4c62-b1a4-da544399dc4d" name="DropDownList 在JS里的SelectInde" type="0"> document.getElementById("&lt;%=ddlPro.ClientID %&gt;").options[0].selected = true;




</Title>
      <Title id="38e544c2-147a-49ad-9a6c-93a241f821f2" name="DropDownList 在JS里 取值" type="0">  var d = document.getElementById("&lt;%=ddlPro.ClientID %&gt;");
         var typeValue = d.options[d.selectedIndex].text;
         alert(typeValue);




//备注
var typeValue = d.options[d.selectedIndex].text; //获取内容
var typeValue = d.options[d.selectedIndex].value; //获取绑定ID</Title>
    </Title>
  </StarTitle>
  <StarTitle id="83384976" name="HTML" type="1">
    <Title id="23567175" name="语法" type="1">
      <Title id="71479302" name="特殊字符" type="0">&amp;nbsp;  空格
&amp;gt;    大于 "&gt;"
&amp;lt;    小于 "&lt;"
&amp;quot   引号 “" "”
&amp;copy   版权号 "@"</Title>
    </Title>
    <Title id="55721029" name="CSS样式" type="1">
      <Title id="56695861" name="基本结构" type="0">&lt;style&gt;
    p{
           color:red;
           font-size:30px;
           font-family:隶书;
      }
&lt;/style&gt;

定义在 &lt;head&gt;&lt;/head&gt; 标签内</Title>
      <Title id="97260541" name="引用外部样式" type="0">&lt;head&gt;
     &lt;LINK rel="sty" stye="text/css" href="newsy.css"&gt;
&lt;/head&gt;

rel表示使用这个外部样式
href 指定样式文件

----------------另一种方式---------------------------
&lt;style&gt;
    @improt newsy.css
&lt;/style&gt;</Title>
      <Title id="74066241" name="特殊样式" type="0">&lt;style&gt;
    A:hover{
           color:red;
           font-size:30px;
           font-family:隶书;
      }
    A:link{
           color:red;
           font-size:30px;
           font-family:隶书;

                  }
&lt;/style&gt;

A:link 未必访问的链接样式
A:visited 已被访问的链接样式
A:hover  鼠标悬浮在链接上的样式
A:active  鼠标正在按下链接文本的样式</Title>
      <Title id="83889362" name="类样式" type="0">&lt;style&gt;
    .theClass{
           color:red;
           font-size:30px;
           font-family:隶书;
      }
&lt;/style&gt;

&lt;font class="theClass"&gt;.........&lt;/font&gt;</Title>
      <Title id="23423500" name="改变鼠标样式" type="0"> .flow_out
 {
     cursor:hand;
 }

变成小手的样子

</Title>
      <Title id="74090124" name="删除文本滚动条" type="0">

 overflow:hidden;
</Title>
      <Title id="74358597" name="常用样式" type="1">
        <Title id="31083336" name="红色边框" type="0"> border:#FF0000 1px solid;
</Title>
        <Title id="d7550f57-398d-41e7-916f-b9feaf627869" name="无边框文本" type="0">    .noline 
{ 
        BACKGROUND-COLOR:   transparent; 
        BORDER-BOTTOM:   1px none #a0a0a0; 
        FONT-SIZE:   12px;
        width: 90px;
        border-left-style: none;
        border-left-color: inherit;
        border-left-width: medium;
        border-right-style: none;
        border-right-color: inherit;
        border-right-width: medium;
        border-top-style: none;
        border-top-color: inherit;
        border-top-width: medium;
        }
</Title>
        <Title id="585f7a05-41f4-4095-86ba-02ad9adae34c" name="div 增加滚动条" type="0">&lt;div style=" overflow:scroll"&gt; 这里是你要显示的内容 &lt;/div&gt;</Title>
        <Title id="acd48a1a-4c3e-4f42-b3c9-6091135c6b4e" name="DIV 文本居中" type="0">text-align:center;   水平 


line-height:40px;  设置行高 就可以垂直居中 


vertical-align:middle;   这个限在IE里可以居中</Title>
      </Title>
    </Title>
    <Title id="27078708" name="标签" type="1">
      <Title id="83387981" name="基本标签库" type="0">&lt;p&gt;&lt;/p&gt;  段落标签
&lt;br&gt;     换行标签
&lt;hr&gt;          水平线</Title>
      <Title id="82480187" name="图片标签&lt;IMG&gt;" type="0">&lt;IMG src="img/001.jpg" alt="图片提示"&gt;

align属性可用于调整图像相对于周围文本的对齐方式 可取值：
“top,bottom,middle,left,right”
top:顶部
bottom：底部
Middle：中部
</Title>
      <Title id="41032489" name="有(无)序列表&lt;UL&gt;&lt;OL&gt;" type="0">---------------------无序列表------------------
&lt;UL type="circle"&gt;
    &lt;LI&gt; one &lt;/LI&gt;
    &lt;LI&gt; two &lt;/LI&gt;
    &lt;LI&gt; ... &lt;/LI&gt;
&lt;/UL&gt;
type取值：disc（默认值，实心圆）circle（空心圆）square（空心正方）

----------------------有序列表---------------------
&lt;OL type="1"&gt;
    &lt;LI&gt; one &lt;/LI&gt;
    &lt;LI&gt; two &lt;/LI&gt;
    &lt;LI&gt; ... &lt;/LI&gt;
&lt;/OL&gt;
type取值："A”，“1”</Title>
      <Title id="40699481" name="预格式文本&lt;PRE&gt;" type="0">&lt;PRE&gt;
   标签内自定义格式 显示出的文本与标签内定义的完全一样
&lt;/PRE&gt;</Title>
      <Title id="12077193" name="滚动标签&lt;Marquee&gt;" type="0">&lt;Marquee scrolldelay="100" direction="up" onmouseover="this.stop()"
onMouseOut="this.start()"&gt;

scrolldela  表示延迟时间 默认为90ms，
direction  滚动方向取值 up，down，left，right</Title>
      <Title id="30243861" name="表格&lt;table&gt;" type="0">&lt;table&gt;
   &lt;tr&gt;
     &lt;td &gt;..&lt;td&gt;
     &lt;td&gt;..&lt;td&gt;
   &lt;/tr&gt;
  &lt;tr&gt;
     &lt;td&gt;..&lt;td&gt;
     &lt;td&gt;..&lt;td&gt;
   &lt;/tr&gt;
&lt;/table&gt;

 colspan="2" 跨列   rowspan="2" 跨行  border="1" 边框宽度

 celladding   内容与边框的距离
 cellspacing    表格内框宽度(表格之间的距离)</Title>
      <Title id="38019949" name="表单标签" type="0">-------------------------基本表单---------------------------------
&lt;input type="botton" name="but" id="but" &gt; 
type取值 
text 默认文本框，
submit 提交
reset 重置
password密码框，
radio 单选框
checkbox  多选框
-------------------------列表框-----------------------------------
&lt;select name="指定列表名" size="行数"&gt;
   &lt;option value="可选的值" selected&gt;...&lt;/option&gt;
   &lt;option value="可选的值"&gt;...&lt;/option&gt;
&lt;/select&gt;
-----------------------------多行文本框---------------------------
&lt;textarea cols="40" rows="6"&gt;&lt;/textarea&gt;

cols指定多行文本的列数 
rows文本框的行数
--------------------------事件-----------------------------------
&lt;inpiut type="text" name="t1"&gt; 
◇onBlur  失去焦点事件，当光标离开某个文件筐时触发

◇onFocus 光标进入某个文本框

◇onChange文本框的内容被修改，即发生改变

◆focus() 获得焦点，即获得鼠标光标

◆select()选中文本内容，突出显示输入区域</Title>
      <Title id="74875283" name="框架&lt;Frameset&gt;" type="0">&lt;Frameset bordercolor="red" rows="25%,50%,*"&gt;
    &lt;Frame name="top" src="xxxx1.html"&gt;
    &lt;Frame name="middle" src="xxxx2.html" noresize&gt;
    &lt;Frame name="bottom" src="xxxx3.html" scrolling="no"&gt;
&lt;/Freameset&gt;
 
noresize禁止改变框架窗口大小
scrolling不显示滚动条</Title>
    </Title>
  </StarTitle>
  <StarTitle id="77397572" name="Silverlight" type="1">
    <Title id="82387365" name="语法" type="1">
      <Title id="53248863" name="设置鼠标形状" type="0">Cursors.Hand  ---- 手形状

element.Cursor = Cursors.XXX
</Title>
      <Title id="32879071" name="Silverlight调用WCF查询SQL" type="0">一.建立好Silverlight项目后 在解决方案中添加“WCF服务应用程序”

二.更改或建立 WCF接口
   例如： 
    [ServiceContract]
    public interface IService1
    {
        [OperationContract]
        public string GetAll();
    }

三.添加数据约定(实体类)
  例如：
   [DataContract]
    public class UserList
    {
        [DataMember]
        public string Name
        {
            get;
            set;
        }
      //...省略其他属性
    }

四.在.svc文件(默认为Service1.svc)实现接口中的方法！

五.修改Web.config
   例如：
   &lt;behaviors&gt;
      &lt;serviceBehaviors&gt;
        &lt;behavior name="Post1" &gt;
          &lt;serviceMetadata httpGetEnabled="true" /&gt;
        &lt;/behavior&gt;
      &lt;/serviceBehaviors&gt;
    &lt;/behaviors&gt;

    &lt;services&gt;
      &lt;!--name= 命ü名?空?间?+XXX.svc ; post1 要癮和í上?面? behavior name一?致?--&gt;
      &lt;service name="BlogService.Service1" behaviorConfiguration="Post1"&gt;
        &lt;!-- contract= 命ü名?空?间?+ 接ó口ú名? --&gt;
        &lt;endpoint contract="BlogService.IService1" binding="basicHttpBinding" 
                  address=""&gt;
        &lt;/endpoint&gt;
      &lt;/service&gt;
    &lt;/services&gt;

六.在WCF的根目录中添加clientaccesspolicy.xml文件否则报跨域错误

七.运行.svc文件 是否正常！！如果无误复制地址添加到 silverlight服务应用 确认命名空间

八 添加好web引用后 在项目中引入using 自身命名空间.WCF服务
  例如：
 using SilverlightAndWCF.BlogService;

namespace SilverlightAndWCF
{
 private void button1_Click(object sender, RoutedEventArgs e)
        {
            Service1Client sc = new Service1Client();
            sc.GetAllCompleted += new EventHandler&lt;GetAllCompletedEventArgs&gt;(sc_GetAllCompleted);
            sc.GetAllAsync();
        }
        void sc_GetAllCompleted(object sender, GetAllCompletedEventArgs e)
        {
            dataGrid1.ItemsSource = e.Result;
        }
}
 &lt;sdk:DataGrid ItemsSource="{Binding}" AutoGenerateColumns="True" Canvas.Left="48" Canvas.Top="86" Height="195" Name="dataGrid1" Width="306" /&gt;

注意ItemSoure的{Binding} 和AutoGenerateColumns为true否则出不来
</Title>
      <Title id="20149374" name="XML 操作" type="0">using System.Xml;
using System.Xml.Linq;//需è要癮手?工¤添?加ó引皔用?
using System.Text;
using System.IO;


 XDocument xDoc = XDocument.Load("Configer/PassWord.xml");
            var items = from f in xDoc.Descendants("PassWord")
                        select new PassWord
                        {
                            pass = f.Value
                        };
            
            List&lt;PassWord&gt; _items = new List&lt;PassWord&gt;();
            _items.AddRange(items);
            if (_items[0].pass == txtPassword.Text)
            {
               
            }
            else
            {
                MessageBox.Show("密ü码?错洙?误ó");
            }
</Title>
      <Title id="11024943" name="页面跳转" type="0">//Silverlight页面的跳转
//(Application.Current.RootVisual as IContent).Content = new DragControl();
//普通页面跳转
HtmlWindow html = HtmlPage.Window;
//html.Navigate(new Uri("http://www.0379zd.com"));//普通网址
html.Navigate(new Uri("../Index.aspx", UriKind.Relative));//相对路径

 
参考一：
方法一： 可跳转到网页
                  HtmlWindow html = HtmlPage.Window;
                  html.Navigate(new Uri(item.Link_Page.Trim(), UriKind.Relative), "_blank");

                   //System.Windows.Browser.HtmlPage.PopupWindow(new Uri(HtmlPage.Document.DocumentUri, item.Link_Page.Trim()), "_Blank",null); 

方法二：跳转到Xaml页
            this.Content = new About();

方法三：框架跳转item.Link_Page.Trim()：代表xaml名 e.g: /views/home   
           events = new System.Uri(item.Link_Page.Trim(), UriKind.Relative);
           this.ContentFrame.Source = events;

框架
 &lt;navigation:Frame x:Name="ContentFrame" Style="{StaticResource ContentFrameStyle}" 
                              Source="/Views/About" Navigated="ContentFrame_Navigated" NavigationFailed="ContentFrame_NavigationFailed"&gt;
                &lt;navigation:Frame.UriMapper&gt;
                  &lt;uriMapper:UriMapper&gt;
                    &lt;uriMapper:UriMapping Uri="" MappedUri="/Views/Home.xaml"/&gt; 
                    &lt;uriMapper:UriMapping Uri="/Views/{pageName}" MappedUri="/Views/{pageName}.xaml"/&gt;   
                    &lt;uriMapper:UriMapping Uri="/{pageName}" MappedUri="/{pageName}.xaml"/&gt;
                  &lt;/uriMapper:UriMapper&gt;
                &lt;/navigation:Frame.UriMapper&gt;               
            &lt;/navigation:Frame&gt;  
链接
&lt;HyperlinkButton x:Name="userid" NavigateUri="/Views/Home"  Style="{StaticResource LinkStyle}" TargetName="ContentFrame" /&gt;
 
参考二：
问题:从页面A跳转到页面B.
方法:在页面A的cs文件中:
1.先引入命名空间:
    using System.Windows.Browser;
2.跳转语句:

HtmlWindow html = HtmlPage.Window;
html.Navigate(new Uri("/Default.aspx",UriKind.Relative));注意黑体字部分,如果要使用相对路径的话,必须加上,全路径的话,可以不用.</Title>
    </Title>
    <Title id="88759589" name="控件" type="1">
      <Title id="76510770" name="TextBlock" type="0">--------------------------渐变效果-------------------------
Foreground. 通过这个属性可以设置文字的前景色填充。不但可以使用颜色值，还可以通过设置solid color, gradient, image 及 video笔刷进行填充。还是那句话：很好，很强大

&lt;TextBlock Text="51MVC,just for MVC" Foreground="Purple" Canvas.Top="100" Canvas.Left="100"&gt;&lt;/TextBlock&gt;
        &lt;TextBlock Text="51MVC,just for MVC" Canvas.Top="120" Canvas.Left="100"&gt;
            &lt;TextBlock.Foreground&gt; 
                &lt;LinearGradientBrush&gt; 
                    &lt;GradientStop Color="#FF0000FF" Offset="0.0" /&gt; 
                    &lt;GradientStop Color="#FFEEEEEE" Offset="1.0" /&gt; 
                &lt;/LinearGradientBrush&gt; 
            &lt;/TextBlock.Foreground&gt;
        &lt;/TextBlock&gt;
--------------------------下划线----------------------------------
&lt;TextBlock Text="51MVC,just for MVC" TextDecorations="underline" Canvas.Top="100" Canvas.Left="100"&gt;&lt;/TextBlock&gt;
-----------------------换行--------------------------------
&lt;ContentControl Width="100" Canvas.Top="100" Canvas.Left="100"&gt;
      &lt;TextBlock&gt;         
            露露神鱼非典
            &lt;LineBreak/&gt;
            地雷炸弹化妆品等
            &lt;LineBreak/&gt;
            都是好人
            &lt;LineBreak/&gt;
            --年轻的F
       &lt;/TextBlock&gt;
&lt;/ContentControl&gt;


</Title>
      <Title id="83508716" name="StackPanl布局" type="0">要将一组对象排列在竖直或水平列表
Orientation属性可以确定列表的方向. 默认为 Vertical
StackPanel 中内容的 HorizontalAlignment 和 VerticalAlignment 默认值均为 Stretch



&lt;StackPanel Margin="20"&gt;
    &lt;Rectangle Fill="Red" Width="50" Height="50" Margin="5" /&gt;
    &lt;Rectangle Fill="Blue" Width="50" Height="50" Margin="5" /&gt;
    &lt;Rectangle Fill="Green" Width="50" Height="50" Margin="5" /&gt;
    &lt;Rectangle Fill="Purple" Width="50" Height="50" Margin="5" /&gt;
&lt;/StackPanel&gt;</Title>
      <Title id="79471237" name="ScrollViewer" type="0">&lt;ScrollViewer HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Visible"&gt;
                &lt;TextBlock&gt;这a是?一?个?简ò单蹋?的?测a试?&lt;/TextBlock&gt;
            &lt;/ScrollViewer&gt;
</Title>
      <Title id="55466804" name="Grid" type="0">&lt;Grid x:Name="LayoutRoot" Background="#46461F" ShowGridLines="True"&gt; 
&lt;Grid.RowDefinitions&gt; 
&lt;RowDefinition Height="120"/&gt; 
&lt;RowDefinition Height="*"/&gt; 
&lt;/Grid.RowDefinitions&gt; 
&lt;Grid.ColumnDefinitions&gt; 
&lt;ColumnDefinition Width="100"/&gt; 
&lt;ColumnDefinition Width="*"/&gt; 
&lt;/Grid.ColumnDefinitions&gt; 

&lt;TextBlock Grid.Row="0" Grid.Column="0" Text="UserName:" VerticalAlignment="Center" Foreground="White"&gt;&lt;/TextBlock&gt; 

&lt;TextBlock Grid.Row="1" Grid.Column="0" Text="Password:" VerticalAlignment="Center" Foreground="White"&gt;&lt;/TextBlock&gt; 

&lt;TextBox Grid.Row="0" Grid.Column="1" Width="200" Height="30" HorizontalAlignment="Left"&gt;&lt;/TextBox&gt; 

&lt;TextBox Grid.Row="1" Grid.Column="1" Width="200" Height="30" HorizontalAlignment="Left"&gt;&lt;/TextBox&gt; 

&lt;/Grid&gt; </Title>
    </Title>
    <Title id="89633183" name="属性" type="1">
      <Title id="32987538" name="设置属性" type="0">-----------------------第一种---------------------------------
&lt;Rectangle Name="rectangle1" Width="100" Height="100" Fill="Blue" /&gt;

如果您清楚地了解 XAML 分析器如何解释此标记和定义对象树，则等效的代码可能类似以下伪代码：

Rectangle rectangle1 = new Rectangle();

rectangle1.Width=100.0;

rectangle1.Height=100.0;

rectangle1.Fill = new SolidColorBrush(Colors.Blue);
-----------------------第二种-----------------------------------
下面的示例使用属性元素语法通过 SolidColorBrush 对象元素来设置 Rectangle 的填充。（在 SolidColorBrush 中，Color 使用属性语法来设置。）此 XAML 的呈现结果等同于前面使用属性语法设置 Fill 的 XAML 示例。

复制&lt;Rectangle
  Name="rectangle1"
  Width="100" 
  Height="100"
&gt; 
  &lt;Rectangle.Fill&gt; 
    &lt;SolidColorBrush Color="Blue"/&gt; 
  &lt;/Rectangle.Fill&gt;
&lt;/Rectangle&gt;
</Title>
      <Title id="16561023" name="TextWrapping" type="0">指定文本在到达其容器的边缘时是否换行

Wrap : 如果某一文本行溢出了其容器的可用宽度，则会进行换行。即使标准换行算法无法确定任何换行时机（比如说，某一文本行包含较长的单词，而该单词受限于不允许滚动的固定宽度容器），此时也进行换行

NoWrap:未执行换行</Title>
    </Title>
    <Title id="81380672" name="方法" type="1">
      <Title id="16294971" name="鼠标点击移动" type="0"> &lt;Canvas Background="#46461F"&gt;
          
          &lt;Ellipse Name="ell" Width="20" Height="20" Fill="Red" 
                   MouseLeftButtonDown="OnMouseDown"
                   MouseMove="Button_MouseMove"
                   MouseLeftButtonUp="OnMouseUp"/&gt;
            
        &lt;/Canvas&gt;
-----------------------------------------------
 bool trackingMouseMove = false;
        Point mousePosition;
        
        private void Button_MouseMove(object sender, MouseEventArgs e)
        {
            FrameworkElement element = sender as FrameworkElement;
            if (trackingMouseMove)
            {
                double deltaV = e.GetPosition(null).Y - mousePosition.Y;
                double deltaH = e.GetPosition(null).X - mousePosition.X;
                double newTop = deltaV + (double)element.GetValue(Canvas.TopProperty);
                double newLeft = deltaH + (double)element.GetValue(Canvas.LeftProperty);
                element.SetValue(Canvas.TopProperty, newTop);
                element.SetValue(Canvas.LeftProperty, newLeft);
                mousePosition = e.GetPosition(null);
            }
        }

        void OnMouseUp(object sender, MouseButtonEventArgs e)
        {
            FrameworkElement element = sender as FrameworkElement;
            trackingMouseMove = false;
            element.ReleaseMouseCapture();
            mousePosition.X = mousePosition.Y = 0;
            element.Cursor = null;
        }

        void OnMouseDown(object sender, MouseButtonEventArgs e)
        {
            FrameworkElement element = sender as FrameworkElement;
            mousePosition = e.GetPosition(null);
            trackingMouseMove = true;
            if (null != element)
            {
                element.CaptureMouse();
                element.Cursor = Cursors.Hand;
            }
        }
</Title>
      <Title id="91162216" name="全屏" type="0">using System.Windows.Interop;

            Content contentObject = Application.Current.Host.Content;
            contentObject.IsFullScreen = !contentObject.IsFullScreen;
</Title>
    </Title>
    <Title id="80363645" name="异常处理" type="1">
      <Title id="52037533" name="跨域问题" type="0">在WCF或Web Service的根目录下添加一个XML文件
clientaccesspolicy.xml
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;access-policy&gt;
  &lt;cross-domain-access&gt;
    
    &lt;policy&gt;
      &lt;allow-from http-request-headers="*"&gt;
        &lt;domain uri="*"/&gt;
      &lt;/allow-from&gt;
      &lt;grant-to&gt;
        &lt;resource path="/" include-subpaths="true"/&gt;
      &lt;/grant-to&gt;
    &lt;/policy&gt;
    
  &lt;/cross-domain-access&gt;
&lt;/access-policy&gt;
如果是Flashi跨域 在添加另一个XML文件
crossdomain.xml
&lt;? xml version="1.0" ?&gt; 
&lt;cross-domain-policy &gt; 
  &lt;allow-http-request-headers-from domain ="*" headers ="*" /&gt; 
&lt;/cross-domain-policy &gt;
</Title>
    </Title>
    <Title id="2986718" name="其它" type="1">
      <Title id="86476853" name="动态添加控件" type="0"> ////textBlock里面的文本  
            StringBuilder xaml = new StringBuilder();  
            xaml.Append("&lt;TextBlock ");  
            xaml.Append("xmlns=\"http://schemas.microsoft.com/client/2007\" ");  
            xaml.Append("Canvas.Left=\"50\" Canvas.Top=\"30\"  FontSize=\"50\" ");  
            xaml.Append(" FontWeight=\"Bold\" Text=\"动态创建XAML对象\" /&gt;");  
            //创建textBlock  
            TextBlock textBlock = (TextBlock)XamlReader.Load(xaml.ToString());  
            parentCanvas.Children.Add(textBlock);  
            //line的xaml文本  
           xaml= new StringBuilder();  
            xaml.Append("&lt;Line Stroke=\"Red\" ");  
            xaml.Append("xmlns=\"http://schemas.microsoft.com/client/2007\" ");  
            xaml.Append(" X1=\"30\" Y1=\"30\" ");  
            xaml.Append(" X2=\"200\" Y2=\"200\"  StrokeThickness=\"3\" /&gt;");  
            //创建LINE对象  
            Line line = (Line)XamlReader.Load(xaml.ToString());  
            parentCanvas.Children.Add(line);          </Title>
    </Title>
  </StarTitle>
  <StarTitle id="58065929" name="WCF" type="1">
    <Title id="56865777" name="配置文件(全攻略)" type="0">1．WCF的服务端配置

服务端的配置文件主要包括endpoint、binding、behavior的配置。一个标准的服务端配置文件所包含的主要xml配置节如下所示：

以下是引用片段：
&lt;system.ServiceModel&gt;  
   &lt;services&gt; 
      &lt;service&gt; 
         &lt;endpoint/&gt; 
      &lt;/service&gt; 
   &lt;/services&gt; 
   &lt;bindings&gt; 
   &lt;!—定义一个或多个系统提供的binding元素，例如&lt;basicHttpBinding&gt; --&gt;  
   &lt;!—也可以是自定义的binding元素，如&lt;customBinding&gt;. --&gt; 
      &lt;binding&gt; 
      &lt;!—例如&lt;BasicHttpBinding&gt;元素. --&gt; 
      &lt;/binding&gt; 
   &lt;/bindings&gt; 
   &lt;behaviors&gt; 
   &lt;!—一个或多个系统提供的behavior元素. --&gt; 
      &lt;behavior&gt; 
      &lt;!—例如&lt;throttling&gt;元素. --&gt; 
      &lt;/behavior&gt; 
   &lt;/behaviors&gt; 
&lt;/system.ServiceModel&gt; 

1.1 &lt;services&gt;配置节

在&lt;services&gt;配置节中可以定义多个服务，每一个服务都被放到&lt;service&gt;配置节中，WCF的宿主程序可以通过配置文件找到这些定义的服务并发布这些服务。

&lt;service&gt;配置节包含name和behaviorConfiguration属性。其中，name配置了实现Service Contract的类型名。类型名必须是完整地包含了命名空间和类型名。而behaviorConfiguration的配置值则与其后的&lt;behaviors&gt;配置节的内容有关。&lt;endpoint&gt;是&lt;service&gt;配置节的主体，其中，&lt;endpoint&gt;配置节包含了endpoint的三个组成部分：Address、Binding和Contract。由于具体的binding配置是在&lt;bindings&gt;配置节中完成，因而，在&lt;endpoint&gt;中配置了bindingConfiguration属性，指向具体的binding配置。如下所示：

以下是引用片段：
&lt;services&gt; 
  &lt;service name="BruceZhang.MyService" behaviorConfiguration="MyBehavior"&gt; 
    &lt;endpoint address="" 
             binding="netTcpBinding" 
             bindingConfiguration="DuplexBinding" 
             contract="BruceZhang.IHello" /&gt; 
  &lt;/service&gt; 
&lt;/services&gt; 

我们也可以定义多个endpoint，例如：

以下是引用片段：
&lt;services&gt; 
  &lt;service  
      name="Microsoft.ServiceModel.Samples.CalculatorService" 
      behaviorConfiguration="CalculatorServiceBehavior"&gt; 
    &lt;endpoint address="" 
             binding="wsHttpBinding" 
             contract="Microsoft.ServiceModel.Samples.ICalculator" /&gt; 
    &lt;endpoint address="mex" 
             binding="mexHttpBinding" 
             contract=" Microsoft.ServiceModel.Samples.IMetadataExchange" /&gt; 
  &lt;/service&gt; 
&lt;/services&gt; 

如果address值为空，那么endpoint的地址就是默认的基地址（Base Address）。例如ICalculator服务的地址就是http://localhost/servicemodelsamples/service.svc，而IMetadataExchange服务的地址则为http://localhost/servicemodelsamples/service.svc/mex。这里所谓的基地址可以在&lt;service&gt;中通过配置&lt;host&gt;来定义：

以下是引用片段：
&lt;service  
      name="Microsoft.ServiceModel.Samples.CalculatorService" 
      behaviorConfiguration="CalculatorServiceBehavior"&gt; 
&lt;host&gt; 
    &lt;baseAddresses&gt; 
        &lt;add baseAddress= 
"http://localhost/ServiceModelSamples/service.svc"/&gt; 
    &lt;/baseAddresses&gt; 
&lt;/host&gt; 
&lt;endpoint … /&gt; 
&lt;/service&gt; 

1.2 &lt;behaviors&gt;配置节

当我们在定义一个实现了Service Contract的类时， binding和address信息是客户端必须知道的，否则无法调用该服务。然而，如果需要指定服务在执行方面的相关特性时，就必须定义服务的behavior。在WCF中，定义behavior就可以设置服务的运行时属性，甚至于通过自定义behavior插入一些自定义类型。例如通过指定ServiceMetadataBehavior，可以使WCF服务对外公布Metadata。配置如下：

以下是引用片段：
&lt;behaviors&gt; 
    &lt;serviceBehaviors&gt; 
    &lt;behavior name="metadataSupport"&gt; 
      &lt;serviceMetadata httpGetEnabled="true" httpGetUrl=""/&gt; 
    &lt;/behavior&gt; 
    &lt;serviceBehaviors&gt; 
&lt;behaviors&gt; 

在WCF中，behavior被定义为Attribute，其中，System.ServiceModel.ServiceBehaviorAttribute和System.ServiceModel.OperationBehaviorAttribute是最常用的behavior。虽然，behavior作为Attribute可以通过编程的方式直接施加到服务上，但出于灵活性的考虑，将behavior定义到配置文件中才是最好的设计方式。

利用ServiceBehavior与OperationBehavior可以控制服务的如下属性：

1、 对象实例的生命周期；

2、 并发与异步处理；

3、 配置行为；

4、 事务行为；

5、 序列化行为；

6、 元数据转换；

7、 会话的生命周期；

8、 地址过滤以及消息头的处理；

9、 模拟（Impersonation）；

例如，通过ServiceBehavior设置对象实例的生命周期：

以下是引用片段：
&lt;behaviors&gt; 
    &lt;serviceBehaviors&gt; 
    &lt;behavior name="metadataSupport"&gt; 
      &lt;instanceContextMode httpGetEnabled="true" httpGetUrl=""/&gt; 
    &lt;/behavior&gt; 
    &lt;serviceBehaviors&gt; 
&lt;behaviors&gt; </Title>
    <Title id="82919844" name="标准配置文件" type="0">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;configuration&gt;

  &lt;system.web&gt;
    &lt;compilation debug="true" targetFramework="4.0" /&gt;
  &lt;/system.web&gt;
  &lt;system.serviceModel&gt;

    &lt;behaviors&gt;
      &lt;serviceBehaviors&gt;
        &lt;behavior name="Post1" &gt;
          &lt;serviceMetadata httpGetEnabled="true" /&gt;
        &lt;/behavior&gt;
      &lt;/serviceBehaviors&gt;
    &lt;/behaviors&gt;

    &lt;services&gt;
      &lt;!--name= 命名空间+XXX.svc ; post1 要和上面的 behavior name一致--&gt;
      &lt;service name="Blog.Service1" behaviorConfiguration="Post1"&gt;
        &lt;!-- contract= 命名空间+ 接口名 --&gt;
        &lt;endpoint contract="Blog.IService1" binding="basicHttpBinding" address=""&gt;
        &lt;/endpoint&gt;
      &lt;/service&gt;
    &lt;/services&gt;
    
    &lt;serviceHostingEnvironment multipleSiteBindingsEnabled="true" /&gt;
  &lt;/system.serviceModel&gt;
 &lt;system.webServer&gt;
    &lt;modules runAllManagedModulesForAllRequests="true"/&gt;
  &lt;/system.webServer&gt;
  
&lt;/configuration&gt;

</Title>
  </StarTitle>
  <StarTitle id="92144100" name="Android" type="1">
    <Title id="82652182" name="XML属性" type="1">
      <Title id="50048762" name="布局" type="1">
        <Title id="83077623" name="对齐方式:gravity" type="0">android:gravity   

相关方法setGravity(int)  

设置布局管理器 对其方式  该属性支持top.botton.left.right.center_vertical.center.fill.等 几个属性 

可以用竖线分开  但不能有空格


例如 android:gravity="bottom|center_horizontal"

</Title>
        <Title id="76751784" name="排列方式:orientation" type="0">android:orientation

相关方法 setOrientation(int)


布局管理器内组建的 排列方式  可设置 horizontal（水平排列）
vertical(垂直 默认)</Title>
      </Title>
      <Title id="76661546" name="TableLayout" type="1">
        <Title id="16827986" name="3个属性 Shrinkable.Stretchable.Collapsed" type="0">Shrinkable : 该列的 所有单元格的宽度可以被收缩 以保证该单元格能适应父容器的宽度


Stretchable:该列的 所有单元格的宽度可以被拉伸，以保证组件能完全填满表格的空余空间

Collapsed:该列的所有单元格会被隐藏

android:shrinkColumns 
相关方法 setShrinkAllColumns(booleam)
设置允许被收缩的列的列序号  多个序列号之间用逗号分隔

android:seretchColumns
相关方法 setStrethAllColumns(boolean)
设置允许被拉伸的列的列序号  多个序列号之间用逗号分隔

android:collapseColumns
相关方法 setColumnCollapsed(int,boolean)
设置允许被隐藏的列的列序号  多个序列号之间用逗号分隔</Title>
      </Title>
    </Title>
    <Title id="38964576" name="语法" type="1">
      <Title id="88725307" name="后台代码查找前台控件" type="0">findViewById()


例如：final TextView show = (TextView)findViewById(R.id.show);</Title>
      <Title id="33934409" name="获取Context" type="0">getApplicationContext()</Title>
    </Title>
    <Title id="79919748" name="常用方法" type="1">
      <Title id="58075986" name="对话框" type="0">import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;

 



final Builder builder = new AlertDialog.Builder(this);
        Button bn2 =(Button)findViewById(R.id.button2);
        bn2.setOnClickListener(new View.OnClickListener()
        {
        	@Override
        	 public void onClick(View source)
        	 {
        		builder.setIcon(R.drawable.ic_launcher);   
        		builder.setTitle("对话框");
        		builder.setMessage("对话框内容");
        		builder.setPositiveButton("确定",	new OnClickListener()
        		{
        			@Override
        			public void onClick(DialogInterface dialog,int which)
        			{
        				setTitle("用户点击了确定");
        			}
        		});
        		
        		builder.setNegativeButton("取消", new OnClickListener()
        		{
        			@Override
        			public void onClick(DialogInterface dialog,int which)
        			{
        				setTitle("用户点击了取消");
        			}
        		});
        		builder.create().show();
        		 
        	 }
        });</Title>
      <Title id="44209162" name="创建Service" type="0">import android.app.Service;
import android.content.Intent;
import android.os.IBinder;

public class FirstService extends Service
{

	//必须实现的方法 
	@Override
	public IBinder onBind(Intent arg0)
	{
		return null;
	}
	
	//被创建时回调的方法
	@Override
	public void onCreate()
	{
		super.onCreate();
		System.out.println("Service is Created");
	}
	
	//Service 被启动时回调的方法
	@Override
	public int onStartCommand(Intent intent,int flags,int startId)
	{
		System.out.println("Service is Started");
		return START_STICKY;
	}
	
	@Override
	public void onDestroy()
	{
		super.onDestroy();
		System.out.println("Service is Destroyed");
	}
}


===================配置文件==========================
 &lt;service android:name=".FirstService"&gt;
            &lt;intent-filter &gt;
                &lt;action android:name="org.HelloWord.FIRSTSERVICE"/&gt;
            &lt;/intent-filter&gt;
        &lt;/service&gt;

==================启动Service====================
final Intent intent = new Intent();
intent.setAction("org.HelloWord.FIRSTSERVICE");

startService(intent); //启动

stopService(intent);  //停止
</Title>
      <Title id="5365982" name="定时器Timer" type="0">全局变量中定义 
  Timer time = new Timer();
    Handler handler = new Handler(){   
 	   
        public void handleMessage(Message msg) {   
            switch (msg.what) {       
            case 1:       
            	//需要触发的事件!! 代码段
                break;       
             }       
            super.handleMessage(msg);   
         }   
     };
     TimerTask task = new TimerTask(){   
     	   
         public void run() {   
              Message message = new Message();       
              message.what = 1;       
              handler.sendMessage(message); 
          }   
      };

在启动时 或者 load方法时 调用
       time.schedule(task, 10000); //10秒钟 调用一次

=====================循环调用方法==========================
time = new Timer(true);
time.schedule(task, 0 ,10000); //10秒钟 循环调用一次</Title>
      <Title id="47715381" name="调用WebService" type="0"> //带参数的WebService
        Button btnCWeb = (Button)findViewById(R.id.btnCWebService);
        btnCWeb.setOnClickListener(btnCWebService);



//带参数的WebService
	private Button.OnClickListener btnCWebService = new Button.OnClickListener()
	{
		 public void onClick(View v)
		 {
			    String methodName = "getSum";
			    
			    EditText editText1 = (EditText)findViewById(R.id.txtNumber1);
		        EditText editText2 = (EditText)findViewById(R.id.txtNumber2);
			    //创建传输对象
			    	HttpTransportSE ht = new HttpTransportSE(SERVICE_URL);
			    ht.debug = true; 
			    //使用SOAP1.1协议创建对象
		        SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
			    //实例化SoapObject对象
			    setTitle("安全");
			    SoapObject soapObject = new SoapObject(SERVICE_NS,methodName);
			    //添加参数 ‘a’和 ‘b’为参数名
			    soapObject.addProperty("a",editText1.getText().toString());
			    soapObject.addProperty("b",editText2.getText().toString());
			    
			    envelope.bodyOut = soapObject;
			    envelope.dotNet = true;
			    try
			    {
			    	//调用WebService 
			    	ht.call(SERVICE_NS + methodName,envelope);
			    	if(envelope.getResponse() != null)
			    	{
			    		//解析从服务器响应返回的SOAP消息
			    		SoapObject result = (SoapObject) envelope.bodyIn;
			    		setTitle(editText1.getText()+"+"+editText2.getText()+"="+result.getProperty(0).toString());
			    	}
			    }
			    catch(Exception e)
			    {
			    	setTitle("出错咯");
			    }
		 }
	};


=====================需要在调用以下这个方法防止在高版本中报错===
 //高版本连接WebService必须调用该方法不然报错
 	public void onCreate1(){
 		StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
 		.detectDiskReads()
 		.detectDiskWrites()
 		.detectNetwork()   // or .detectAll() for all detectable problems
 		.penaltyLog()
 		.build());
 		StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()
 		.detectLeakedSqlLiteObjects()
 		//.detectLeakedClosableObjects()
 		.penaltyLog()
 		.penaltyDeath()
 		.build());

 		}</Title>
      <Title id="19327545" name="发送广播BroadcastReceiver" type="0">Intent intent = new Intent();
        		intent.setAction("org.HelloWord.MyReceiver");
        		intent.putExtra("msg","第一个广播消息！O(∩_∩)O");
        		//发送
        		sendBroadcast(intent);


=================添加个类文件=====================

public class MyReceiver extends BroadcastReceiver
{
   @Override
   public void onReceive(Context context,Intent intent)
   {
	   try
	   {
	      //Thread.sleep(5000);
	      Toast.makeText(context, "接收到Intent的Action消息内容是："+intent.getStringExtra("msg"), 5000).show();
	   }
	   catch(Exception e)
	   {
		   
	   }
	  
   }
}

=================配置文件 ===========================
 &lt;receiver android:name=".MyReceiver"&gt;
           &lt;intent-filter&gt;
               &lt;action android:name="org.HelloWord.MyReceiver"/&gt;
           &lt;/intent-filter&gt;
       &lt;/receiver&gt;</Title>
      <Title id="17872714" name="在Service中弹出对话框" type="0">====================XML前台页面==(直接开启新页面 复制上去)===============
  &lt;TextView
        android:id="@+id/imgLog"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="提示信息"
        android:gravity="left|center"
        android:textSize="25px"
        android:paddingLeft="10px"
        android:paddingTop="10px"
        android:drawableLeft="@drawable/ic_launcher" /&gt;
        
     
      &lt;TextView
        android:id="@+id/txtMsg"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginLeft="20px"
        android:paddingTop="20px"
        android:paddingBottom="20px"
        android:text="TextView" /&gt;
   
         
    &lt;TableLayout android:id="@+id/table4"  android:layout_width="fill_parent" android:layout_height="fill_parent" &gt;
     &lt;TableRow android:gravity="center" &gt;
         
    &lt;Button
        android:id="@+id/btnDailgOK"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="确定" 
        android:width="100px"
        /&gt;

    &lt;Button
        android:id="@+id/btnDialgExit"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="取消"
        android:width="100px"
        /&gt;  
      &lt;/TableRow&gt;

     &lt;/TableLayout&gt;


=========================Service代码============================
---直接复制方法 调用即可 参数可以不要！
--把R.layout.thedailog 这个换成 新建立的页面

private void showSystemDialog(String str) {     
		
	        
		    AlertDialog d ;
		    View v = View.inflate(mContext, R.layout.thedailog, null);  
	        AlertDialog.Builder b = new AlertDialog.Builder(mContext);  
	        b.setView(v);  
	        d = b.create();   
	        d.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);  
	        ////d.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_OVERLAY);  
	        
	         d.show();   
  	         TextView tv = (TextView)d.findViewById(R.id.txtMsg);
  	         tv.setText(str);
                  //获取 对话框窗体的按钮 并加载事件
                  Button btnExit = (Button)d.findViewById(R.id.btnDialgExit);
		    btnExit.setOnClickListener(new View.OnClickListener() {
				
				@Override
				public void onClick(View v) {	
					
					 TextView tv = (TextView)d.findViewById(R.id.txtMsg);
	        	     tv.setText("进入了关闭按钮");
                                     //关闭当前对话框窗体
				     d.cancel();
				    
				}
			});
	        
	        WindowManager.LayoutParams lp = d.getWindow().getAttributes();                
	        WindowManager wm = (WindowManager) getSystemService(WINDOW_SERVICE);  
	        Display display = wm.getDefaultDisplay();  
	    if (display.getHeight() &gt; display.getWidth()) {  
	        lp.width = (int) (display.getWidth() * 1.0);          
	    } else {   
	        lp.width = (int) (display.getWidth() * 0.7);                  
	    }  
	        d.getWindow().setAttributes(lp);  
	        
	              
	      
	}  


===============================================
</Title>
      <Title id="28771987" name="在Service中启动Activity" type="0">//启动Activity
	private void startNewActivity() {  
        Intent mIntent = new Intent();  
        //包名称 ， 包名称+类名
        ComponentName comp = new ComponentName("org.HelloWord",  
                "org.HelloWord.HelloWorldActivity");  
        mIntent.setComponent(comp);  
        mIntent.setAction("android.intent.action.MAIN");  
        //如果想在Service中启动Activity 就必须加这段
        mIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);   
        startActivity(mIntent);  
    } </Title>
      <Title id="42904198" name="获取屏幕尺寸" type="0">private DisplayMetrics dm = new DisplayMetrics();   

getWindowManager().getDefaultDisplay().getMetrics(dm);   


宽度： dm.widthPixels;

高度： dm.heightPixels; 



//需要在
@Override
    public void onCreate(Bundle savedInstanceState) 
    {
      /// 这里实现 因为getWindowManager().方法只有这里可以调用
    }</Title>
    </Title>
    <Title id="50551247" name="错误总结" type="1">
      <Title id="24903546" name="导入包的问题" type="0">Build Path -- AddExternal Archives----

右键新创建出来的Referenced Libraries

Build Path --- Configuer BuildPath -- Order and Export 

把刚才导入进来的钩打上！！</Title>
      <Title id="73014379" name="项目导入错误" type="0">1.打开project.properties 的  target=android-xx 版本号 修改一下  2.33的对应10</Title>
      <Title id="18016488" name="调用WebService出错" type="0">低版本 没问题 高版本报错  需要调用前 执行以下方法


//高版本连接WebService必须调用该方法不然报错
 	public void onCreate1(){
 		StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
 		.detectDiskReads()
 		.detectDiskWrites()
 		.detectNetwork()   // or .detectAll() for all detectable problems
 		.penaltyLog()
 		.build());
 		StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()
 		.detectLeakedSqlLiteObjects()
 		//.detectLeakedClosableObjects()
 		.penaltyLog()
 		.penaltyDeath()
 		.build());

 		}</Title>
    </Title>
    <Title id="33260951" name="Eclipse" type="1">
      <Title id="87863639" name="导入Jar包" type="0">工程右键====&gt;Properties====&gt;Java Build path===&gt; libraries===&gt; Add Jars</Title>
    </Title>
  </StarTitle>
  <StarTitle id="17312631" name="WinCE" type="1">
    <Title id="79828112" name="语法" type="1">
      <Title id="77504285" name="程序路径" type="0">using System.Reflection;          

  string fullAppName = Assembly.GetExecutingAssembly().GetName().CodeBase;
            string fullAppPath = Path.GetDirectoryName(fullAppName);



到根目录下</Title>
    </Title>
  </StarTitle>
  <StarTitle id="67862047" name="备注" type="1">
    <Title id="13830019" name="恰恰远程桌面" type="0">  IP:210.51.44.204

  ID: adminstrator
  PWD: Qiaqia@younger2014





---------------- 微信服务器  ------------

IP:112.124.26.5

  ID: adminstrator
  PWD: younger!@#qiaqia123</Title>
    <Title id="b1751240-e79a-4057-b387-df812bbe55fb" name="cdp" type="0">远程桌面地址 222.73.164.133:3390
账号 admin
密码 CDP#life@Qiaqia

yys@0225
zonghb@idtinfo.com.cn   --抄送地址

CDPLife礼品卡订单信息

Dear Rose:


附件中是礼品卡兑换订单信息。请查收附件，谢谢！



沃特世体检订单信息
Dear Athena：
 
附件中是沃特世体检订单信息。请查收附件，谢谢！
</Title>
    <Title id="bbf6d597-5e43-4446-a44e-1f16d74d71e3" name="老杨邮箱" type="0">http://mail.idtinfo.com.cn/

帐号yangys
密码yys@0225</Title>
    <Title id="12afe286-9a82-4ff6-a941-dba3481982da" name="移动存储" type="0">\\Ix2-200-thubce</Title>
    <Title id="8b29878f-024a-4c13-bf4c-f3f7ef271b84" name="ResGen.exe 已退出" type="0">&lt;ResGenToolArchitecture&gt;Managed32Bit&lt;/ResGenToolArchitecture&gt;</Title>
    <Title id="ad2df5f2-4a73-45b6-9af9-755d75125905" name="微信账号" type="0">账号一 
 ID : bryan@etex.com.cn 
 PWD : 951159


账号二 
     youngeretex@yeah.net
PWD:951159 
名称 ： e服装 
用于Demo</Title>
    <Title id="a9a60e16-b133-4f1a-8261-8d640d6812ee" name="新大陆灌程序" type="0">在移动存储里 Criss文件夹中 找到 新大陆文件夹

打开 uBase-85x
首先把 “上海扬格.bin.ue”放入  85X文件夹中

用记事本打开 NLSetup.Cfg 

找到 “下载文件项目” 第二行 File2=85x\上海扬格.bin.ue;416

换成上海扬格.bin.ue 

然后按照更新说明 执行

关机状态 按住 扫描件 （紫色） 在按开机 1秒！
然后 按 ENT  然后 USE 或者 COM 
在执行 SetupCFG.exe 安装！

重点！在PT850上 点击Enter  1 or 2 更新 要5次 才OK！切记 每次的更新包不同

或者 直接打开 程序安装到文件中
</Title>
    <Title id="039ef432-bc79-45b9-b782-d1d474e176a9" name="电脑自动关机" type="0">开始-- 附件---系统工具---计划任务


1、创建基本任务

2.选择打开程序

3. C：\Windows\System32\shutdown.exe     参数 -s  

</Title>
    <Title id="b9a309d5-70a5-47e8-b4b3-2a7e4a31e012" name="阿里云" type="0">阿里云帐号
用户名 hi30104727@aliyun.com
密码 admin888改Younger2014

阿里云远程桌面
112.124.26.5
administrator
younger!@#qiaqia123改younger!@#$%^younger

ECSHOP服务器已经搭建完毕，访问地址为：&lt;http://115.29.28.220&gt;
后台管理地址为：&lt;http://115.29.28.220/admin&gt;
后台访问用户名：admin 密码：younger123改Younger2014
ECSHOP服务器远程访问地址：115.29.28.220
用户名：administrator 密码：Younger123qiaqia (Y大写)改younger!@#$%^younger
Vnc= 1235609
</Title>
  </StarTitle>
</NOTE>